!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.QMV=e():t.QMV=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=44)}([function(t,e,n){!function(t){"use strict";var n={};n.exports=e,function(t){if(!e)var e=1e-6;if(!n)var n="undefined"!=typeof Float32Array?Float32Array:Array;if(!r)var r=Math.random;var i={};i.setMatrixArrayType=function(t){n=t},void 0!==t&&(t.glMatrix=i);var a=Math.PI/180;i.toRadian=function(t){return t*a};var o={};o.create=function(){var t=new n(2);return t[0]=0,t[1]=0,t},o.clone=function(t){var e=new n(2);return e[0]=t[0],e[1]=t[1],e},o.fromValues=function(t,e){var r=new n(2);return r[0]=t,r[1]=e,r},o.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t},o.set=function(t,e,n){return t[0]=e,t[1]=n,t},o.add=function(t,e,n){return t[0]=e[0]+n[0],t[1]=e[1]+n[1],t},o.subtract=function(t,e,n){return t[0]=e[0]-n[0],t[1]=e[1]-n[1],t},o.sub=o.subtract,o.multiply=function(t,e,n){return t[0]=e[0]*n[0],t[1]=e[1]*n[1],t},o.mul=o.multiply,o.divide=function(t,e,n){return t[0]=e[0]/n[0],t[1]=e[1]/n[1],t},o.div=o.divide,o.min=function(t,e,n){return t[0]=Math.min(e[0],n[0]),t[1]=Math.min(e[1],n[1]),t},o.max=function(t,e,n){return t[0]=Math.max(e[0],n[0]),t[1]=Math.max(e[1],n[1]),t},o.scale=function(t,e,n){return t[0]=e[0]*n,t[1]=e[1]*n,t},o.scaleAndAdd=function(t,e,n,r){return t[0]=e[0]+n[0]*r,t[1]=e[1]+n[1]*r,t},o.distance=function(t,e){var n=e[0]-t[0],r=e[1]-t[1];return Math.sqrt(n*n+r*r)},o.dist=o.distance,o.squaredDistance=function(t,e){var n=e[0]-t[0],r=e[1]-t[1];return n*n+r*r},o.sqrDist=o.squaredDistance,o.length=function(t){var e=t[0],n=t[1];return Math.sqrt(e*e+n*n)},o.len=o.length,o.squaredLength=function(t){var e=t[0],n=t[1];return e*e+n*n},o.sqrLen=o.squaredLength,o.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t},o.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t},o.normalize=function(t,e){var n=e[0],r=e[1],i=n*n+r*r;return i>0&&(i=1/Math.sqrt(i),t[0]=e[0]*i,t[1]=e[1]*i),t},o.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]},o.cross=function(t,e,n){var r=e[0]*n[1]-e[1]*n[0];return t[0]=t[1]=0,t[2]=r,t},o.lerp=function(t,e,n,r){var i=e[0],a=e[1];return t[0]=i+r*(n[0]-i),t[1]=a+r*(n[1]-a),t},o.random=function(t,e){e=e||1;var n=2*r()*Math.PI;return t[0]=Math.cos(n)*e,t[1]=Math.sin(n)*e,t},o.transformMat2=function(t,e,n){var r=e[0],i=e[1];return t[0]=n[0]*r+n[2]*i,t[1]=n[1]*r+n[3]*i,t},o.transformMat2d=function(t,e,n){var r=e[0],i=e[1];return t[0]=n[0]*r+n[2]*i+n[4],t[1]=n[1]*r+n[3]*i+n[5],t},o.transformMat3=function(t,e,n){var r=e[0],i=e[1];return t[0]=n[0]*r+n[3]*i+n[6],t[1]=n[1]*r+n[4]*i+n[7],t},o.transformMat4=function(t,e,n){var r=e[0],i=e[1];return t[0]=n[0]*r+n[4]*i+n[12],t[1]=n[1]*r+n[5]*i+n[13],t},o.forEach=function(){var t=o.create();return function(e,n,r,i,a,o){var s,u;for(n||(n=2),r||(r=0),u=i?Math.min(i*n+r,e.length):e.length,s=r;s<u;s+=n)t[0]=e[s],t[1]=e[s+1],a(t,t,o),e[s]=t[0],e[s+1]=t[1];return e}}(),o.str=function(t){return"vec2("+t[0]+", "+t[1]+")"},void 0!==t&&(t.vec2=o);var s={};s.create=function(){var t=new n(3);return t[0]=0,t[1]=0,t[2]=0,t},s.clone=function(t){var e=new n(3);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},s.fromValues=function(t,e,r){var i=new n(3);return i[0]=t,i[1]=e,i[2]=r,i},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},s.set=function(t,e,n,r){return t[0]=e,t[1]=n,t[2]=r,t},s.add=function(t,e,n){return t[0]=e[0]+n[0],t[1]=e[1]+n[1],t[2]=e[2]+n[2],t},s.subtract=function(t,e,n){return t[0]=e[0]-n[0],t[1]=e[1]-n[1],t[2]=e[2]-n[2],t},s.sub=s.subtract,s.multiply=function(t,e,n){return t[0]=e[0]*n[0],t[1]=e[1]*n[1],t[2]=e[2]*n[2],t},s.mul=s.multiply,s.divide=function(t,e,n){return t[0]=e[0]/n[0],t[1]=e[1]/n[1],t[2]=e[2]/n[2],t},s.div=s.divide,s.min=function(t,e,n){return t[0]=Math.min(e[0],n[0]),t[1]=Math.min(e[1],n[1]),t[2]=Math.min(e[2],n[2]),t},s.max=function(t,e,n){return t[0]=Math.max(e[0],n[0]),t[1]=Math.max(e[1],n[1]),t[2]=Math.max(e[2],n[2]),t},s.scale=function(t,e,n){return t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t},s.scaleAndAdd=function(t,e,n,r){return t[0]=e[0]+n[0]*r,t[1]=e[1]+n[1]*r,t[2]=e[2]+n[2]*r,t},s.distance=function(t,e){var n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2];return Math.sqrt(n*n+r*r+i*i)},s.dist=s.distance,s.squaredDistance=function(t,e){var n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2];return n*n+r*r+i*i},s.sqrDist=s.squaredDistance,s.length=function(t){var e=t[0],n=t[1],r=t[2];return Math.sqrt(e*e+n*n+r*r)},s.len=s.length,s.squaredLength=function(t){var e=t[0],n=t[1],r=t[2];return e*e+n*n+r*r},s.sqrLen=s.squaredLength,s.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},s.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t},s.normalize=function(t,e){var n=e[0],r=e[1],i=e[2],a=n*n+r*r+i*i;return a>0&&(a=1/Math.sqrt(a),t[0]=e[0]*a,t[1]=e[1]*a,t[2]=e[2]*a),t},s.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]},s.cross=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=n[0],s=n[1],u=n[2];return t[0]=i*u-a*s,t[1]=a*o-r*u,t[2]=r*s-i*o,t},s.lerp=function(t,e,n,r){var i=e[0],a=e[1],o=e[2];return t[0]=i+r*(n[0]-i),t[1]=a+r*(n[1]-a),t[2]=o+r*(n[2]-o),t},s.random=function(t,e){e=e||1;var n=2*r()*Math.PI,i=2*r()-1,a=Math.sqrt(1-i*i)*e;return t[0]=Math.cos(n)*a,t[1]=Math.sin(n)*a,t[2]=i*e,t},s.transformMat4=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=n[3]*r+n[7]*i+n[11]*a+n[15];return o=o||1,t[0]=(n[0]*r+n[4]*i+n[8]*a+n[12])/o,t[1]=(n[1]*r+n[5]*i+n[9]*a+n[13])/o,t[2]=(n[2]*r+n[6]*i+n[10]*a+n[14])/o,t},s.transformMat3=function(t,e,n){var r=e[0],i=e[1],a=e[2];return t[0]=r*n[0]+i*n[3]+a*n[6],t[1]=r*n[1]+i*n[4]+a*n[7],t[2]=r*n[2]+i*n[5]+a*n[8],t},s.transformQuat=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=n[0],s=n[1],u=n[2],l=n[3],c=l*r+s*a-u*i,h=l*i+u*r-o*a,f=l*a+o*i-s*r,d=-o*r-s*i-u*a;return t[0]=c*l+d*-o+h*-u-f*-s,t[1]=h*l+d*-s+f*-o-c*-u,t[2]=f*l+d*-u+c*-s-h*-o,t},s.rotateX=function(t,e,n,r){var i=[],a=[];return i[0]=e[0]-n[0],i[1]=e[1]-n[1],i[2]=e[2]-n[2],a[0]=i[0],a[1]=i[1]*Math.cos(r)-i[2]*Math.sin(r),a[2]=i[1]*Math.sin(r)+i[2]*Math.cos(r),t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t},s.rotateY=function(t,e,n,r){var i=[],a=[];return i[0]=e[0]-n[0],i[1]=e[1]-n[1],i[2]=e[2]-n[2],a[0]=i[2]*Math.sin(r)+i[0]*Math.cos(r),a[1]=i[1],a[2]=i[2]*Math.cos(r)-i[0]*Math.sin(r),t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t},s.rotateZ=function(t,e,n,r){var i=[],a=[];return i[0]=e[0]-n[0],i[1]=e[1]-n[1],i[2]=e[2]-n[2],a[0]=i[0]*Math.cos(r)-i[1]*Math.sin(r),a[1]=i[0]*Math.sin(r)+i[1]*Math.cos(r),a[2]=i[2],t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t},s.forEach=function(){var t=s.create();return function(e,n,r,i,a,o){var s,u;for(n||(n=3),r||(r=0),u=i?Math.min(i*n+r,e.length):e.length,s=r;s<u;s+=n)t[0]=e[s],t[1]=e[s+1],t[2]=e[s+2],a(t,t,o),e[s]=t[0],e[s+1]=t[1],e[s+2]=t[2];return e}}(),s.angle=function(t,e){var n=s.fromValues(t[0],t[1],t[2]),r=s.fromValues(e[0],e[1],e[2]);s.normalize(n,n),s.normalize(r,r);var i=s.dot(n,r);return i>1?0:Math.acos(i)},s.str=function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},void 0!==t&&(t.vec3=s);var u={};u.create=function(){var t=new n(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},u.clone=function(t){var e=new n(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},u.fromValues=function(t,e,r,i){var a=new n(4);return a[0]=t,a[1]=e,a[2]=r,a[3]=i,a},u.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},u.set=function(t,e,n,r,i){return t[0]=e,t[1]=n,t[2]=r,t[3]=i,t},u.add=function(t,e,n){return t[0]=e[0]+n[0],t[1]=e[1]+n[1],t[2]=e[2]+n[2],t[3]=e[3]+n[3],t},u.subtract=function(t,e,n){return t[0]=e[0]-n[0],t[1]=e[1]-n[1],t[2]=e[2]-n[2],t[3]=e[3]-n[3],t},u.sub=u.subtract,u.multiply=function(t,e,n){return t[0]=e[0]*n[0],t[1]=e[1]*n[1],t[2]=e[2]*n[2],t[3]=e[3]*n[3],t},u.mul=u.multiply,u.divide=function(t,e,n){return t[0]=e[0]/n[0],t[1]=e[1]/n[1],t[2]=e[2]/n[2],t[3]=e[3]/n[3],t},u.div=u.divide,u.min=function(t,e,n){return t[0]=Math.min(e[0],n[0]),t[1]=Math.min(e[1],n[1]),t[2]=Math.min(e[2],n[2]),t[3]=Math.min(e[3],n[3]),t},u.max=function(t,e,n){return t[0]=Math.max(e[0],n[0]),t[1]=Math.max(e[1],n[1]),t[2]=Math.max(e[2],n[2]),t[3]=Math.max(e[3],n[3]),t},u.scale=function(t,e,n){return t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t[3]=e[3]*n,t},u.scaleAndAdd=function(t,e,n,r){return t[0]=e[0]+n[0]*r,t[1]=e[1]+n[1]*r,t[2]=e[2]+n[2]*r,t[3]=e[3]+n[3]*r,t},u.distance=function(t,e){var n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2],a=e[3]-t[3];return Math.sqrt(n*n+r*r+i*i+a*a)},u.dist=u.distance,u.squaredDistance=function(t,e){var n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2],a=e[3]-t[3];return n*n+r*r+i*i+a*a},u.sqrDist=u.squaredDistance,u.length=function(t){var e=t[0],n=t[1],r=t[2],i=t[3];return Math.sqrt(e*e+n*n+r*r+i*i)},u.len=u.length,u.squaredLength=function(t){var e=t[0],n=t[1],r=t[2],i=t[3];return e*e+n*n+r*r+i*i},u.sqrLen=u.squaredLength,u.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},u.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t[3]=1/e[3],t},u.normalize=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=n*n+r*r+i*i+a*a;return o>0&&(o=1/Math.sqrt(o),t[0]=e[0]*o,t[1]=e[1]*o,t[2]=e[2]*o,t[3]=e[3]*o),t},u.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3]},u.lerp=function(t,e,n,r){var i=e[0],a=e[1],o=e[2],s=e[3];return t[0]=i+r*(n[0]-i),t[1]=a+r*(n[1]-a),t[2]=o+r*(n[2]-o),t[3]=s+r*(n[3]-s),t},u.random=function(t,e){return e=e||1,t[0]=r(),t[1]=r(),t[2]=r(),t[3]=r(),u.normalize(t,t),u.scale(t,t,e),t},u.transformMat4=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3];return t[0]=n[0]*r+n[4]*i+n[8]*a+n[12]*o,t[1]=n[1]*r+n[5]*i+n[9]*a+n[13]*o,t[2]=n[2]*r+n[6]*i+n[10]*a+n[14]*o,t[3]=n[3]*r+n[7]*i+n[11]*a+n[15]*o,t},u.transformQuat=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=n[0],s=n[1],u=n[2],l=n[3],c=l*r+s*a-u*i,h=l*i+u*r-o*a,f=l*a+o*i-s*r,d=-o*r-s*i-u*a;return t[0]=c*l+d*-o+h*-u-f*-s,t[1]=h*l+d*-s+f*-o-c*-u,t[2]=f*l+d*-u+c*-s-h*-o,t},u.forEach=function(){var t=u.create();return function(e,n,r,i,a,o){var s,u;for(n||(n=4),r||(r=0),u=i?Math.min(i*n+r,e.length):e.length,s=r;s<u;s+=n)t[0]=e[s],t[1]=e[s+1],t[2]=e[s+2],t[3]=e[s+3],a(t,t,o),e[s]=t[0],e[s+1]=t[1],e[s+2]=t[2],e[s+3]=t[3];return e}}(),u.str=function(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},void 0!==t&&(t.vec4=u);var l={};l.create=function(){var t=new n(4);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},l.clone=function(t){var e=new n(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},l.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},l.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},l.transpose=function(t,e){if(t===e){var n=e[1];t[1]=e[2],t[2]=n}else t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3];return t},l.invert=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=n*a-i*r;return o?(o=1/o,t[0]=a*o,t[1]=-r*o,t[2]=-i*o,t[3]=n*o,t):null},l.adjoint=function(t,e){var n=e[0];return t[0]=e[3],t[1]=-e[1],t[2]=-e[2],t[3]=n,t},l.determinant=function(t){return t[0]*t[3]-t[2]*t[1]},l.multiply=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=n[0],u=n[1],l=n[2],c=n[3];return t[0]=r*s+a*u,t[1]=i*s+o*u,t[2]=r*l+a*c,t[3]=i*l+o*c,t},l.mul=l.multiply,l.rotate=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(n),u=Math.cos(n);return t[0]=r*u+a*s,t[1]=i*u+o*s,t[2]=r*-s+a*u,t[3]=i*-s+o*u,t},l.scale=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=n[0],u=n[1];return t[0]=r*s,t[1]=i*s,t[2]=a*u,t[3]=o*u,t},l.str=function(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},l.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))},l.LDU=function(t,e,n,r){return t[2]=r[2]/r[0],n[0]=r[0],n[1]=r[1],n[3]=r[3]-t[2]*n[1],[t,e,n]},void 0!==t&&(t.mat2=l);var c={};c.create=function(){var t=new n(6);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},c.clone=function(t){var e=new n(6);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},c.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},c.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},c.invert=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=n*a-r*i;return u?(u=1/u,t[0]=a*u,t[1]=-r*u,t[2]=-i*u,t[3]=n*u,t[4]=(i*s-a*o)*u,t[5]=(r*o-n*s)*u,t):null},c.determinant=function(t){return t[0]*t[3]-t[1]*t[2]},c.multiply=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=n[0],c=n[1],h=n[2],f=n[3],d=n[4],_=n[5];return t[0]=r*l+a*c,t[1]=i*l+o*c,t[2]=r*h+a*f,t[3]=i*h+o*f,t[4]=r*d+a*_+s,t[5]=i*d+o*_+u,t},c.mul=c.multiply,c.rotate=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=Math.sin(n),c=Math.cos(n);return t[0]=r*c+a*l,t[1]=i*c+o*l,t[2]=r*-l+a*c,t[3]=i*-l+o*c,t[4]=s,t[5]=u,t},c.scale=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=n[0],c=n[1];return t[0]=r*l,t[1]=i*l,t[2]=a*c,t[3]=o*c,t[4]=s,t[5]=u,t},c.translate=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=n[0],c=n[1];return t[0]=r,t[1]=i,t[2]=a,t[3]=o,t[4]=r*l+a*c+s,t[5]=i*l+o*c+u,t},c.str=function(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"},c.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)},void 0!==t&&(t.mat2d=c);var h={};h.create=function(){var t=new n(9);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},h.fromMat4=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t},h.clone=function(t){var e=new n(9);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},h.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},h.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},h.transpose=function(t,e){if(t===e){var n=e[1],r=e[2],i=e[5];t[1]=e[3],t[2]=e[6],t[3]=n,t[5]=e[7],t[6]=r,t[7]=i}else t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8];return t},h.invert=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],c=e[8],h=c*o-s*l,f=-c*a+s*u,d=l*a-o*u,_=n*h+r*f+i*d;return _?(_=1/_,t[0]=h*_,t[1]=(-c*r+i*l)*_,t[2]=(s*r-i*o)*_,t[3]=f*_,t[4]=(c*n-i*u)*_,t[5]=(-s*n+i*a)*_,t[6]=d*_,t[7]=(-l*n+r*u)*_,t[8]=(o*n-r*a)*_,t):null},h.adjoint=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],c=e[8];return t[0]=o*c-s*l,t[1]=i*l-r*c,t[2]=r*s-i*o,t[3]=s*u-a*c,t[4]=n*c-i*u,t[5]=i*a-n*s,t[6]=a*l-o*u,t[7]=r*u-n*l,t[8]=n*o-r*a,t},h.determinant=function(t){var e=t[0],n=t[1],r=t[2],i=t[3],a=t[4],o=t[5],s=t[6],u=t[7],l=t[8];return e*(l*a-o*u)+n*(-l*i+o*s)+r*(u*i-a*s)},h.multiply=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],c=e[7],h=e[8],f=n[0],d=n[1],_=n[2],m=n[3],p=n[4],v=n[5],g=n[6],y=n[7],x=n[8];return t[0]=f*r+d*o+_*l,t[1]=f*i+d*s+_*c,t[2]=f*a+d*u+_*h,t[3]=m*r+p*o+v*l,t[4]=m*i+p*s+v*c,t[5]=m*a+p*u+v*h,t[6]=g*r+y*o+x*l,t[7]=g*i+y*s+x*c,t[8]=g*a+y*u+x*h,t},h.mul=h.multiply,h.translate=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],c=e[7],h=e[8],f=n[0],d=n[1];return t[0]=r,t[1]=i,t[2]=a,t[3]=o,t[4]=s,t[5]=u,t[6]=f*r+d*o+l,t[7]=f*i+d*s+c,t[8]=f*a+d*u+h,t},h.rotate=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],c=e[7],h=e[8],f=Math.sin(n),d=Math.cos(n);return t[0]=d*r+f*o,t[1]=d*i+f*s,t[2]=d*a+f*u,t[3]=d*o-f*r,t[4]=d*s-f*i,t[5]=d*u-f*a,t[6]=l,t[7]=c,t[8]=h,t},h.scale=function(t,e,n){var r=n[0],i=n[1];return t[0]=r*e[0],t[1]=r*e[1],t[2]=r*e[2],t[3]=i*e[3],t[4]=i*e[4],t[5]=i*e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},h.fromMat2d=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=0,t[3]=e[2],t[4]=e[3],t[5]=0,t[6]=e[4],t[7]=e[5],t[8]=1,t},h.fromQuat=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=n+n,s=r+r,u=i+i,l=n*o,c=r*o,h=r*s,f=i*o,d=i*s,_=i*u,m=a*o,p=a*s,v=a*u;return t[0]=1-h-_,t[3]=c-v,t[6]=f+p,t[1]=c+v,t[4]=1-l-_,t[7]=d-m,t[2]=f-p,t[5]=d+m,t[8]=1-l-h,t},h.normalFromMat4=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],c=e[8],h=e[9],f=e[10],d=e[11],_=e[12],m=e[13],p=e[14],v=e[15],g=n*s-r*o,y=n*u-i*o,x=n*l-a*o,T=r*u-i*s,E=r*l-a*s,b=i*l-a*u,A=c*m-h*_,S=c*p-f*_,N=c*v-d*_,C=h*p-f*m,R=h*v-d*m,M=f*v-d*p,w=g*M-y*R+x*C+T*N-E*S+b*A;return w?(w=1/w,t[0]=(s*M-u*R+l*C)*w,t[1]=(u*N-o*M-l*S)*w,t[2]=(o*R-s*N+l*A)*w,t[3]=(i*R-r*M-a*C)*w,t[4]=(n*M-i*N+a*S)*w,t[5]=(r*N-n*R-a*A)*w,t[6]=(m*b-p*E+v*T)*w,t[7]=(p*x-_*b-v*y)*w,t[8]=(_*E-m*x+v*g)*w,t):null},h.str=function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},h.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))},void 0!==t&&(t.mat3=h);var f={};f.create=function(){var t=new n(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.clone=function(t){var e=new n(16);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},f.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},f.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.transpose=function(t,e){if(t===e){var n=e[1],r=e[2],i=e[3],a=e[6],o=e[7],s=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=n,t[6]=e[9],t[7]=e[13],t[8]=r,t[9]=a,t[11]=e[14],t[12]=i,t[13]=o,t[14]=s}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t},f.invert=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],c=e[8],h=e[9],f=e[10],d=e[11],_=e[12],m=e[13],p=e[14],v=e[15],g=n*s-r*o,y=n*u-i*o,x=n*l-a*o,T=r*u-i*s,E=r*l-a*s,b=i*l-a*u,A=c*m-h*_,S=c*p-f*_,N=c*v-d*_,C=h*p-f*m,R=h*v-d*m,M=f*v-d*p,w=g*M-y*R+x*C+T*N-E*S+b*A;return w?(w=1/w,t[0]=(s*M-u*R+l*C)*w,t[1]=(i*R-r*M-a*C)*w,t[2]=(m*b-p*E+v*T)*w,t[3]=(f*E-h*b-d*T)*w,t[4]=(u*N-o*M-l*S)*w,t[5]=(n*M-i*N+a*S)*w,t[6]=(p*x-_*b-v*y)*w,t[7]=(c*b-f*x+d*y)*w,t[8]=(o*R-s*N+l*A)*w,t[9]=(r*N-n*R-a*A)*w,t[10]=(_*E-m*x+v*g)*w,t[11]=(h*x-c*E-d*g)*w,t[12]=(s*S-o*C-u*A)*w,t[13]=(n*C-r*S+i*A)*w,t[14]=(m*y-_*T-p*g)*w,t[15]=(c*T-h*y+f*g)*w,t):null},f.adjoint=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],c=e[8],h=e[9],f=e[10],d=e[11],_=e[12],m=e[13],p=e[14],v=e[15];return t[0]=s*(f*v-d*p)-h*(u*v-l*p)+m*(u*d-l*f),t[1]=-(r*(f*v-d*p)-h*(i*v-a*p)+m*(i*d-a*f)),t[2]=r*(u*v-l*p)-s*(i*v-a*p)+m*(i*l-a*u),t[3]=-(r*(u*d-l*f)-s*(i*d-a*f)+h*(i*l-a*u)),t[4]=-(o*(f*v-d*p)-c*(u*v-l*p)+_*(u*d-l*f)),t[5]=n*(f*v-d*p)-c*(i*v-a*p)+_*(i*d-a*f),t[6]=-(n*(u*v-l*p)-o*(i*v-a*p)+_*(i*l-a*u)),t[7]=n*(u*d-l*f)-o*(i*d-a*f)+c*(i*l-a*u),t[8]=o*(h*v-d*m)-c*(s*v-l*m)+_*(s*d-l*h),t[9]=-(n*(h*v-d*m)-c*(r*v-a*m)+_*(r*d-a*h)),t[10]=n*(s*v-l*m)-o*(r*v-a*m)+_*(r*l-a*s),t[11]=-(n*(s*d-l*h)-o*(r*d-a*h)+c*(r*l-a*s)),t[12]=-(o*(h*p-f*m)-c*(s*p-u*m)+_*(s*f-u*h)),t[13]=n*(h*p-f*m)-c*(r*p-i*m)+_*(r*f-i*h),t[14]=-(n*(s*p-u*m)-o*(r*p-i*m)+_*(r*u-i*s)),t[15]=n*(s*f-u*h)-o*(r*f-i*h)+c*(r*u-i*s),t},f.determinant=function(t){var e=t[0],n=t[1],r=t[2],i=t[3],a=t[4],o=t[5],s=t[6],u=t[7],l=t[8],c=t[9],h=t[10],f=t[11],d=t[12],_=t[13],m=t[14],p=t[15];return(e*o-n*a)*(h*p-f*m)-(e*s-r*a)*(c*p-f*_)+(e*u-i*a)*(c*m-h*_)+(n*s-r*o)*(l*p-f*d)-(n*u-i*o)*(l*m-h*d)+(r*u-i*s)*(l*_-c*d)},f.multiply=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],c=e[7],h=e[8],f=e[9],d=e[10],_=e[11],m=e[12],p=e[13],v=e[14],g=e[15],y=n[0],x=n[1],T=n[2],E=n[3];return t[0]=y*r+x*s+T*h+E*m,t[1]=y*i+x*u+T*f+E*p,t[2]=y*a+x*l+T*d+E*v,t[3]=y*o+x*c+T*_+E*g,y=n[4],x=n[5],T=n[6],E=n[7],t[4]=y*r+x*s+T*h+E*m,t[5]=y*i+x*u+T*f+E*p,t[6]=y*a+x*l+T*d+E*v,t[7]=y*o+x*c+T*_+E*g,y=n[8],x=n[9],T=n[10],E=n[11],t[8]=y*r+x*s+T*h+E*m,t[9]=y*i+x*u+T*f+E*p,t[10]=y*a+x*l+T*d+E*v,t[11]=y*o+x*c+T*_+E*g,y=n[12],x=n[13],T=n[14],E=n[15],t[12]=y*r+x*s+T*h+E*m,t[13]=y*i+x*u+T*f+E*p,t[14]=y*a+x*l+T*d+E*v,t[15]=y*o+x*c+T*_+E*g,t},f.multiplyAffine=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[4],s=e[5],u=e[6],l=e[8],c=e[9],h=e[10],f=e[12],d=e[13],_=e[14],m=n[0],p=n[1],v=n[2];return t[0]=m*r+p*o+v*l,t[1]=m*i+p*s+v*c,t[2]=m*a+p*u+v*h,m=n[4],p=n[5],v=n[6],t[4]=m*r+p*o+v*l,t[5]=m*i+p*s+v*c,t[6]=m*a+p*u+v*h,m=n[8],p=n[9],v=n[10],t[8]=m*r+p*o+v*l,t[9]=m*i+p*s+v*c,t[10]=m*a+p*u+v*h,m=n[12],p=n[13],v=n[14],t[12]=m*r+p*o+v*l+f,t[13]=m*i+p*s+v*c+d,t[14]=m*a+p*u+v*h+_,t},f.mul=f.multiply,f.mulAffine=f.multiplyAffine,f.translate=function(t,e,n){var r,i,a,o,s,u,l,c,h,f,d,_,m=n[0],p=n[1],v=n[2];return e===t?(t[12]=e[0]*m+e[4]*p+e[8]*v+e[12],t[13]=e[1]*m+e[5]*p+e[9]*v+e[13],t[14]=e[2]*m+e[6]*p+e[10]*v+e[14],t[15]=e[3]*m+e[7]*p+e[11]*v+e[15]):(r=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],c=e[7],h=e[8],f=e[9],d=e[10],_=e[11],t[0]=r,t[1]=i,t[2]=a,t[3]=o,t[4]=s,t[5]=u,t[6]=l,t[7]=c,t[8]=h,t[9]=f,t[10]=d,t[11]=_,t[12]=r*m+s*p+h*v+e[12],t[13]=i*m+u*p+f*v+e[13],t[14]=a*m+l*p+d*v+e[14],t[15]=o*m+c*p+_*v+e[15]),t},f.scale=function(t,e,n){var r=n[0],i=n[1],a=n[2];return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*a,t[9]=e[9]*a,t[10]=e[10]*a,t[11]=e[11]*a,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},f.rotate=function(t,n,r,i){var a,o,s,u,l,c,h,f,d,_,m,p,v,g,y,x,T,E,b,A,S,N,C,R,M=i[0],w=i[1],I=i[2],D=Math.sqrt(M*M+w*w+I*I);return Math.abs(D)<e?null:(D=1/D,M*=D,w*=D,I*=D,a=Math.sin(r),o=Math.cos(r),s=1-o,u=n[0],l=n[1],c=n[2],h=n[3],f=n[4],d=n[5],_=n[6],m=n[7],p=n[8],v=n[9],g=n[10],y=n[11],x=M*M*s+o,T=w*M*s+I*a,E=I*M*s-w*a,b=M*w*s-I*a,A=w*w*s+o,S=I*w*s+M*a,N=M*I*s+w*a,C=w*I*s-M*a,R=I*I*s+o,t[0]=u*x+f*T+p*E,t[1]=l*x+d*T+v*E,t[2]=c*x+_*T+g*E,t[3]=h*x+m*T+y*E,t[4]=u*b+f*A+p*S,t[5]=l*b+d*A+v*S,t[6]=c*b+_*A+g*S,t[7]=h*b+m*A+y*S,t[8]=u*N+f*C+p*R,t[9]=l*N+d*C+v*R,t[10]=c*N+_*C+g*R,t[11]=h*N+m*C+y*R,n!==t&&(t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t)},f.rotateX=function(t,e,n){var r=Math.sin(n),i=Math.cos(n),a=e[4],o=e[5],s=e[6],u=e[7],l=e[8],c=e[9],h=e[10],f=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=a*i+l*r,t[5]=o*i+c*r,t[6]=s*i+h*r,t[7]=u*i+f*r,t[8]=l*i-a*r,t[9]=c*i-o*r,t[10]=h*i-s*r,t[11]=f*i-u*r,t},f.rotateY=function(t,e,n){var r=Math.sin(n),i=Math.cos(n),a=e[0],o=e[1],s=e[2],u=e[3],l=e[8],c=e[9],h=e[10],f=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*i-l*r,t[1]=o*i-c*r,t[2]=s*i-h*r,t[3]=u*i-f*r,t[8]=a*r+l*i,t[9]=o*r+c*i,t[10]=s*r+h*i,t[11]=u*r+f*i,t},f.rotateZ=function(t,e,n){var r=Math.sin(n),i=Math.cos(n),a=e[0],o=e[1],s=e[2],u=e[3],l=e[4],c=e[5],h=e[6],f=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*i+l*r,t[1]=o*i+c*r,t[2]=s*i+h*r,t[3]=u*i+f*r,t[4]=l*i-a*r,t[5]=c*i-o*r,t[6]=h*i-s*r,t[7]=f*i-u*r,t},f.fromRotationTranslation=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=r+r,u=i+i,l=a+a,c=r*s,h=r*u,f=r*l,d=i*u,_=i*l,m=a*l,p=o*s,v=o*u,g=o*l;return t[0]=1-(d+m),t[1]=h+g,t[2]=f-v,t[3]=0,t[4]=h-g,t[5]=1-(c+m),t[6]=_+p,t[7]=0,t[8]=f+v,t[9]=_-p,t[10]=1-(c+d),t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},f.fromQuat=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=n+n,s=r+r,u=i+i,l=n*o,c=r*o,h=r*s,f=i*o,d=i*s,_=i*u,m=a*o,p=a*s,v=a*u;return t[0]=1-h-_,t[1]=c+v,t[2]=f-p,t[3]=0,t[4]=c-v,t[5]=1-l-_,t[6]=d+m,t[7]=0,t[8]=f+p,t[9]=d-m,t[10]=1-l-h,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.frustum=function(t,e,n,r,i,a,o){var s=1/(n-e),u=1/(i-r),l=1/(a-o);return t[0]=2*a*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*a*u,t[6]=0,t[7]=0,t[8]=(n+e)*s,t[9]=(i+r)*u,t[10]=(o+a)*l,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*a*2*l,t[15]=0,t},f.perspective=function(t,e,n,r,i){var a=1/Math.tan(e/2),o=1/(r-i);return t[0]=a/n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(i+r)*o,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*i*r*o,t[15]=0,t},f.ortho=function(t,e,n,r,i,a,o){var s=1/(e-n),u=1/(r-i),l=1/(a-o);return t[0]=-2*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*u,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*l,t[11]=0,t[12]=(e+n)*s,t[13]=(i+r)*u,t[14]=(o+a)*l,t[15]=1,t},f.lookAt=function(t,n,r,i){var a,o,s,u,l,c,h,d,_,m,p=n[0],v=n[1],g=n[2],y=i[0],x=i[1],T=i[2],E=r[0],b=r[1],A=r[2];return Math.abs(p-E)<e&&Math.abs(v-b)<e&&Math.abs(g-A)<e?f.identity(t):(h=p-E,d=v-b,_=g-A,m=1/Math.sqrt(h*h+d*d+_*_),h*=m,d*=m,_*=m,a=x*_-T*d,o=T*h-y*_,s=y*d-x*h,m=Math.sqrt(a*a+o*o+s*s),m?(m=1/m,a*=m,o*=m,s*=m):(a=0,o=0,s=0),u=d*s-_*o,l=_*a-h*s,c=h*o-d*a,m=Math.sqrt(u*u+l*l+c*c),m?(m=1/m,u*=m,l*=m,c*=m):(u=0,l=0,c=0),t[0]=a,t[1]=u,t[2]=h,t[3]=0,t[4]=o,t[5]=l,t[6]=d,t[7]=0,t[8]=s,t[9]=c,t[10]=_,t[11]=0,t[12]=-(a*p+o*v+s*g),t[13]=-(u*p+l*v+c*g),t[14]=-(h*p+d*v+_*g),t[15]=1,t)},f.str=function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"},f.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))},void 0!==t&&(t.mat4=f);var d={};d.create=function(){var t=new n(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},d.rotationTo=function(){var t=s.create(),e=s.fromValues(1,0,0),n=s.fromValues(0,1,0);return function(r,i,a){var o=s.dot(i,a);return o<-.999999?(s.cross(t,e,i),s.length(t)<1e-6&&s.cross(t,n,i),s.normalize(t,t),d.setAxisAngle(r,t,Math.PI),r):o>.999999?(r[0]=0,r[1]=0,r[2]=0,r[3]=1,r):(s.cross(t,i,a),r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=1+o,d.normalize(r,r))}}(),d.setAxes=function(){var t=h.create();return function(e,n,r,i){return t[0]=r[0],t[3]=r[1],t[6]=r[2],t[1]=i[0],t[4]=i[1],t[7]=i[2],t[2]=-n[0],t[5]=-n[1],t[8]=-n[2],d.normalize(e,d.fromMat3(e,t))}}(),d.clone=u.clone,d.fromValues=u.fromValues,d.copy=u.copy,d.set=u.set,d.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},d.setAxisAngle=function(t,e,n){n*=.5;var r=Math.sin(n);return t[0]=r*e[0],t[1]=r*e[1],t[2]=r*e[2],t[3]=Math.cos(n),t},d.add=u.add,d.multiply=function(t,e,n){var r=e[0],i=e[1],a=e[2],o=e[3],s=n[0],u=n[1],l=n[2],c=n[3];return t[0]=r*c+o*s+i*l-a*u,t[1]=i*c+o*u+a*s-r*l,t[2]=a*c+o*l+r*u-i*s,t[3]=o*c-r*s-i*u-a*l,t},d.mul=d.multiply,d.scale=u.scale,d.rotateX=function(t,e,n){n*=.5;var r=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(n),u=Math.cos(n);return t[0]=r*u+o*s,t[1]=i*u+a*s,t[2]=a*u-i*s,t[3]=o*u-r*s,t},d.rotateY=function(t,e,n){n*=.5;var r=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(n),u=Math.cos(n);return t[0]=r*u-a*s,t[1]=i*u+o*s,t[2]=a*u+r*s,t[3]=o*u-i*s,t},d.rotateZ=function(t,e,n){n*=.5;var r=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(n),u=Math.cos(n);return t[0]=r*u+i*s,t[1]=i*u-r*s,t[2]=a*u+o*s,t[3]=o*u-a*s,t},d.calculateW=function(t,e){var n=e[0],r=e[1],i=e[2];return t[0]=n,t[1]=r,t[2]=i,t[3]=Math.sqrt(Math.abs(1-n*n-r*r-i*i)),t},d.dot=u.dot,d.lerp=u.lerp,d.slerp=function(t,e,n,r){var i,a,o,s,u,l=e[0],c=e[1],h=e[2],f=e[3],d=n[0],_=n[1],m=n[2],p=n[3];return a=l*d+c*_+h*m+f*p,a<0&&(a=-a,d=-d,_=-_,m=-m,p=-p),1-a>1e-6?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-r)*i)/o,u=Math.sin(r*i)/o):(s=1-r,u=r),t[0]=s*l+u*d,t[1]=s*c+u*_,t[2]=s*h+u*m,t[3]=s*f+u*p,t},d.invert=function(t,e){var n=e[0],r=e[1],i=e[2],a=e[3],o=n*n+r*r+i*i+a*a,s=o?1/o:0;return t[0]=-n*s,t[1]=-r*s,t[2]=-i*s,t[3]=a*s,t},d.conjugate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t},d.length=u.length,d.len=d.length,d.squaredLength=u.squaredLength,d.sqrLen=d.squaredLength,d.normalize=u.normalize,d.fromMat3=function(t,e){var n,r=e[0]+e[4]+e[8];if(r>0)n=Math.sqrt(r+1),t[3]=.5*n,n=.5/n,t[0]=(e[5]-e[7])*n,t[1]=(e[6]-e[2])*n,t[2]=(e[1]-e[3])*n;else{var i=0;e[4]>e[0]&&(i=1),e[8]>e[3*i+i]&&(i=2);var a=(i+1)%3,o=(i+2)%3;n=Math.sqrt(e[3*i+i]-e[3*a+a]-e[3*o+o]+1),t[i]=.5*n,n=.5/n,t[3]=(e[3*a+o]-e[3*o+a])*n,t[a]=(e[3*a+i]+e[3*i+a])*n,t[o]=(e[3*o+i]+e[3*i+o])*n}return t},d.str=function(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},void 0!==t&&(t.quat=d)}(n.exports)}()},function(t,e,n){"use strict";var r=n(64),i=n(32),a=n(5),o=function(){this.__GUID__=a.genGUID()};o.__initializers__=[function(t){a.extend(this,t)}],a.extend(o,r),a.extend(o.prototype,i),t.exports=o},function(t,e){t.exports={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444}},function(t,e,n){"use strict";var r=n(4),i=n(0),a=i.vec3,o=a.copy,s=a.set,u=function(t,e){this.min=t||new r(1/0,1/0,1/0),this.max=e||new r(-1/0,-1/0,-1/0)};u.prototype={constructor:u,updateFromVertices:function(t){if(t.length>0){var e=this.min,n=this.max,r=e._array,i=n._array;o(r,t[0]),o(i,t[0]);for(var a=1;a<t.length;a++){var s=t[a];s[0]<r[0]&&(r[0]=s[0]),s[1]<r[1]&&(r[1]=s[1]),s[2]<r[2]&&(r[2]=s[2]),s[0]>i[0]&&(i[0]=s[0]),s[1]>i[1]&&(i[1]=s[1]),s[2]>i[2]&&(i[2]=s[2])}e._dirty=!0,n._dirty=!0}},union:function(t){var e=this.min,n=this.max;return a.min(e._array,e._array,t.min._array),a.max(n._array,n._array,t.max._array),e._dirty=!0,n._dirty=!0,this},intersection:function(t){var e=this.min,n=this.max;return a.max(e._array,e._array,t.min._array),a.min(n._array,n._array,t.max._array),e._dirty=!0,n._dirty=!0,this},intersectBoundingBox:function(t){var e=this.min._array,n=this.max._array,r=t.min._array,i=t.max._array;return!(e[0]>i[0]||e[1]>i[1]||e[2]>i[2]||n[0]<r[0]||n[1]<r[1]||n[2]<r[2])},containBoundingBox:function(t){var e=this.min._array,n=this.max._array,r=t.min._array,i=t.max._array;return e[0]<=r[0]&&e[1]<=r[1]&&e[2]<=r[2]&&n[0]>=i[0]&&n[1]>=i[1]&&n[2]>=i[2]},containPoint:function(t){var e=this.min._array,n=this.max._array,r=t._array;return e[0]<=r[0]&&e[1]<=r[1]&&e[2]<=r[2]&&n[0]>=r[0]&&n[1]>=r[1]&&n[2]>=r[2]},isFinite:function(){var t=this.min._array,e=this.max._array;return isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])&&isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])},applyTransform:function(){var t=a.create(),e=a.create(),n=a.create(),r=a.create(),i=a.create(),o=a.create();return function(a){var s=this.min._array,u=this.max._array,l=a._array;return t[0]=l[0]*s[0],t[1]=l[1]*s[0],t[2]=l[2]*s[0],e[0]=l[0]*u[0],e[1]=l[1]*u[0],e[2]=l[2]*u[0],n[0]=l[4]*s[1],n[1]=l[5]*s[1],n[2]=l[6]*s[1],r[0]=l[4]*u[1],r[1]=l[5]*u[1],r[2]=l[6]*u[1],i[0]=l[8]*s[2],i[1]=l[9]*s[2],i[2]=l[10]*s[2],o[0]=l[8]*u[2],o[1]=l[9]*u[2],o[2]=l[10]*u[2],s[0]=Math.min(t[0],e[0])+Math.min(n[0],r[0])+Math.min(i[0],o[0])+l[12],s[1]=Math.min(t[1],e[1])+Math.min(n[1],r[1])+Math.min(i[1],o[1])+l[13],s[2]=Math.min(t[2],e[2])+Math.min(n[2],r[2])+Math.min(i[2],o[2])+l[14],u[0]=Math.max(t[0],e[0])+Math.max(n[0],r[0])+Math.max(i[0],o[0])+l[12],u[1]=Math.max(t[1],e[1])+Math.max(n[1],r[1])+Math.max(i[1],o[1])+l[13],u[2]=Math.max(t[2],e[2])+Math.max(n[2],r[2])+Math.max(i[2],o[2])+l[14],this.min._dirty=!0,this.max._dirty=!0,this}}(),applyProjection:function(t){var e=this.min._array,n=this.max._array,r=t._array,i=e[0],a=e[1],o=e[2],s=n[0],u=n[1],l=e[2],c=n[0],h=n[1],f=n[2];if(1===r[15])e[0]=r[0]*i+r[12],e[1]=r[5]*a+r[13],n[2]=r[10]*o+r[14],n[0]=r[0]*c+r[12],n[1]=r[5]*h+r[13],e[2]=r[10]*f+r[14];else{var d=-1/o;e[0]=r[0]*i*d,e[1]=r[5]*a*d,n[2]=(r[10]*o+r[14])*d,d=-1/l,n[0]=r[0]*s*d,n[1]=r[5]*u*d,d=-1/f,e[2]=(r[10]*f+r[14])*d}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var t=this.vertices;if(!t){for(var t=[],e=0;e<8;e++)t[e]=a.fromValues(0,0,0);this.vertices=t}var n=this.min._array,r=this.max._array;return s(t[0],n[0],n[1],n[2]),s(t[1],n[0],r[1],n[2]),s(t[2],r[0],n[1],n[2]),s(t[3],r[0],r[1],n[2]),s(t[4],n[0],n[1],r[2]),s(t[5],n[0],r[1],r[2]),s(t[6],r[0],n[1],r[2]),s(t[7],r[0],r[1],r[2]),this},copy:function(t){var e=this.min,n=this.max;return o(e._array,t.min._array),o(n._array,t.max._array),e._dirty=!0,n._dirty=!0,this},clone:function(){var t=new u;return t.copy(this),t}},t.exports=u},function(t,e,n){"use strict";function r(t,e,n){return t<e?e:t>n?n:t}var i=n(0),a=i.vec3,o=function(t,e,n){t=t||0,e=e||0,n=n||0,this._array=a.fromValues(t,e,n),this._dirty=!0};o.prototype={constructor:o,add:function(t){return a.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e,n){return this._array[0]=t,this._array[1]=e,this._array[2]=n,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._dirty=!0,this},clone:function(){return new o(this.x,this.y,this.z)},copy:function(t){return a.copy(this._array,t._array),this._dirty=!0,this},cross:function(t,e){return a.cross(this._array,t._array,e._array),this._dirty=!0,this},dist:function(t){return a.dist(this._array,t._array)},distance:function(t){return a.distance(this._array,t._array)},div:function(t){return a.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return a.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return a.dot(this._array,t._array)},len:function(){return a.len(this._array)},length:function(){return a.length(this._array)},lerp:function(t,e,n){return a.lerp(this._array,t._array,e._array,n),this._dirty=!0,this},min:function(t){return a.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return a.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return a.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return a.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return a.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return a.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return a.random(this._array,t),this._dirty=!0,this},scale:function(t){return a.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return a.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return a.sqrDist(this._array,t._array)},squaredDistance:function(t){return a.squaredDistance(this._array,t._array)},sqrLen:function(){return a.sqrLen(this._array)},squaredLength:function(){return a.squaredLength(this._array)},sub:function(t){return a.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return a.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat3:function(t){return a.transformMat3(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return a.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},transformQuat:function(t){return a.transformQuat(this._array,this._array,t._array),this._dirty=!0,this},applyProjection:function(t){var e=this._array;if(t=t._array,0===t[15]){var n=-1/e[2];e[0]=t[0]*e[0]*n,e[1]=t[5]*e[1]*n,e[2]=(t[10]*e[2]+t[14])*n}else e[0]=t[0]*e[0]+t[12],e[1]=t[5]*e[1]+t[13],e[2]=t[10]*e[2]+t[14];return this._dirty=!0,this},eulerFromQuat:function(t,e){o.eulerFromQuat(this,t,e)},eulerFromMat3:function(t,e){o.eulerFromMat3(this,t,e)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var s=Object.defineProperty;if(s){var u=o.prototype;s(u,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),s(u,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),s(u,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}})}o.add=function(t,e,n){return a.add(t._array,e._array,n._array),t._dirty=!0,t},o.set=function(t,e,n,r){a.set(t._array,e,n,r),t._dirty=!0},o.copy=function(t,e){return a.copy(t._array,e._array),t._dirty=!0,t},o.cross=function(t,e,n){return a.cross(t._array,e._array,n._array),t._dirty=!0,t},o.dist=function(t,e){return a.distance(t._array,e._array)},o.distance=o.dist,o.div=function(t,e,n){return a.divide(t._array,e._array,n._array),t._dirty=!0,t},o.divide=o.div,o.dot=function(t,e){return a.dot(t._array,e._array)},o.len=function(t){return a.length(t._array)},o.lerp=function(t,e,n,r){return a.lerp(t._array,e._array,n._array,r),t._dirty=!0,t},o.min=function(t,e,n){return a.min(t._array,e._array,n._array),t._dirty=!0,t},o.max=function(t,e,n){return a.max(t._array,e._array,n._array),t._dirty=!0,t},o.mul=function(t,e,n){return a.multiply(t._array,e._array,n._array),t._dirty=!0,t},o.multiply=o.mul,o.negate=function(t,e){return a.negate(t._array,e._array),t._dirty=!0,t},o.normalize=function(t,e){return a.normalize(t._array,e._array),t._dirty=!0,t},o.random=function(t,e){return a.random(t._array,e),t._dirty=!0,t},o.scale=function(t,e,n){return a.scale(t._array,e._array,n),t._dirty=!0,t},o.scaleAndAdd=function(t,e,n,r){return a.scaleAndAdd(t._array,e._array,n._array,r),t._dirty=!0,t},o.sqrDist=function(t,e){return a.sqrDist(t._array,e._array)},o.squaredDistance=o.sqrDist,o.sqrLen=function(t){return a.sqrLen(t._array)},o.squaredLength=o.sqrLen,o.sub=function(t,e,n){return a.subtract(t._array,e._array,n._array),t._dirty=!0,t},o.subtract=o.sub,o.transformMat3=function(t,e,n){return a.transformMat3(t._array,e._array,n._array),t._dirty=!0,t},o.transformMat4=function(t,e,n){return a.transformMat4(t._array,e._array,n._array),t._dirty=!0,t},o.transformQuat=function(t,e,n){return a.transformQuat(t._array,e._array,n._array),t._dirty=!0,t};var l=Math.atan2,c=Math.asin,h=Math.abs;o.eulerFromQuat=function(t,e,n){t._dirty=!0,e=e._array;var i=t._array,a=e[0],o=e[1],s=e[2],u=e[3],h=a*a,f=o*o,d=s*s,_=u*u,n=(n||"XYZ").toUpperCase();switch(n){case"XYZ":i[0]=l(2*(a*u-o*s),_-h-f+d),i[1]=c(r(2*(a*s+o*u),-1,1)),i[2]=l(2*(s*u-a*o),_+h-f-d);break;case"YXZ":i[0]=c(r(2*(a*u-o*s),-1,1)),i[1]=l(2*(a*s+o*u),_-h-f+d),i[2]=l(2*(a*o+s*u),_-h+f-d);break;case"ZXY":i[0]=c(r(2*(a*u+o*s),-1,1)),i[1]=l(2*(o*u-s*a),_-h-f+d),i[2]=l(2*(s*u-a*o),_-h+f-d);break;case"ZYX":i[0]=l(2*(a*u+s*o),_-h-f+d),i[1]=c(r(2*(o*u-a*s),-1,1)),i[2]=l(2*(a*o+s*u),_+h-f-d);break;case"YZX":i[0]=l(2*(a*u-s*o),_-h+f-d),i[1]=l(2*(o*u-a*s),_+h-f-d),i[2]=c(r(2*(a*o+s*u),-1,1));break;case"XZY":i[0]=l(2*(a*u+o*s),_-h+f-d),i[1]=l(2*(a*s+o*u),_+h-f-d),i[2]=c(r(2*(s*u-a*o),-1,1));break;default:console.warn("Unkown order: "+n)}return t},o.eulerFromMat3=function(t,e,n){var i=e._array,a=i[0],o=i[3],s=i[6],u=i[1],f=i[4],d=i[7],_=i[2],m=i[5],p=i[8],v=t._array,n=(n||"XYZ").toUpperCase();switch(n){case"XYZ":v[1]=c(r(s,-1,1)),h(s)<.99999?(v[0]=l(-d,p),v[2]=l(-o,a)):(v[0]=l(m,f),v[2]=0);break;case"YXZ":v[0]=c(-r(d,-1,1)),h(d)<.99999?(v[1]=l(s,p),v[2]=l(u,f)):(v[1]=l(-_,a),v[2]=0);break;case"ZXY":v[0]=c(r(m,-1,1)),h(m)<.99999?(v[1]=l(-_,p),v[2]=l(-o,f)):(v[1]=0,v[2]=l(u,a));break;case"ZYX":v[1]=c(-r(_,-1,1)),h(_)<.99999?(v[0]=l(m,p),v[2]=l(u,a)):(v[0]=0,v[2]=l(-o,f));break;case"YZX":v[2]=c(r(u,-1,1)),h(u)<.99999?(v[0]=l(-d,f),v[1]=l(-_,a)):(v[0]=0,v[1]=l(s,p));break;case"XZY":v[2]=c(-r(o,-1,1)),h(o)<.99999?(v[0]=l(m,f),v[1]=l(s,a)):(v[0]=l(-d,p),v[1]=0);break;default:console.warn("Unkown order: "+n)}return t._dirty=!0,t},o.POSITIVE_X=new o(1,0,0),o.NEGATIVE_X=new o(-1,0,0),o.POSITIVE_Y=new o(0,1,0),o.NEGATIVE_Y=new o(0,-1,0),o.POSITIVE_Z=new o(0,0,1),o.NEGATIVE_Z=new o(0,0,-1),o.UP=new o(0,1,0),o.ZERO=new o(0,0,0),t.exports=o},function(t,e,n){"use strict";var r=0,i=Array.prototype,a=i.forEach,o={genGUID:function(){return++r},relative2absolute:function(t,e){if(!e||t.match(/^\//))return t;for(var n=t.split("/"),r=e.split("/"),i=n[0];"."===i||".."===i;)".."===i&&r.pop(),n.shift(),i=n[0];return r.join("/")+"/"+n.join("/")},extend:function(t,e){if(e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},defaults:function(t,e){if(e)for(var n in e)void 0===t[n]&&(t[n]=e[n]);return t},extendWithPropList:function(t,e,n){if(e)for(var r=0;r<n.length;r++){var i=n[r];t[i]=e[i]}return t},defaultsWithPropList:function(t,e,n){if(e)for(var r=0;r<n.length;r++){var i=n[r];null==t[i]&&(t[i]=e[i])}return t},each:function(t,e,n){if(t&&e)if(t.forEach&&t.forEach===a)t.forEach(e,n);else if(t.length===+t.length)for(var r=0,i=t.length;r<i;r++)e.call(n,t[r],r,t);else for(var o in t)t.hasOwnProperty(o)&&e.call(n,t[o],o,t)},isObject:function(t){return t===Object(t)},isArray:function(t){return t instanceof Array},isArrayLike:function(t){return!!t&&t.length===+t.length},clone:function(t){if(o.isObject(t)){if(o.isArray(t))return t.slice();if(o.isArrayLike(t)){for(var e=new t.constructor(t.length),n=0;n<t.length;n++)e[n]=t[n];return e}return o.extend({},t)}return t}};t.exports=o},function(t,e,n){"use strict";function r(){return{locations:{},attriblocations:{}}}function i(t,e,n){if(!t.getShaderParameter(e,t.COMPILE_STATUS))return[t.getShaderInfoLog(e),a(n)].join("\n")}function a(t){for(var e=t.split("\n"),n=0,r=e.length;n<r;n++)e[n]=n+1+": "+e[n];return e.join("\n")}var o=n(1),s=n(5),u=n(18),l=n(9),c=n(0),h=(n(7),c.mat2),f=c.mat3,d=c.mat4,_=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\w\,]+)?(\[.*?\])?\s*(:\s*([\S\s]+?))?;/g,m=/#define\s+(\w+)?(\s+[\w-.]+)?\s*;?\s*\n/g,p={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},v={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return[0,0]},vec3:function(){return[0,0,0]},vec4:function(){return[0,0,0,0]},ivec2:function(){return[0,0]},ivec3:function(){return[0,0,0]},ivec4:function(){return[0,0,0,0]},mat2:function(){return h.create()},mat3:function(){return f.create()},mat4:function(){return d.create()},array:function(){return[]}},g=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],y=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","DEVICEPIXELRATIO","WINDOW_SIZE","NEAR","FAR","TIME"],x=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],T={},E=o.extend(function(){return{vertex:"",fragment:"",precision:"highp",attribSemantics:{},matrixSemantics:{},uniformSemantics:{},matrixSemanticKeys:[],uniformTemplates:{},attributeTemplates:{},vertexDefines:{},fragmentDefines:{},extensions:["OES_standard_derivatives","EXT_shader_texture_lod"],lightGroup:0,lightNumber:{},_textureSlot:0,_attacheMaterialNumber:0,_uniformList:[],_textureStatus:{},_vertexProcessed:"",_fragmentProcessed:"",_currentLocationsMap:{}}},function(){this._cache=new u,this._codeDirty=!0,this._updateShaderString()},{isEqual:function(t){return!!t&&(this===t?!this._codeDirty:(t._codeDirty&&t._updateShaderString(),this._codeDirty&&this._updateShaderString(),!(t._vertexProcessed!==this._vertexProcessed||t._fragmentProcessed!==this._fragmentProcessed)))},setVertex:function(t){this.vertex=t,this._updateShaderString(),this.dirty()},setFragment:function(t){this.fragment=t,this._updateShaderString(),this.dirty()},bind:function(t){var e=this._cache;if(e.use(t.__GLID__,r),this._currentLocationsMap=e.get("locations"),this._textureSlot=0,this._codeDirty&&this._updateShaderString(),e.isDirty("program")){var n=this._buildProgram(t,this._vertexProcessed,this._fragmentProcessed);if(e.fresh("program"),n)return n}t.useProgram(e.get("program"))},dirty:function(){var t=this._cache;this._codeDirty=!0,t.dirtyAll("program");for(var e=0;e<t._caches.length;e++)if(t._caches[e]){var n=t._caches[e];n.locations={},n.attriblocations={}}},_updateShaderString:function(t){this.vertex===this._vertexPrev&&this.fragment===this._fragmentPrev||(this._parseImport(),this.attribSemantics={},this.matrixSemantics={},this._textureStatus={},this._parseUniforms(),this._parseAttributes(),this._parseDefines(),this._vertexPrev=this.vertex,this._fragmentPrev=this.fragment),this._addDefineExtensionAndPrecision(t),this._vertexProcessed=this._unrollLoop(this._vertexProcessed,this.vertexDefines),this._fragmentProcessed=this._unrollLoop(this._fragmentProcessed,this.fragmentDefines),this._codeDirty=!1},define:function(t,e,n){var r=this.vertexDefines,i=this.fragmentDefines;"vertex"!==t&&"fragment"!==t&&"both"!==t&&arguments.length<3&&(n=e,e=t,t="both"),n=null!=n?n:null,"vertex"!==t&&"both"!==t||r[e]!==n&&(r[e]=n,this.dirty()),"fragment"!==t&&"both"!==t||i[e]!==n&&(i[e]=n,"both"!==t&&this.dirty())},undefine:function(t,e){"vertex"!==t&&"fragment"!==t&&"both"!==t&&arguments.length<2&&(e=t,t="both"),"vertex"!==t&&"both"!==t||this.isDefined("vertex",e)&&(delete this.vertexDefines[e],this.dirty()),"fragment"!==t&&"both"!==t||this.isDefined("fragment",e)&&(delete this.fragmentDefines[e],"both"!==t&&this.dirty())},isDefined:function(t,e){switch(t){case"vertex":return void 0!==this.vertexDefines[e];case"fragment":return void 0!==this.fragmentDefines[e]}},getDefine:function(t,e){switch(t){case"vertex":return this.vertexDefines[e];case"fragment":return this.fragmentDefines[e]}},enableTexture:function(t){if(t instanceof Array)for(var e=0;e<t.length;e++)this.enableTexture(t[e]);else{var n=this._textureStatus[t];if(n){n.enabled||(n.enabled=!0,this.dirty())}}},enableTexturesAll:function(){var t=this._textureStatus;for(var e in t)t[e].enabled=!0;this.dirty()},disableTexture:function(t){if(t instanceof Array)for(var e=0;e<t.length;e++)this.disableTexture(t[e]);else{var n=this._textureStatus[t];if(n){!n.enabled||(n.enabled=!1,this.dirty())}}},disableTexturesAll:function(){var t=this._textureStatus;for(var e in t)t[e].enabled=!1;this.dirty()},isTextureEnabled:function(t){var e=this._textureStatus;return!!e[t]&&e[t].enabled},getEnabledTextures:function(){var t=[],e=this._textureStatus;for(var n in e)e[n].enabled&&t.push(n);return t},hasUniform:function(t){var e=this._currentLocationsMap[t];return null!==e&&void 0!==e},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(t){this._textureSlot=t||0},useCurrentTextureSlot:function(t,e){var n=this._textureSlot;return this.useTextureSlot(t,e,n),this._textureSlot++,n},useTextureSlot:function(t,e,n){e&&(t.activeTexture(t.TEXTURE0+n),e.isRenderable()?e.bind(t):e.unbind(t))},setUniform:function(t,e,n,r){var i=this._currentLocationsMap,a=i[n];if(null===a||void 0===a)return!1;switch(e){case"m4":t.uniformMatrix4fv(a,!1,r);break;case"2i":t.uniform2i(a,r[0],r[1]);break;case"2f":t.uniform2f(a,r[0],r[1]);break;case"3i":t.uniform3i(a,r[0],r[1],r[2]);break;case"3f":t.uniform3f(a,r[0],r[1],r[2]);break;case"4i":t.uniform4i(a,r[0],r[1],r[2],r[3]);break;case"4f":t.uniform4f(a,r[0],r[1],r[2],r[3]);break;case"1i":t.uniform1i(a,r);break;case"1f":t.uniform1f(a,r);break;case"1fv":t.uniform1fv(a,r);break;case"1iv":t.uniform1iv(a,r);break;case"2iv":t.uniform2iv(a,r);break;case"2fv":t.uniform2fv(a,r);break;case"3iv":t.uniform3iv(a,r);break;case"3fv":t.uniform3fv(a,r);break;case"4iv":t.uniform4iv(a,r);break;case"4fv":t.uniform4fv(a,r);break;case"m2":case"m2v":t.uniformMatrix2fv(a,!1,r);break;case"m3":case"m3v":t.uniformMatrix3fv(a,!1,r);break;case"m4v":if(r instanceof Array){for(var o=new l.Float32Array(16*r.length),s=0,u=0;u<r.length;u++)for(var c=r[u],h=0;h<16;h++)o[s++]=c[h];t.uniformMatrix4fv(a,!1,o)}else r instanceof l.Float32Array&&t.uniformMatrix4fv(a,!1,r)}return!0},setUniformOfSemantic:function(t,e,n){var r=this.uniformSemantics[e];return!!r&&this.setUniform(t,r.type,r.symbol,n)},enableAttributes:function(t,e,n){var r,i=this._cache.get("program"),a=this._cache.get("attriblocations");(r=n?n.__enabledAttributeList:T[t.__GLID__])||(r=n?n.__enabledAttributeList=[]:T[t.__GLID__]=[]);for(var o=[],s=0;s<e.length;s++){var u=e[s];if(this.attributeTemplates[u]){var l=a[u];if(void 0===l){if(-1===(l=t.getAttribLocation(i,u))){o[s]=-1;continue}a[u]=l}o[s]=l,r[l]?r[l]=2:r[l]=1}else o[s]=-1}for(var s=0;s<r.length;s++)switch(r[s]){case 1:t.enableVertexAttribArray(s),r[s]=3;break;case 2:r[s]=3;break;case 3:t.disableVertexAttribArray(s),r[s]=0}return o},_parseImport:function(){this._vertexProcessedWithoutDefine=E.parseImport(this.vertex),this._fragmentProcessedWithoutDefine=E.parseImport(this.fragment)},_addDefineExtensionAndPrecision:function(t){t=t||this.extensions;for(var e=[],n=0;n<t.length;n++)e.push("#extension GL_"+t[n]+" : enable");var r=this._getDefineStr(this.vertexDefines);this._vertexProcessed=r+"\n"+this._vertexProcessedWithoutDefine;var r=this._getDefineStr(this.fragmentDefines),i=r+"\n"+this._fragmentProcessedWithoutDefine;this._fragmentProcessed=e.join("\n")+"\n"+["precision",this.precision,"float"].join(" ")+";\n"+["precision",this.precision,"int"].join(" ")+";\n"+["precision",this.precision,"sampler2D"].join(" ")+";\n"+i},_getDefineStr:function(t){var e=this.lightNumber,n=this._textureStatus,r=[];for(var i in e){var a=e[i];a>0&&r.push("#define "+i.toUpperCase()+"_COUNT "+a)}for(var o in n){n[o].enabled&&r.push("#define "+o.toUpperCase()+"_ENABLED")}for(var o in t){var s=t[o];null===s?r.push("#define "+o):r.push("#define "+o+" "+s.toString())}return r.join("\n")},_unrollLoop:function(t,e){function n(t,n,i,a){var o="";isNaN(n)&&(n=n in e?e[n]:r[n]),isNaN(i)&&(i=i in e?e[i]:r[i]);for(var s=parseInt(n);s<parseInt(i);s++)o+="{"+a.replace(/float\s*\(\s*_idx_\s*\)/g,s.toFixed(1)).replace(/_idx_/g,s)+"}";return o}var r={};for(var i in this.lightNumber)r[i+"_COUNT"]=this.lightNumber[i];return t.replace(/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g,n)},_parseUniforms:function(){function t(t,i,a,o,s,u){if(i&&a){var l,c=p[i],h=!0;if(c){if(n._uniformList.push(a),"sampler2D"!==i&&"samplerCube"!==i||(n._textureStatus[a]={enabled:!1,shaderType:r}),o&&(c+="v"),u)if(g.indexOf(u)>=0)n.attribSemantics[u]={symbol:a,type:c},h=!1;else if(x.indexOf(u)>=0){var f=!1,d=u;u.match(/TRANSPOSE$/)&&(f=!0,d=u.slice(0,-9)),n.matrixSemantics[u]={symbol:a,type:c,isTranspose:f,semanticNoTranspose:d},h=!1}else if(y.indexOf(u)>=0)n.uniformSemantics[u]={symbol:a,type:c},h=!1;else if("unconfigurable"===u)h=!1;else{if(!(l=n._parseDefaultValue(i,u)))throw new Error('Unkown semantic "'+u+'"');u=""}h&&(e[a]={type:c,value:o?v.array:l||v[i],semantic:u||null})}return["uniform",i,a,o].join(" ")+";\n"}}var e={},n=this,r="vertex";this._uniformList=[],this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(_,t),r="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(_,t),n.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=e},_parseDefaultValue:function(t,e){var n=/\[\s*(.*)\s*\]/;{if("vec2"!==t&&"vec3"!==t&&"vec4"!==t)return"bool"===t?function(){return"true"===e.toLowerCase()}:"float"===t?function(){return parseFloat(e)}:"int"===t?function(){return parseInt(e)}:void 0;var r=n.exec(e)[1];if(r){var i=r.split(/\s*,\s*/);return function(){return new l.Float32Array(i)}}}},createUniforms:function(){var t={};for(var e in this.uniformTemplates){var n=this.uniformTemplates[e];t[e]={type:n.type,value:n.value()}}return t},attached:function(){this._attacheMaterialNumber++},detached:function(){this._attacheMaterialNumber--},isAttachedToAny:function(){return 0!==this._attacheMaterialNumber},_parseAttributes:function(){function t(t,r,i,a,o){if(r&&i){var s=1;switch(r){case"vec4":s=4;break;case"vec3":s=3;break;case"vec2":s=2;break;case"float":s=1}if(e[i]={type:"float",size:s,semantic:o||null},o){if(g.indexOf(o)<0)throw new Error('Unkown semantic "'+o+'"');n.attribSemantics[o]={symbol:i,type:r}}}return["attribute",r,i].join(" ")+";\n"}var e={},n=this;this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(/attribute\s+(float|int|vec2|vec3|vec4)\s+(\w*)\s*(:\s*(\w+))?;/g,t),this.attributeTemplates=e},_parseDefines:function(){function t(t,r,i){var a="vertex"===n?e.vertexDefines:e.fragmentDefines;return a[r]||(a[r]="false"!=i&&("true"==i||(i?parseFloat(i):null))),""}var e=this,n="vertex";this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(m,t),n="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(m,t)},_buildProgram:function(t,e,n){var r=this._cache;r.get("program")&&t.deleteProgram(r.get("program"));var a=t.createProgram(),o=t.createShader(t.VERTEX_SHADER);t.shaderSource(o,e),t.compileShader(o);var s=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(s,n),t.compileShader(s);var u=i(t,o,e);if(u)return u;if(u=i(t,s,n))return u;if(t.attachShader(a,o),t.attachShader(a,s),this.attribSemantics.POSITION)t.bindAttribLocation(a,0,this.attribSemantics.POSITION.symbol);else{var l=Object.keys(this.attributeTemplates);t.bindAttribLocation(a,0,l[0])}if(t.linkProgram(a),!t.getProgramParameter(a,t.LINK_STATUS))return"Could not link program\nVALIDATE_STATUS: "+t.getProgramParameter(a,t.VALIDATE_STATUS)+", gl error ["+t.getError()+"]";for(var c=0;c<this._uniformList.length;c++){var h=this._uniformList[c];r.get("locations")[h]=t.getUniformLocation(a,h)}t.deleteShader(o),t.deleteShader(s),r.put("program",a)},clone:function(){var t=new E({vertex:this.vertex,fragment:this.fragment,vertexDefines:s.clone(this.vertexDefines),fragmentDefines:s.clone(this.fragmentDefines)});for(var e in this._textureStatus)t._textureStatus[e]=s.clone(this._textureStatus[e]);return t},dispose:function(t){var e=this._cache;e.use(t.__GLID__);var n=e.get("program");n&&t.deleteProgram(n),e.deleteContext(t.__GLID__),this._locations={}}});E.parseImport=function(t){return t=t.replace(/(@import)\s*([0-9a-zA-Z_\-\.]*)/g,function(t,e,n){var t=E.source(n);return t?E.parseImport(t):(console.error('Shader chunk "'+n+'" not existed in library'),"")})};E.import=function(t){t.replace(/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g,function(t,e,n,r){var r=r.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(r){for(var i,a=n.split("."),o=E.codes,s=0;s<a.length-1;)i=a[s++],o[i]||(o[i]={}),o=o[i];i=a[s],o[i]=r}return r})},E.codes={},E.source=function(t){for(var e=t.split("."),n=E.codes,r=0;n&&r<e.length;){n=n[e[r++]]}return"string"!=typeof n?(console.error('Shader "'+t+'" not existed in library'),""):n},t.exports=E},function(t,e,n){"use strict";var r=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth","EXT_sRGB"],i=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"],a={},o={},s={initialize:function(t){var e=t.__GLID__;if(!a[e]){a[e]={},o[e]={};for(var n=0;n<r.length;n++){var s=r[n];this._createExtension(t,s)}for(var n=0;n<i.length;n++){var u=i[n];o[e][u]=t.getParameter(t[u])}}},getExtension:function(t,e){var n=t.__GLID__;if(a[n])return void 0===a[n][e]&&this._createExtension(t,e),a[n][e]},getParameter:function(t,e){var n=t.__GLID__;if(o[n])return o[n][e]},dispose:function(t){delete a[t.__GLID__],delete o[t.__GLID__]},_createExtension:function(t,e){var n=t.getExtension(e);n||(n=t.getExtension("MOZ_"+e)),n||(n=t.getExtension("WEBKIT_"+e)),a[t.__GLID__][e]=n}};t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(4),a=n(24),o=n(15),s=n(0),u=n(3),l=s.mat4,c=0,h=r.extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name=(this.type||"NODE")+"_"+c++),this.position||(this.position=new i),this.rotation||(this.rotation=new a),this.scale||(this.scale=new i(1,1,1)),this.worldTransform=new o,this.localTransform=new o,this._children=[]},{target:null,invisible:!1,isRenderable:function(){return!1},setName:function(t){var e=this._scene;if(e){var n=e._nodeRepository;delete n[this.name],n[t]=this}this.name=t},add:function(t){this._inIterating&&console.warn("Add operation can cause unpredictable error when in iterating");var e=t._parent;if(e!==this){e&&e.remove(t),t._parent=this,this._children.push(t);var n=this._scene;n&&n!==t.scene&&t.traverse(this._addSelfToScene,this),t._needsUpdateWorldTransform=!0}},remove:function(t){this._inIterating&&console.warn("Remove operation can cause unpredictable error when in iterating");var e=this._children,n=e.indexOf(t);n<0||(e.splice(n,1),t._parent=null,this._scene&&t.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var t=this._children,e=0;e<t.length;e++)t[e]._parent=null,this._scene&&t[e].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(t){t._scene.removeFromScene(t),t._scene=null},_addSelfToScene:function(t){this._scene.addToScene(t),t._scene=this._scene},isAncestor:function(t){for(var e=t._parent;e;){if(e===this)return!0;e=e._parent}return!1},children:function(){return this._children.slice()},childAt:function(t){return this._children[t]},getChildByName:function(t){for(var e=this._children,n=0;n<e.length;n++)if(e[n].name===t)return e[n]},getDescendantByName:function(t){for(var e=this._children,n=0;n<e.length;n++){var r=e[n];if(r.name===t)return r;var i=r.getDescendantByName(t);if(i)return i}},queryNode:function(t){if(t){for(var e=t.split("/"),n=this,r=0;r<e.length;r++){var i=e[r];if(i){for(var a=!1,o=n._children,s=0;s<o.length;s++){var u=o[s];if(u.name===i){n=u,a=!0;break}}if(!a)return}}return n}},getPath:function(t){if(!this._parent)return"/";for(var e=this._parent,n=this.name;e._parent&&(n=e.name+"/"+n,e._parent!=t);)e=e._parent;return!e._parent&&t?null:n},traverse:function(t,e,n){this._inIterating=!0,null!=n&&this.constructor!==n||t.call(e,this);for(var r=this._children,i=0,a=r.length;i<a;i++)r[i].traverse(t,e,n);this._inIterating=!1},eachChild:function(t,e,n){this._inIterating=!0;for(var r=this._children,i=null==n,a=0,o=r.length;a<o;a++){var s=r[a];(i||s.constructor===n)&&t.call(e,s,a)}this._inIterating=!1},setLocalTransform:function(t){l.copy(this.localTransform._array,t._array),this.decomposeLocalTransform()},decomposeLocalTransform:function(t){var e=t?null:this.scale;this.localTransform.decomposeMatrix(e,this.rotation,this.position)},setWorldTransform:function(t){l.copy(this.worldTransform._array,t._array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var t=l.create();return function(e){var n=this.localTransform,r=this.worldTransform;this._parent?(l.invert(t,this._parent.worldTransform._array),l.multiply(n._array,t,r._array)):l.copy(n._array,r._array);var i=e?null:this.scale;n.decomposeMatrix(i,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var t=this.position,e=this.rotation,n=this.scale;if(this.transformNeedsUpdate()){var r=this.localTransform._array;l.fromRotationTranslation(r,e._array,t._array),l.scale(r,r,n._array),e._dirty=!1,n._dirty=!1,t._dirty=!1,this._needsUpdateWorldTransform=!0}},_updateWorldTransformTopDown:function(){var t=this.localTransform._array,e=this.worldTransform._array;this._parent?l.multiplyAffine(e,this._parent.worldTransform._array,t):l.copy(e,t)},updateWorldTransform:function(){for(var t=this;t&&t.getParent()&&t.getParent().transformNeedsUpdate();)t=t.getParent();t.update()},update:function(t){this.autoUpdateLocalTransform?this.updateLocalTransform():t=!0,(t||this._needsUpdateWorldTransform)&&(this._updateWorldTransformTopDown(),t=!0,this._needsUpdateWorldTransform=!1);for(var e=this._children,n=0,r=e.length;n<r;n++)e[n].update(t)},getBoundingBox:function(){function t(t){return!t.invisible}return function(e,n){n=n||new u,e=e||t;var r=this._children;0===r.length&&(n.max.set(-1/0,-1/0,-1/0),n.min.set(1/0,1/0,1/0));for(var i=new u,a=0;a<r.length;a++){var o=r[a];e(o)&&(o.getBoundingBox(e,i),o.updateLocalTransform(),i.isFinite()&&i.applyTransform(o.localTransform),0===a?n.copy(i):n.union(i))}return n}}(),getWorldPosition:function(t){this.transformNeedsUpdate()&&this.updateWorldTransform();var e=this.worldTransform._array;if(t){var n=t._array;return n[0]=e[12],n[1]=e[13],n[2]=e[14],t}return new i(e[12],e[13],e[14])},clone:function(){var t=new this.constructor,e=this._children;t.setName(this.name),t.position.copy(this.position),t.rotation.copy(this.rotation),t.scale.copy(this.scale);for(var n=0;n<e.length;n++)t.add(e[n].clone());return t},rotateAround:function(){var t=new i,e=new o;return function(n,r,i){t.copy(this.position).subtract(n);var a=this.localTransform;a.identity(),a.translate(n),a.rotate(i,r),e.fromRotationTranslation(this.rotation,t),a.multiply(e),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var t=new o;return function(e,n){t.lookAt(this.position,e,n||this.localTransform.y).invert(),this.setLocalTransform(t),this.target=e}}()});t.exports=h},function(t,e,n){"use strict";var r=!0;try{var i=document.createElement("canvas");if(!(i.getContext("webgl")||i.getContext("experimental-webgl")))throw new Error}catch(t){r=!1}var a={};a.supportWebGL=function(){return r},a.Int8Array="undefined"==typeof Int8Array?Array:Int8Array,a.Uint8Array="undefined"==typeof Uint8Array?Array:Uint8Array,a.Uint16Array="undefined"==typeof Uint16Array?Array:Uint16Array,a.Uint32Array="undefined"==typeof Uint32Array?Array:Uint32Array,a.Int16Array="undefined"==typeof Int16Array?Array:Int16Array,a.Float32Array="undefined"==typeof Float32Array?Array:Float32Array,a.Float64Array="undefined"==typeof Float64Array?Array:Float64Array,t.exports=a},function(t,e,n){"use strict";var r=n(8),i=r.extend(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}},{type:"",clone:function(){var t=r.prototype.clone.call(this);return t.color=Array.prototype.slice.call(this.color),t.intensity=this.intensity,t.castShadow=this.castShadow,t.shadowResolution=this.shadowResolution,t}});t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(13),a=r.extend({name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,_enabledUniforms:null},function(){this.name||(this.name="MATERIAL_"+this.__GUID__),this.shader&&this.attachShader(this.shader),this.uniforms||(this.uniforms={})},{bind:function(t,e,n,r){for(var e=e||this.shader,a=r===e,o=e.currentTextureSlot(),s=0;s<this._enabledUniforms.length;s++){var u=this._enabledUniforms[s],l=this.uniforms[u],c=l.value;if(!n||!a||n.uniforms[u].value!==c)if(void 0!==c){if(null!==c){if(!(c instanceof Array)||c.length)if(c instanceof i){var h=e.currentTextureSlot(),f=e.setUniform(t,"1i",u,h);if(!f)continue;e.useCurrentTextureSlot(t,c)}else if(c instanceof Array){if(0===c.length)continue;var d=c[0];if(d instanceof i){if(!e.hasUniform(u))continue;for(var _=[],m=0;m<c.length;m++){var p=c[m],h=e.currentTextureSlot();_.push(h),e.useCurrentTextureSlot(t,p)}e.setUniform(t,"1iv",u,_)}else e.setUniform(t,l.type,u,c)}else e.setUniform(t,l.type,u,c)}else if("t"===l.type){var h=e.currentTextureSlot(),f=e.setUniform(t,"1i",u,h);f&&e.useCurrentTextureSlot(t,null)}}else console.warn('Uniform value "'+u+'" is undefined')}e.resetTextureSlot(o)},setUniform:function(t,e){void 0===e&&console.warn('Uniform value "'+t+'" is undefined');var n=this.uniforms[t];n&&(n.value=e)},setUniforms:function(t){for(var e in t){var n=t[e];this.setUniform(e,n)}},isUniformEnabled:function(t){return this._enabledUniforms.indexOf(t)>=0},set:function(t,e){if("object"==typeof t)for(var n in t){var r=t[n];this.set(n,r)}else{var i=this.uniforms[t];i&&(i.value=e)}},get:function(t){var e=this.uniforms[t];if(e)return e.value},attachShader:function(t,e){this.shader&&this.shader.detached();var n=this.uniforms;this.uniforms=t.createUniforms(),this.shader=t;var r=this.uniforms;if(this._enabledUniforms=Object.keys(r),this._enabledUniforms.sort(),e)for(var i in n)r[i]&&(r[i].value=n[i].value);t.attached()},detachShader:function(){this.shader.detached(),this.shader=null,this.uniforms={}},clone:function(){var t=new this.constructor({name:this.name,shader:this.shader});for(var e in this.uniforms)t.uniforms[e].value=this.uniforms[e].value;return t.depthTest=this.depthTest,t.depthMask=this.depthMask,t.transparent=this.transparent,t.blend=this.blend,t},dispose:function(t,e){if(e)for(var n in this.uniforms){var r=this.uniforms[n].value;if(r)if(r instanceof i)r.dispose(t);else if(r instanceof Array)for(var a=0;a<r.length;a++)r[a]instanceof i&&r[a].dispose(t)}var o=this.shader;o&&(this.detachShader(),o.isAttachedToAny()||o.dispose(t))}});t.exports=a},function(t,e,n){"use strict";function r(t){return"attr_"+t}var i=n(53),a=n(3),o=n(0),s=n(9),u=n(2),l=o.mat4,c=o.vec3,h=i.StaticAttribute,f=c.create,d=c.add,_=c.set,m=i.extend(function(){return{attributes:{position:new h("position","float",3,"POSITION"),texcoord0:new h("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new h("texcoord1","float",2,"TEXCOORD_1"),normal:new h("normal","float",3,"NORMAL"),tangent:new h("tangent","float",4,"TANGENT"),color:new h("color","float",4,"COLOR"),weight:new h("weight","float",3,"WEIGHT"),joint:new h("joint","float",4,"JOINT"),barycentric:new h("barycentric","float",3,null)},hint:u.STATIC_DRAW,indices:null,_normalType:"vertex",_enabledAttributes:null}},{updateBoundingBox:function(){var t=this.boundingBox;t||(t=this.boundingBox=new a);var e=this.attributes.position.value;if(e&&e.length){var n=t.min,r=t.max,i=n._array,o=r._array;c.set(i,e[0],e[1],e[2]),c.set(o,e[0],e[1],e[2]);for(var s=3;s<e.length;){var u=e[s++],l=e[s++],h=e[s++];u<i[0]&&(i[0]=u),l<i[1]&&(i[1]=l),h<i[2]&&(i[2]=h),u>o[0]&&(o[0]=u),l>o[1]&&(o[1]=l),h>o[2]&&(o[2]=h)}n._dirty=!0,r._dirty=!0}},dirty:function(){for(var t=this.getEnabledAttributes(),e=0;e<t.length;e++)this.dirtyAttribute(t[e]);this.dirtyIndices(),this._enabledAttributes=null},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(t){this._cache.dirtyAll(r(t)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(t,e){if(t<this.triangleCount&&t>=0){e||(e=f());var n=this.indices;return e[0]=n[3*t],e[1]=n[3*t+1],e[2]=n[3*t+2],e}},setTriangleIndices:function(t,e){var n=this.indices;n[3*t]=e[0],n[3*t+1]=e[1],n[3*t+2]=e[2]},isUseIndices:function(){return!!this.indices},initIndicesFromArray:function(t){var e,n=this.vertexCount>65535?s.Uint32Array:s.Uint16Array;if(t[0]&&t[0].length){var r=0;e=new n(3*t.length);for(var i=0;i<t.length;i++)for(var a=0;a<3;a++)e[r++]=t[i][a]}else e=new n(t);this.indices=e},createAttribute:function(t,e,n,r){var i=new h(t,e,n,r);return this.attributes[t]&&this.removeAttribute(t),this.attributes[t]=i,this._attributeList.push(t),i},removeAttribute:function(t){var e=this._attributeList,n=e.indexOf(t);return n>=0&&(e.splice(n,1),delete this.attributes[t],!0)},getEnabledAttributes:function(){var t=this._enabledAttributes,e=this._attributeList;if(t)return t;for(var n=[],r=this.vertexCount,i=0;i<e.length;i++){var a=e[i],o=this.attributes[a];o.value&&o.value.length===r*o.size&&n.push(a)}return this._enabledAttributes=n,n},getBufferChunks:function(t){var e=this._cache;e.use(t.__GLID__);var n=e.isDirty("attributes"),i=e.isDirty("indices");if(n||i){this._updateBuffer(t,n,i);for(var a=this.getEnabledAttributes(),o=0;o<a.length;o++)e.fresh(r(a[o]));e.fresh("attributes"),e.fresh("indices")}return e.get("chunks")},_updateBuffer:function(t,e,n){var a=this._cache,o=a.get("chunks"),s=!1;o||(o=[],o[0]={attributeBuffers:[],indicesBuffer:null},a.put("chunks",o),s=!0);var u=o[0],l=u.attributeBuffers,c=u.indicesBuffer;if(e||s){var h=this.getEnabledAttributes(),f={};if(!s)for(var d=0;d<l.length;d++)f[l[d].name]=l[d];for(var _=0;_<h.length;_++){var m,p=h[_],v=this.attributes[p];s||(m=f[p]);var g;g=m?m.buffer:t.createBuffer(),a.isDirty(r(p))&&(t.bindBuffer(t.ARRAY_BUFFER,g),t.bufferData(t.ARRAY_BUFFER,v.value,this.hint)),l[_]=new i.AttributeBuffer(p,v.type,g,v.size,v.semantic)}for(var d=_;d<l.length;d++)t.deleteBuffer(l[d].buffer);l.length=_}this.isUseIndices()&&(n||s)&&(c||(c=new i.IndicesBuffer(t.createBuffer()),u.indicesBuffer=c),c.count=this.indices.length,t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,c.buffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices,this.hint))},generateVertexNormals:function(){if(this.vertexCount){var t=this.indices,e=this.attributes,n=e.position.value,r=e.normal.value;if(r&&r.length===n.length)for(var i=0;i<r.length;i++)r[i]=0;else r=e.normal.value=new s.Float32Array(n.length);for(var a=f(),o=f(),u=f(),l=f(),h=f(),d=f(),m=0;m<t.length;){var p=t[m++],v=t[m++],g=t[m++];_(a,n[3*p],n[3*p+1],n[3*p+2]),_(o,n[3*v],n[3*v+1],n[3*v+2]),_(u,n[3*g],n[3*g+1],n[3*g+2]),c.sub(l,a,o),c.sub(h,o,u),c.cross(d,l,h);for(var i=0;i<3;i++)r[3*p+i]=r[3*p+i]+d[i],r[3*v+i]=r[3*v+i]+d[i],r[3*g+i]=r[3*g+i]+d[i]}for(var i=0;i<r.length;)_(d,r[i],r[i+1],r[i+2]),c.normalize(d,d),r[i++]=d[0],r[i++]=d[1],r[i++]=d[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var t=this.indices,e=this.attributes,n=e.position.value,r=e.normal.value,i=f(),a=f(),o=f(),s=f(),u=f(),l=f();r||(r=e.normal.value=new Float32Array(n.length));for(var h=0;h<t.length;){var d=t[h++],m=t[h++],p=t[h++];_(i,n[3*d],n[3*d+1],n[3*d+2]),_(a,n[3*m],n[3*m+1],n[3*m+2]),_(o,n[3*p],n[3*p+1],n[3*p+2]),c.sub(s,i,a),c.sub(u,a,o),c.cross(l,s,u),c.normalize(l,l);for(var v=0;v<3;v++)r[3*d+v]=l[v],r[3*m+v]=l[v],r[3*p+v]=l[v]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var t=this.vertexCount,e=this.attributes;e.tangent.value||(e.tangent.value=new Float32Array(4*t));for(var n=e.texcoord0.value,r=e.position.value,i=e.tangent.value,a=e.normal.value,o=[],s=[],u=0;u<t;u++)o[u]=[0,0,0],s[u]=[0,0,0];for(var l=[0,0,0],h=[0,0,0],_=this.indices,u=0;u<_.length;){var m=_[u++],p=_[u++],v=_[u++],g=n[2*m],y=n[2*p],x=n[2*v],T=n[2*m+1],E=n[2*p+1],b=n[2*v+1],A=r[3*m],S=r[3*p],N=r[3*v],C=r[3*m+1],R=r[3*p+1],M=r[3*v+1],w=r[3*m+2],I=r[3*p+2],D=r[3*v+2],L=S-A,O=N-A,P=R-C,U=M-C,F=I-w,k=D-w,B=y-g,H=x-g,W=E-T,G=b-T,q=1/(B*G-W*H);l[0]=(G*L-W*O)*q,l[1]=(G*P-W*U)*q,l[2]=(G*F-W*k)*q,h[0]=(B*O-H*L)*q,h[1]=(B*U-H*P)*q,h[2]=(B*k-H*F)*q,d(o[m],o[m],l),d(o[p],o[p],l),d(o[v],o[v],l),d(s[m],s[m],h),d(s[p],s[p],h),d(s[v],s[v],h)}for(var V=f(),z=f(),j=f(),u=0;u<t;u++){j[0]=a[3*u],j[1]=a[3*u+1],j[2]=a[3*u+2];var X=o[u];c.scale(V,j,c.dot(j,X)),c.sub(V,X,V),c.normalize(V,V),c.cross(z,j,X),i[4*u]=V[0],i[4*u+1]=V[1],i[4*u+2]=V[2],i[4*u+3]=c.dot(z,s[u])<0?-1:1}this.dirty()}},isUniqueVertex:function(){return!this.isUseIndices()||this.vertexCount===this.indices.length},generateUniqueVertex:function(){if(this.vertexCount){this.indices.length>65535&&(this.indices=new s.Uint32Array(this.indices));for(var t=this.attributes,e=this.indices,n=this.getEnabledAttributes(),r={},i=0;i<n.length;i++){var a=n[i];r[a]=t[a].value,t[a].init(this.indices.length)}for(var o=0,u=0;u<e.length;u++){for(var l=e[u],i=0;i<n.length;i++)for(var a=n[i],c=t[a].value,h=t[a].size,f=0;f<h;f++)c[o*h+f]=r[a][l*h+f];e[u]=o,o++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var t=this.attributes,e=t.barycentric.value,n=this.indices;if(!e||e.length!==3*n.length){e=t.barycentric.value=new Float32Array(3*n.length);for(var r=0;r<n.length;)for(var i=0;i<3;i++){var a=n[r++];e[3*a+i]=1}this.dirty()}}},applyTransform:function(t){var e=this.attributes,n=e.position.value,r=e.normal.value,i=e.tangent.value;t=t._array;var a=l.create();l.invert(a,t),l.transpose(a,a);var o=c.transformMat4,s=c.forEach;s(n,3,0,null,o,t),r&&s(r,3,0,null,o,a),i&&s(i,4,0,null,o,a),this.boundingBox&&this.updateBoundingBox()},dispose:function(t){var e=this._cache;e.use(t.__GLID__);var n=e.get("chunks");if(n)for(var r=0;r<n.length;r++)for(var i=n[r],a=0;a<i.attributeBuffers.length;a++){var o=i.attributeBuffers[a];t.deleteBuffer(o.buffer)}e.deleteContext(t.__GLID__)}});Object.defineProperty&&(Object.defineProperty(m.prototype,"vertexCount",{enumerable:!1,get:function(){var t=this.attributes[this.mainAttribute];return t&&t.value?t.value.length/t.size:0}}),Object.defineProperty(m.prototype,"triangleCount",{enumerable:!1,get:function(){var t=this.indices;return t?t.length/3:0}})),m.Attribute=i.StaticAttribute,t.exports=m},function(t,e,n){"use strict";var r=n(1),i=n(2),a=n(18),o=n(7),s=r.extend({width:512,height:512,type:i.UNSIGNED_BYTE,format:i.RGBA,wrapS:i.CLAMP_TO_EDGE,wrapT:i.CLAMP_TO_EDGE,minFilter:i.LINEAR_MIPMAP_LINEAR,magFilter:i.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1},function(){this._cache=new a},{getWebGLTexture:function(t){var e=this._cache;return e.use(t.__GLID__),e.miss("webgl_texture")&&e.put("webgl_texture",t.createTexture()),this.dynamic?this.update(t):e.isDirty()&&(this.update(t),e.fresh()),e.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache&&this._cache.dirtyAll()},update:function(t){},updateCommon:function(t){t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,this.unpackAlignment),this._fallBack(t)},_fallBack:function(t){var e=this.isPowerOfTwo();this.format===i.DEPTH_COMPONENT&&(this.useMipmap=!1);var n=o.getExtension(t,"EXT_sRGB");this.format!==s.SRGB||n||(this.format=s.RGB),this.format!==s.SRGB_ALPHA||n||(this.format=s.RGBA),e&&this.useMipmap?(this.NPOT=!1,this._minFilterOriginal&&(this.minFilter=this._minFilterOriginal),this._magFilterOriginal&&(this.magFilter=this._magFilterOriginal),this._wrapSOriginal&&(this.wrapS=this._wrapSOriginal),this._wrapTOriginal&&(this.wrapT=this._wrapTOriginal)):(this.NPOT=!0,this._minFilterOriginal=this.minFilter,this._magFilterOriginal=this.magFilter,this._wrapSOriginal=this.wrapS,this._wrapTOriginal=this.wrapT,this.minFilter==i.NEAREST_MIPMAP_NEAREST||this.minFilter==i.NEAREST_MIPMAP_LINEAR?this.minFilter=i.NEAREST:this.minFilter!=i.LINEAR_MIPMAP_LINEAR&&this.minFilter!=i.LINEAR_MIPMAP_NEAREST||(this.minFilter=i.LINEAR),this.wrapS=i.CLAMP_TO_EDGE,this.wrapT=i.CLAMP_TO_EDGE)},nextHighestPowerOfTwo:function(t){--t;for(var e=1;e<32;e<<=1)t|=t>>e;return t+1},dispose:function(t){var e=this._cache;e.use(t.__GLID__);var n=e.get("webgl_texture");n&&t.deleteTexture(n),e.deleteContext(t.__GLID__)},isRenderable:function(){},isPowerOfTwo:function(){}});Object.defineProperty(s.prototype,"width",{get:function(){return this._width},set:function(t){this._width=t}}),Object.defineProperty(s.prototype,"height",{get:function(){return this._height},set:function(t){this._height=t}}),s.BYTE=i.BYTE,s.UNSIGNED_BYTE=i.UNSIGNED_BYTE,s.SHORT=i.SHORT,s.UNSIGNED_SHORT=i.UNSIGNED_SHORT,s.INT=i.INT,s.UNSIGNED_INT=i.UNSIGNED_INT,s.FLOAT=i.FLOAT,s.HALF_FLOAT=36193,s.UNSIGNED_INT_24_8_WEBGL=34042,s.DEPTH_COMPONENT=i.DEPTH_COMPONENT,s.DEPTH_STENCIL=i.DEPTH_STENCIL,s.ALPHA=i.ALPHA,s.RGB=i.RGB,s.RGBA=i.RGBA,s.LUMINANCE=i.LUMINANCE,s.LUMINANCE_ALPHA=i.LUMINANCE_ALPHA,s.SRGB=35904,s.SRGB_ALPHA=35906,s.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,s.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,s.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,s.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,s.NEAREST=i.NEAREST,s.LINEAR=i.LINEAR,s.NEAREST_MIPMAP_NEAREST=i.NEAREST_MIPMAP_NEAREST,s.LINEAR_MIPMAP_NEAREST=i.LINEAR_MIPMAP_NEAREST,s.NEAREST_MIPMAP_LINEAR=i.NEAREST_MIPMAP_LINEAR,s.LINEAR_MIPMAP_LINEAR=i.LINEAR_MIPMAP_LINEAR,s.REPEAT=i.REPEAT,s.CLAMP_TO_EDGE=i.CLAMP_TO_EDGE,s.MIRRORED_REPEAT=i.MIRRORED_REPEAT,t.exports=s},function(t,e,n){"use strict";var r=n(54),i=n(2),a=n(16),o=r.extend({skeleton:null,joints:null,useSkinMatricesTexture:!1},function(){this.joints||(this.joints=[])},{render:function(t,e){if(e=e||this.material.shader,this.skeleton){var n=this.skeleton.getSubSkinMatrices(this.__GUID__,this.joints);if(this.useSkinMatricesTexture){var i,a=this.joints.length;i=a>256?64:a>64?32:a>16?16:8;var o=this.getSkinMatricesTexture();o.width=i,o.height=i,o.pixels&&o.pixels.length===i*i*4||(o.pixels=new Float32Array(i*i*4)),o.pixels.set(n),o.dirty(),e.setUniform(t,"1f","skinMatricesTextureSize",i)}else e.setUniformOfSemantic(t,"SKIN_MATRIX",n)}return r.prototype.render.call(this,t,e)},getSkinMatricesTexture:function(){return this._skinMatricesTexture=this._skinMatricesTexture||new a({type:i.FLOAT,minFilter:i.NEAREST,magFilter:i.NEAREST,useMipmap:!1,flipY:!1}),this._skinMatricesTexture}});o.POINTS=i.POINTS,o.LINES=i.LINES,o.LINE_LOOP=i.LINE_LOOP,o.LINE_STRIP=i.LINE_STRIP,o.TRIANGLES=i.TRIANGLES,o.TRIANGLE_STRIP=i.TRIANGLE_STRIP,o.TRIANGLE_FAN=i.TRIANGLE_FAN,o.BACK=i.BACK,o.FRONT=i.FRONT,o.FRONT_AND_BACK=i.FRONT_AND_BACK,o.CW=i.CW,o.CCW=i.CCW,t.exports=o},function(t,e,n){"use strict";var r=n(0),i=n(4),a=r.mat4,o=r.vec3,s=r.mat3,u=r.quat,l=function(){this._axisX=new i,this._axisY=new i,this._axisZ=new i,this._array=a.create(),this._dirty=!0};l.prototype={constructor:l,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},adjoint:function(){return a.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new l).copy(this)},copy:function(t){return a.copy(this._array,t._array),this._dirty=!0,this},determinant:function(){return a.determinant(this._array)},fromQuat:function(t){return a.fromQuat(this._array,t._array),this._dirty=!0,this},fromRotationTranslation:function(t,e){return a.fromRotationTranslation(this._array,t._array,e._array),this._dirty=!0,this},fromMat2d:function(t){return l.fromMat2d(this,t),this},frustum:function(t,e,n,r,i,o){return a.frustum(this._array,t,e,n,r,i,o),this._dirty=!0,this},identity:function(){return a.identity(this._array),this._dirty=!0,this},invert:function(){return a.invert(this._array,this._array),this._dirty=!0,this},lookAt:function(t,e,n){return a.lookAt(this._array,t._array,e._array,n._array),this._dirty=!0,this},mul:function(t){return a.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return a.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return a.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return a.multiply(this._array,t._array,this._array),this._dirty=!0,this},ortho:function(t,e,n,r,i,o){return a.ortho(this._array,t,e,n,r,i,o),this._dirty=!0,this},perspective:function(t,e,n,r){return a.perspective(this._array,t,e,n,r),this._dirty=!0,this},rotate:function(t,e){return a.rotate(this._array,this._array,t,e._array),this._dirty=!0,this},rotateX:function(t){return a.rotateX(this._array,this._array,t),this._dirty=!0,this},rotateY:function(t){return a.rotateY(this._array,this._array,t),this._dirty=!0,this},rotateZ:function(t){return a.rotateZ(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return a.scale(this._array,this._array,t._array),this._dirty=!0,this},translate:function(t){return a.translate(this._array,this._array,t._array),this._dirty=!0,this},transpose:function(){return a.transpose(this._array,this._array),this._dirty=!0,this},decomposeMatrix:function(){var t=o.create(),e=o.create(),n=o.create(),r=s.create();return function(i,a,l){var c=this._array;o.set(t,c[0],c[1],c[2]),o.set(e,c[4],c[5],c[6]),o.set(n,c[8],c[9],c[10]);var h=o.length(t),f=o.length(e),d=o.length(n);this.determinant()<0&&(h=-h),i&&i.set(h,f,d),l.set(c[12],c[13],c[14]),s.fromMat4(r,c),r[0]/=h,r[1]/=h,r[2]/=h,r[3]/=f,r[4]/=f,r[5]/=f,r[6]/=d,r[7]/=d,r[8]/=d,u.fromMat3(a._array,r),u.normalize(a._array,a._array),a._dirty=!0,l._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var c=Object.defineProperty;if(c){var h=l.prototype;c(h,"z",{get:function(){var t=this._array;return this._axisZ.set(t[8],t[9],t[10]),this._axisZ},set:function(t){var e=this._array;t=t._array,e[8]=t[0],e[9]=t[1],e[10]=t[2],this._dirty=!0}}),c(h,"y",{get:function(){var t=this._array;return this._axisY.set(t[4],t[5],t[6]),this._axisY},set:function(t){var e=this._array;t=t._array,e[4]=t[0],e[5]=t[1],e[6]=t[2],this._dirty=!0}}),c(h,"x",{get:function(){var t=this._array;return this._axisX.set(t[0],t[1],t[2]),this._axisX},set:function(t){var e=this._array;t=t._array,e[0]=t[0],e[1]=t[1],e[2]=t[2],this._dirty=!0}})}l.adjoint=function(t,e){return a.adjoint(t._array,e._array),t._dirty=!0,t},l.copy=function(t,e){return a.copy(t._array,e._array),t._dirty=!0,t},l.determinant=function(t){return a.determinant(t._array)},l.identity=function(t){return a.identity(t._array),t._dirty=!0,t},l.ortho=function(t,e,n,r,i,o,s){return a.ortho(t._array,e,n,r,i,o,s),t._dirty=!0,t},l.perspective=function(t,e,n,r,i){return a.perspective(t._array,e,n,r,i),t._dirty=!0,t},l.lookAt=function(t,e,n,r){return a.lookAt(t._array,e._array,n._array,r._array),t._dirty=!0,t},l.invert=function(t,e){return a.invert(t._array,e._array),t._dirty=!0,t},l.mul=function(t,e,n){return a.mul(t._array,e._array,n._array),t._dirty=!0,t},l.multiply=l.mul,l.fromQuat=function(t,e){return a.fromQuat(t._array,e._array),t._dirty=!0,t},l.fromRotationTranslation=function(t,e,n){return a.fromRotationTranslation(t._array,e._array,n._array),t._dirty=!0,t},l.fromMat2d=function(t,e){t._dirty=!0;var e=e._array,t=t._array;return t[0]=e[0],t[4]=e[2],t[12]=e[4],t[1]=e[1],t[5]=e[3],t[13]=e[5],t},l.rotate=function(t,e,n,r){return a.rotate(t._array,e._array,n,r._array),t._dirty=!0,t},l.rotateX=function(t,e,n){return a.rotateX(t._array,e._array,n),t._dirty=!0,t},l.rotateY=function(t,e,n){return a.rotateY(t._array,e._array,n),t._dirty=!0,t},l.rotateZ=function(t,e,n){return a.rotateZ(t._array,e._array,n),t._dirty=!0,t},l.scale=function(t,e,n){return a.scale(t._array,e._array,n._array),t._dirty=!0,t},l.transpose=function(t,e){return a.transpose(t._array,e._array),t._dirty=!0,t},l.translate=function(t,e,n){return a.translate(t._array,e._array,n._array),t._dirty=!0,t},t.exports=l},function(t,e,n){var r=n(13),i=n(7),a=n(2),o=n(39),s=o.isPowerOfTwo,u=r.extend(function(){return{image:null,pixels:null,mipmaps:[]}},{update:function(t){t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),this.updateCommon(t);var e=this.format,n=this.type;t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,this.wrapS),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,this.wrapT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,this.magFilter),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,this.minFilter);var r=i.getExtension(t,"EXT_texture_filter_anisotropic");if(r&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_2D,r.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){i.getExtension(t,"OES_texture_half_float")||(n=a.FLOAT)}if(this.mipmaps.length)for(var o=this.width,s=this.height,u=0;u<this.mipmaps.length;u++){var l=this.mipmaps[u];this._updateTextureData(t,l,u,o,s,e,n),o/=2,s/=2}else this._updateTextureData(t,this,0,this.width,this.height,e,n),this.useMipmap&&!this.NPOT&&t.generateMipmap(t.TEXTURE_2D);t.bindTexture(t.TEXTURE_2D,null)},_updateTextureData:function(t,e,n,i,a,o,s){e.image?t.texImage2D(t.TEXTURE_2D,n,o,o,s,e.image):o<=r.COMPRESSED_RGBA_S3TC_DXT5_EXT&&o>=r.COMPRESSED_RGB_S3TC_DXT1_EXT?t.compressedTexImage2D(t.TEXTURE_2D,n,o,i,a,0,e.pixels):t.texImage2D(t.TEXTURE_2D,n,o,i,a,0,o,s,e.pixels)},generateMipmap:function(t){this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_2D))},isPowerOfTwo:function(){var t,e;return this.image?(t=this.image.width,e=this.image.height):(t=this.width,e=this.height),s(t)&&s(e)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||"VIDEO"===this.image.nodeName||this.image.complete:!(!this.width||!this.height)},bind:function(t){t.bindTexture(t.TEXTURE_2D,this.getWebGLTexture(t))},unbind:function(t){t.bindTexture(t.TEXTURE_2D,null)},load:function(t,e){var n=new Image;e&&(n.crossOrigin=e);var r=this;return n.onload=function(){r.dirty(),r.trigger("success",r),n.onload=null},n.onerror=function(){r.trigger("error",r),n.onerror=null},n.src=t,this.image=n,this}});Object.defineProperty(u.prototype,"width",{get:function(){return this.image?this.image.width:this._width},set:function(t){this.image?console.warn("Texture from image can't set width"):(this._width!==t&&this.dirty(),this._width=t)}}),Object.defineProperty(u.prototype,"height",{get:function(){return this.image?this.image.height:this._height},set:function(t){this.image?console.warn("Texture from image can't set height"):(this._height!==t&&this.dirty(),this._height=t)}}),t.exports=u},function(t,e,n){"use strict";function r(){}var i=n(60),a=function(t){t=t||{},this.name=t.name||"",this.target=t.target,this.life=t.life||1e3,this.delay=t.delay||0,this.gap=t.gap||0,this.playbackRate=t.playbackRate||1,this._initialized=!1,this._elapsedTime=0,this._loop=null!=t.loop&&t.loop,this.setLoop(this._loop),null!=t.easing&&this.setEasing(t.easing),this.onframe=t.onframe||r,this.onfinish=t.onfinish||r,this.onrestart=t.onrestart||r,this._paused=!1};a.prototype={gap:0,life:0,delay:0,setLoop:function(t){this._loop=t,t&&(this._loopRemained="number"==typeof t?t:1e8)},setEasing:function(t){"string"==typeof t&&(t=i[t]),this.easing=t},step:function(t,e){if(this._initialized||(this._startTime=t+this.delay,this._initialized=!0),null!=this._currentTime&&(e=t-this._currentTime),this._currentTime=t,!(this._paused||t<this._startTime)){this._elapse(t,e);var n=Math.min(this._elapsedTime/this.life,1);if(!(n<0)){var r;return r=this.easing?this.easing(n):n,this.fire("frame",r),1===n?this._loop&&this._loopRemained>0?(this._restartInLoop(t),this._loopRemained--,"restart"):(this._needsRemove=!0,"finish"):null}}},setTime:function(t){return this.step(t+this._startTime)},restart:function(t){var e=0;t&&(this._elapse(t),e=this._elapsedTime%this.life),t=t||(new Date).getTime(),this._startTime=t-e+this.delay,this._elapsedTime=0,this._needsRemove=!1,this._paused=!1},getElapsedTime:function(){return this._elapsedTime},_restartInLoop:function(t){this._startTime=t+this.gap,this._elapsedTime=0},_elapse:function(t,e){this._elapsedTime+=e*this.playbackRate},fire:function(t,e){var n="on"+t;this[n]&&this[n](this.target,e)},clone:function(){var t=new this.constructor;return t.name=this.name,t._loop=this._loop,t._loopRemained=this._loopRemained,t.life=this.life,t.gap=this.gap,t.delay=this.delay,t},pause:function(){this._paused=!0},resume:function(){this._paused=!1}},a.prototype.constructor=a,t.exports=a},function(t,e,n){"use strict";var r=function(){this._contextId=0,this._caches=[],this._context={}};r.prototype={use:function(t,e){var n=this._caches;n[t]||(n[t]={},e&&(n[t]=e())),this._contextId=t,this._context=n[t]},put:function(t,e){this._context[t]=e},get:function(t){return this._context[t]},dirty:function(t){t=t||"";var e="__dt__"+t;this.put(e,!0)},dirtyAll:function(t){t=t||"";for(var e="__dt__"+t,n=this._caches,r=0;r<n.length;r++)n[r]&&(n[r][e]=!0)},fresh:function(t){t=t||"";var e="__dt__"+t;this.put(e,!1)},freshAll:function(t){t=t||"";for(var e="__dt__"+t,n=this._caches,r=0;r<n.length;r++)n[r]&&(n[r][e]=!1)},isDirty:function(t){t=t||"";var e="__dt__"+t,n=this._context;return!n.hasOwnProperty(e)||!0===n[e]},deleteContext:function(t){delete this._caches[t],this._context={}},delete:function(t){delete this._context[t]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(t,e){Object.keys(this._caches).forEach(function(n){t&&t.call(e,n)})},miss:function(t){return!this._context.hasOwnProperty(t)}},r.prototype.constructor=r,t.exports=r},function(t,e,n){function r(){this._pool={}}function i(t,e,n){o[t]={vertex:e,fragment:n}}var a=n(6),o=(n(5),{});r.prototype.get=function(t,e){var n=[],r={},i={};"string"==typeof e?n=Array.prototype.slice.call(arguments,1):"[object Object]"==Object.prototype.toString.call(e)?(n=e.textures||[],r=e.vertexDefines||{},i=e.fragmentDefines||{}):e instanceof Array&&(n=e);var s=Object.keys(r),u=Object.keys(i);n.sort(),s.sort(),u.sort();var l=[t];l=l.concat(n);for(var c=0;c<s.length;c++)l.push(s[c],r[s[c]]);for(var c=0;c<u.length;c++)l.push(u[c],i[u[c]]);var h=l.join("_");if(this._pool[h])return this._pool[h];var f=o[t];if(!f)return void console.error('Shader "'+t+'" is not in the library');for(var d=new a({vertex:f.vertex,fragment:f.fragment}),c=0;c<n.length;c++)d.enableTexture(n[c]);for(var t in r)d.define("vertex",t,r[t]);for(var t in i)d.define("fragment",t,i[t]);return this._pool[h]=d,d},r.prototype.clear=function(){this._pool={}};var s=new r;t.exports={createLibrary:function(){return new r},get:function(){return s.get.apply(s,arguments)},template:i,clear:function(){return s.clear()}}},function(t,e,n){function r(t){return"CANVAS"===t.nodeName||"VIDEO"===t.nodeName||t.complete}var i=n(13),a=n(7),o=n(2),s=n(5),u=n(39),l=u.isPowerOfTwo,c=["px","nx","py","ny","pz","nz"],h=i.extend(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}},{update:function(t){t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.updateCommon(t);var e=this.format,n=this.type;t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,this.wrapS),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,this.wrapT),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,this.magFilter),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,this.minFilter);var r=a.getExtension(t,"EXT_texture_filter_anisotropic");if(r&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_CUBE_MAP,r.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){a.getExtension(t,"OES_texture_half_float")||(n=o.FLOAT)}if(this.mipmaps.length)for(var i=this.width,s=this.height,u=0;u<this.mipmaps.length;u++){var l=this.mipmaps[u];this._updateTextureData(t,l,u,i,s,e,n),i/=2,s/=2}else this._updateTextureData(t,this,0,this.width,this.height,e,n),!this.NPOT&&this.useMipmap&&t.generateMipmap(t.TEXTURE_CUBE_MAP);t.bindTexture(t.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(t,e,n,r,i,a,o){for(var s=0;s<6;s++){var u=c[s],l=e.image&&e.image[u];l?t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+s,n,a,a,o,l):t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+s,n,a,r,i,0,a,o,e.pixels&&e.pixels[u])}},generateMipmap:function(t){this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_CUBE_MAP))},bind:function(t){t.bindTexture(t.TEXTURE_CUBE_MAP,this.getWebGLTexture(t))},unbind:function(t){t.bindTexture(t.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?l(this.image.px.width)&&l(this.image.px.height):l(this.width)&&l(this.height)},isRenderable:function(){return this.image.px?r(this.image.px)&&r(this.image.nx)&&r(this.image.py)&&r(this.image.ny)&&r(this.image.pz)&&r(this.image.nz):!(!this.width||!this.height)},load:function(t,e){var n=0,r=this;return s.each(t,function(t,i){var a=new Image;e&&(a.crossOrigin=e),a.onload=function(){n--,0===n&&(r.dirty(),r.trigger("success",r)),a.onload=null},a.onerror=function(){n--,a.onerror=null},n++,a.src=t,r.image[i]=a}),this}});Object.defineProperty(h.prototype,"width",{get:function(){return this.image&&this.image.px?this.image.px.width:this._width},set:function(t){this.image&&this.image.px?console.warn("Texture from image can't set width"):(this._width!==t&&this.dirty(),this._width=t)}}),Object.defineProperty(h.prototype,"height",{get:function(){return this.image&&this.image.px?this.image.px.height:this._height},set:function(t){this.image&&this.image.px?console.warn("Texture from image can't set height"):(this._height!==t&&this.dirty(),this._height=t)}}),t.exports=h},function(t,e,n){"use strict";var r=n(25),i=r.extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var t=this.projectionMatrix._array;this.left=(-1-t[12])/t[0],this.right=(1-t[12])/t[0],this.top=(1-t[13])/t[5],this.bottom=(-1-t[13])/t[5],this.near=-(-1-t[14])/t[10],this.far=-(1-t[14])/t[10]},clone:function(){var t=r.prototype.clone.call(this);return t.left=this.left,t.right=this.right,t.near=this.near,t.far=this.far,t.top=this.top,t.bottom=this.bottom,t}});t.exports=i},function(t,e,n){"use strict";var r=n(25),i=r.extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var t=this.fov/180*Math.PI;this.projectionMatrix.perspective(t,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var t=this.projectionMatrix._array,e=2*Math.atan(1/t[5]);this.fov=e/Math.PI*180,this.aspect=t[5]/t[0],this.near=t[14]/(t[10]-1),this.far=t[14]/(t[10]+1)},clone:function(){var t=r.prototype.clone.call(this);return t.fov=this.fov,t.aspect=this.aspect,t.near=this.near,t.far=this.far,t}});t.exports=i},function(t,e,n){"use strict";var r=n(10),i=n(4),a=r.extend({shadowBias:.001,shadowSlopeScale:2,shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(t){return t.__dir=t.__dir||new i,t.__dir.copy(t.worldTransform.z).normalize().negate()._array}},directionalLightColor:{type:"3f",value:function(t){var e=t.color,n=t.intensity;return[e[0]*n,e[1]*n,e[2]*n]}}},clone:function(){var t=r.prototype.clone.call(this);return t.shadowBias=this.shadowBias,t.shadowSlopeScale=this.shadowSlopeScale,t}});t.exports=a},function(t,e,n){"use strict";var r=n(0),i=r.quat,a=function(t,e,n,r){t=t||0,e=e||0,n=n||0,r=void 0===r?1:r,this._array=i.fromValues(t,e,n,r),this._dirty=!0};a.prototype={constructor:a,add:function(t){return i.add(this._array,this._array,t._array),this._dirty=!0,this},calculateW:function(){return i.calculateW(this._array,this._array),this._dirty=!0,this},set:function(t,e,n,r){return this._array[0]=t,this._array[1]=e,this._array[2]=n,this._array[3]=r,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._dirty=!0,this},clone:function(){return new a(this.x,this.y,this.z,this.w)},conjugate:function(){return i.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},dot:function(t){return i.dot(this._array,t._array)},fromMat3:function(t){return i.fromMat3(this._array,t._array),this._dirty=!0,this},fromMat4:function(){var t=r.mat3,e=t.create();return function(n){return t.fromMat4(e,n._array),t.transpose(e,e),i.fromMat3(this._array,e),this._dirty=!0,this}}(),identity:function(){return i.identity(this._array),this._dirty=!0,this},invert:function(){return i.invert(this._array,this._array),this._dirty=!0,this},len:function(){return i.len(this._array)},length:function(){return i.length(this._array)},lerp:function(t,e,n){return i.lerp(this._array,t._array,e._array,n),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return i.multiply(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return i.multiply(this._array,t._array,this._array),this._dirty=!0,this},normalize:function(){return i.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(t){return i.rotateX(this._array,this._array,t),this._dirty=!0,this},rotateY:function(t){return i.rotateY(this._array,this._array,t),this._dirty=!0,this},rotateZ:function(t){return i.rotateZ(this._array,this._array,t),this._dirty=!0,this},rotationTo:function(t,e){return i.rotationTo(this._array,t._array,e._array),this._dirty=!0,this},setAxes:function(t,e,n){return i.setAxes(this._array,t._array,e._array,n._array),this._dirty=!0,this},setAxisAngle:function(t,e){return i.setAxisAngle(this._array,t._array,e),this._dirty=!0,this},slerp:function(t,e,n){return i.slerp(this._array,t._array,e._array,n),this._dirty=!0,this},sqrLen:function(){return i.sqrLen(this._array)},squaredLength:function(){return i.squaredLength(this._array)},fromEuler:function(t,e){return a.fromEuler(this,t,e)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var o=Object.defineProperty;if(o){var s=a.prototype;o(s,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),o(s,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),o(s,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}}),o(s,"w",{get:function(){return this._array[3]},set:function(t){this._array[3]=t,this._dirty=!0}})}a.add=function(t,e,n){return i.add(t._array,e._array,n._array),t._dirty=!0,t},a.set=function(t,e,n,r,a){i.set(t._array,e,n,r,a),t._dirty=!0},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.calculateW=function(t,e){return i.calculateW(t._array,e._array),t._dirty=!0,t},a.conjugate=function(t,e){return i.conjugate(t._array,e._array),t._dirty=!0,t},a.identity=function(t){return i.identity(t._array),t._dirty=!0,t},a.invert=function(t,e){return i.invert(t._array,e._array),t._dirty=!0,t},a.dot=function(t,e){return i.dot(t._array,e._array)},a.len=function(t){return i.length(t._array)},a.lerp=function(t,e,n,r){return i.lerp(t._array,e._array,n._array,r),t._dirty=!0,t},a.slerp=function(t,e,n,r){return i.slerp(t._array,e._array,n._array,r),t._dirty=!0,t},a.mul=function(t,e,n){return i.multiply(t._array,e._array,n._array),t._dirty=!0,t},a.multiply=a.mul,a.rotateX=function(t,e,n){return i.rotateX(t._array,e._array,n),t._dirty=!0,t},a.rotateY=function(t,e,n){return i.rotateY(t._array,e._array,n),t._dirty=!0,t},a.rotateZ=function(t,e,n){return i.rotateZ(t._array,e._array,n),t._dirty=!0,t},a.setAxisAngle=function(t,e,n){return i.setAxisAngle(t._array,e._array,n),t._dirty=!0,t},a.normalize=function(t,e){return i.normalize(t._array,e._array),t._dirty=!0,t},a.sqrLen=function(t){return i.sqrLen(t._array)},a.squaredLength=a.sqrLen,a.fromMat3=function(t,e){return i.fromMat3(t._array,e._array),t._dirty=!0,t},a.setAxes=function(t,e,n,r){return i.setAxes(t._array,e._array,n._array,r._array),t._dirty=!0,t},a.rotationTo=function(t,e,n){return i.rotationTo(t._array,e._array,n._array),t._dirty=!0,t},a.fromEuler=function(t,e,n){t._dirty=!0,e=e._array;var r=t._array,i=Math.cos(e[0]/2),a=Math.cos(e[1]/2),o=Math.cos(e[2]/2),s=Math.sin(e[0]/2),u=Math.sin(e[1]/2),l=Math.sin(e[2]/2),n=(n||"XYZ").toUpperCase();switch(n){case"XYZ":r[0]=s*a*o+i*u*l,r[1]=i*u*o-s*a*l,r[2]=i*a*l+s*u*o,r[3]=i*a*o-s*u*l;break;case"YXZ":r[0]=s*a*o+i*u*l,r[1]=i*u*o-s*a*l,r[2]=i*a*l-s*u*o,r[3]=i*a*o+s*u*l;break;case"ZXY":r[0]=s*a*o-i*u*l,r[1]=i*u*o+s*a*l,r[2]=i*a*l+s*u*o,r[3]=i*a*o-s*u*l;break;case"ZYX":r[0]=s*a*o-i*u*l,r[1]=i*u*o+s*a*l,r[2]=i*a*l-s*u*o,r[3]=i*a*o+s*u*l;break;case"YZX":r[0]=s*a*o+i*u*l,r[1]=i*u*o+s*a*l,r[2]=i*a*l-s*u*o,r[3]=i*a*o-s*u*l;break;case"XZY":r[0]=s*a*o-i*u*l,r[1]=i*u*o-s*a*l,r[2]=i*a*l+s*u*o,r[3]=i*a*o+s*u*l}},t.exports=a},function(t,e,n){"use strict";var r=n(8),i=n(15),a=n(37),o=n(70),s=n(0),u=s.vec3,l=s.vec4,c=r.extend(function(){return{projectionMatrix:new i,invProjectionMatrix:new i,viewMatrix:new i,frustum:new a}},function(){this.update(!0)},{update:function(t){r.prototype.update.call(this,t),i.invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),i.invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(t){i.copy(this.viewMatrix,t),i.invert(this.worldTransform,t),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(t){i.copy(this.projectionMatrix,t),i.invert(this.invProjectionMatrix,t),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var t=l.create();return function(e,n){var r=void 0!==n?n:new o,i=e._array[0],a=e._array[1];return l.set(t,i,a,-1,1),l.transformMat4(t,t,this.invProjectionMatrix._array),l.transformMat4(t,t,this.worldTransform._array),u.scale(r.origin._array,t,1/t[3]),l.set(t,i,a,1,1),l.transformMat4(t,t,this.invProjectionMatrix._array),l.transformMat4(t,t,this.worldTransform._array),u.scale(t,t,1/t[3]),u.sub(r.direction._array,t,r.origin._array),u.normalize(r.direction._array,r.direction._array),r.direction._dirty=!0,r.origin._dirty=!0,r}}()});t.exports=c},function(t,e,n){"use strict";var r=n(1),i=r.extend({name:"",index:-1,node:null,rootNode:null});t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(7),a=n(2),o=(n(9),n(3)),s=n(15),u=(n(19),n(11)),l=n(38),c=n(6);c.import(n(40)),c.import(n(41));var h=n(0),f=h.mat4,d=h.vec3,_=f.create,m=0,p={},v=r.extend(function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=document.createElement("canvas"));var t=this.canvas;try{var e={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=t.getContext("webgl",e)||t.getContext("experimental-webgl",e),!this.gl)throw new Error;null==this.gl.__GLID__&&(this.gl.__GLID__=m++,i.initialize(this.gl)),this.resize()}catch(t){throw"Error creating WebGL Context "+t}},{resize:function(t,e){var n=this.canvas,r=this.devicePixelRatio;null!=t?(n.style.width=t+"px",n.style.height=e+"px",n.width=t*r,n.height=e*r,this._width=t,this._height=e):(this._width=n.width/r,this._height=n.height/r),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var t=this.viewport;return t.width/t.height},setDevicePixelRatio:function(t){this.devicePixelRatio=t,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getExtension:function(t){return i.getExtension(this.gl,t)},setViewport:function(t,e,n,r,i){if("object"==typeof t){var a=t;t=a.x,e=a.y,n=a.width,r=a.height,i=a.devicePixelRatio}i=i||this.devicePixelRatio,this.gl.viewport(t*i,e*i,n*i,r*i),this.viewport={x:t,y:e,width:n,height:r,devicePixelRatio:i}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var t=this._clearStack.pop();this.clearColor=t.clearColor,this.clearBit=t.clearBit}},bindSceneRendering:function(t){this._sceneRendering=t},beforeRenderObject:function(){},afterRenderObject:function(){},render:function(t,e,n,r){var i=this.gl;this._sceneRendering=t;var a=this.clearColor;if(this.clearBit){i.colorMask(!0,!0,!0,!0),i.depthMask(!0);var o=this.viewport,s=!1,u=o.devicePixelRatio;(o.width!==this._width||o.height!==this._height||u&&u!==this.devicePixelRatio||o.x||o.y)&&(s=!0,i.enable(i.SCISSOR_TEST),i.scissor(o.x*u,o.y*u,o.width*u,o.height*u)),i.clearColor(a[0],a[1],a[2],a[3]),i.clear(this.clearBit),s&&i.disable(i.SCISSOR_TEST)}n||t.update(!1),e.getScene()||e.update(!0);var l=t.opaqueQueue,c=t.transparentQueue,h=t.material;if(t.trigger("beforerender",this,t,e),c.length>0)for(var m=_(),p=d.create(),v=0;v<c.length;v++){var g=c[v];f.multiplyAffine(m,e.viewMatrix._array,g.worldTransform._array),d.transformMat4(p,g.position._array,m),g.__depth=p[2]}l.sort(this.opaqueSortFunc),c.sort(this.transparentSortFunc),t.trigger("beforerender:opaque",this,l),t.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),t.viewBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0),i.disable(i.BLEND),i.enable(i.DEPTH_TEST);var y=this.renderQueue(l,e,h,r);t.trigger("afterrender:opaque",this,l,y),t.trigger("beforerender:transparent",this,c),i.enable(i.BLEND);var x=this.renderQueue(c,e,h);t.trigger("afterrender:transparent",this,c,x);var T={};for(var E in y)T[E]=y[E]+x[E];return t.trigger("afterrender",this,t,e,T),this._sceneRendering=null,T},resetRenderStatus:function(){this._currentShader=null},ifRenderObject:function(t){return!0},renderQueue:function(t,e,n,r){var i={triangleCount:0,vertexCount:0,drawCallCount:0,meshCount:t.length,renderedMeshCount:0},a=this.viewport,o=a.devicePixelRatio,s=[a.x*o,a.y*o,a.width*o,a.height*o],l=this.devicePixelRatio,h=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*l,this._height*l],d=[s[2],s[3]],_=Date.now();f.copy(g.VIEW,e.viewMatrix._array),f.copy(g.PROJECTION,e.projectionMatrix._array),f.multiply(g.VIEWPROJECTION,e.projectionMatrix._array,g.VIEW),f.copy(g.VIEWINVERSE,e.worldTransform._array),f.invert(g.PROJECTIONINVERSE,g.PROJECTION),f.invert(g.VIEWPROJECTIONINVERSE,g.VIEWPROJECTION);var m,v,y,x,T,E,b,A,S=this.gl,N=this._sceneRendering;if(r){var C=this._prezMaterial||new u({shader:new c({vertex:c.source("qtek.prez.vertex"),fragment:c.source("qtek.prez.fragment")})});this._prezMaterial=C;var R=C.shader;A=[],R.bind(S),S.colorMask(!1,!1,!1,!1),S.depthMask(!0),S.enable(S.DEPTH_TEST);for(var M=0;M<t.length;M++){var w=t[M];if(this.ifRenderObject(w)){var I=w.worldTransform._array,D=w.geometry;if(f.multiplyAffine(g.WORLDVIEW,g.VIEW,I),!(D.boundingBox&&this.isFrustumCulled(w,N,e,g.WORLDVIEW,g.PROJECTION)||w.skeleton)){f.multiply(g.WORLDVIEWPROJECTION,g.VIEWPROJECTION,I),w.cullFace!==E&&(E=w.cullFace,S.cullFace(E)),w.frontFace!==b&&(b=w.frontFace,S.frontFace(b)),w.culling!==T&&(T=w.culling,T?S.enable(S.CULL_FACE):S.disable(S.CULL_FACE));var L=R.matrixSemantics.WORLDVIEWPROJECTION;R.setUniform(S,L.type,L.symbol,g.WORLDVIEWPROJECTION),w.render(S,C.shader),A.push(w)}}}S.depthFunc(S.LEQUAL),S.colorMask(!0,!0,!0,!0),S.depthMask(!1),this._currentShader=null}else A=t,S.depthFunc(S.LESS);T=null,E=null,b=null;for(var M=0;M<A.length;M++){var w=A[M];if(this.ifRenderObject(w)){var D=w.geometry,I=w.worldTransform._array;if(f.multiplyAffine(g.WORLDVIEW,g.VIEW,I),!D.boundingBox||r||!this.isFrustumCulled(w,N,e,g.WORLDVIEW,g.PROJECTION)){var O=n||w.material;O!==m&&O.updateShader&&O.updateShader(S);var P=O.shader;f.copy(g.WORLD,I),f.multiply(g.WORLDVIEWPROJECTION,g.VIEWPROJECTION,I),(P.matrixSemantics.WORLDINVERSE||P.matrixSemantics.WORLDINVERSETRANSPOSE)&&f.invert(g.WORLDINVERSE,I),(P.matrixSemantics.WORLDVIEWINVERSE||P.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&f.invert(g.WORLDVIEWINVERSE,g.WORLDVIEW),(P.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||P.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&f.invert(g.WORLDVIEWPROJECTIONINVERSE,g.WORLDVIEWPROJECTION),w.beforeRender(S),this.beforeRenderObject(w,m,v);if(!P.isEqual(v)){N&&N.isShaderLightNumberChanged(P)&&N.setShaderLightNumber(P);var U=P.bind(S);if(U){if(p[P.__GUID__])continue;if(p[P.__GUID__]=!0,this.throwError)throw new Error(U);this.trigger("error",U)}P.setUniformOfSemantic(S,"VIEWPORT",s),P.setUniformOfSemantic(S,"WINDOW_SIZE",h),P.setUniformOfSemantic(S,"NEAR",e.near),P.setUniformOfSemantic(S,"FAR",e.far),P.setUniformOfSemantic(S,"DEVICEPIXELRATIO",o),P.setUniformOfSemantic(S,"TIME",_),P.setUniformOfSemantic(S,"VIEWPORT_SIZE",d),N&&N.setLightUniforms(P,S)}else P=v;m!==O&&(r||(O.depthTest!==y&&(O.depthTest?S.enable(S.DEPTH_TEST):S.disable(S.DEPTH_TEST),y=O.depthTest),O.depthMask!==x&&(S.depthMask(O.depthMask),x=O.depthMask)),O.bind(S,P,m,v),m=O,O.transparent&&(O.blend?O.blend(S):(S.blendEquationSeparate(S.FUNC_ADD,S.FUNC_ADD),S.blendFuncSeparate(S.SRC_ALPHA,S.ONE_MINUS_SRC_ALPHA,S.ONE,S.ONE_MINUS_SRC_ALPHA))));for(var F=P.matrixSemanticKeys,k=0;k<F.length;k++){var B=F[k],L=P.matrixSemantics[B],H=g[B];if(L.isTranspose){var W=g[L.semanticNoTranspose];f.transpose(H,W)}P.setUniform(S,L.type,L.symbol,H)}w.cullFace!==E&&(E=w.cullFace,S.cullFace(E)),w.frontFace!==b&&(b=w.frontFace,S.frontFace(b)),w.culling!==T&&(T=w.culling,T?S.enable(S.CULL_FACE):S.disable(S.CULL_FACE));var G=w.render(S,P);G&&(i.triangleCount+=G.triangleCount,i.vertexCount+=G.vertexCount,i.drawCallCount+=G.drawCallCount,i.renderedMeshCount++),this.afterRenderObject(w,G),w.afterRender(S,G),v=P}}}return i},isFrustumCulled:function(){var t=new o,e=new s;return function(n,r,i,a,o){var s=n.boundingBox||n.geometry.boundingBox;if(e._array=a,t.copy(s),t.applyTransform(e),r&&n.isRenderable()&&n.castShadow&&r.viewBoundingBoxLastFrame.union(t),n.frustumCulling){if(!t.intersectBoundingBox(i.frustum.boundingBox))return!0;e._array=o,t.max._array[2]>0&&t.min._array[2]<0&&(t.max._array[2]=-1e-20),t.applyProjection(e);var u=t.min._array,l=t.max._array;if(l[0]<-1||u[0]>1||l[1]<-1||u[1]>1||l[2]<-1||u[2]>1)return!0}return!1}}(),disposeScene:function(t){this.disposeNode(t,!0,!0),t.dispose()},disposeNode:function(t,e,n){var r={},i=this.gl;t.getParent()&&t.getParent().remove(t),t.traverse(function(t){t.geometry&&e&&t.geometry.dispose(i),t.material&&(r[t.material.__GUID__]=t.material),t.dispose&&t.dispose(i)});for(var a in r){r[a].dispose(i,n)}},disposeShader:function(t){t.dispose(this.gl)},disposeGeometry:function(t){t.dispose(this.gl)},disposeTexture:function(t){t.dispose(this.gl)},disposeFrameBuffer:function(t){t.dispose(this.gl)},dispose:function(){i.dispose(this.gl)},screenToNDC:function(t,e,n){n||(n=new l),e=this._height-e;var r=this.viewport,i=n._array;return i[0]=(t-r.x)/r.width,i[0]=2*i[0]-1,i[1]=(e-r.y)/r.height,i[1]=2*i[1]-1,n}});v.opaqueSortFunc=v.prototype.opaqueSortFunc=function(t,e){return t.renderOrder===e.renderOrder?t.material.shader===e.material.shader?t.material===e.material?t.geometry.__GUID__-e.geometry.__GUID__:t.material.__GUID__-e.material.__GUID__:t.material.shader.__GUID__-e.material.shader.__GUID__:t.renderOrder-e.renderOrder},v.transparentSortFunc=v.prototype.transparentSortFunc=function(t,e){return t.renderOrder===e.renderOrder?t.__depth===e.__depth?t.material.shader===e.material.shader?t.material===e.material?t.geometry.__GUID__-e.geometry.__GUID__:t.material.__GUID__-e.material.__GUID__:t.material.shader.__GUID__-e.material.shader.__GUID__:t.__depth-e.__depth:t.renderOrder-e.renderOrder};var g={WORLD:_(),VIEW:_(),PROJECTION:_(),WORLDVIEW:_(),VIEWPROJECTION:_(),WORLDVIEWPROJECTION:_(),WORLDINVERSE:_(),VIEWINVERSE:_(),PROJECTIONINVERSE:_(),WORLDVIEWINVERSE:_(),VIEWPROJECTIONINVERSE:_(),WORLDVIEWPROJECTIONINVERSE:_(),WORLDTRANSPOSE:_(),VIEWTRANSPOSE:_(),PROJECTIONTRANSPOSE:_(),WORLDVIEWTRANSPOSE:_(),VIEWPROJECTIONTRANSPOSE:_(),WORLDVIEWPROJECTIONTRANSPOSE:_(),WORLDINVERSETRANSPOSE:_(),VIEWINVERSETRANSPOSE:_(),PROJECTIONINVERSETRANSPOSE:_(),WORLDVIEWINVERSETRANSPOSE:_(),VIEWPROJECTIONINVERSETRANSPOSE:_(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:_()};v.COLOR_BUFFER_BIT=a.COLOR_BUFFER_BIT,v.DEPTH_BUFFER_BIT=a.DEPTH_BUFFER_BIT,v.STENCIL_BUFFER_BIT=a.STENCIL_BUFFER_BIT,t.exports=v},function(t,e,n){"use strict";function r(t,e){if(e.castShadow&&!t.castShadow)return!0}var i=n(8),a=n(10),o=n(3),s=i.extend(function(){return{material:null,autoUpdate:!0,opaqueQueue:[],transparentQueue:[],lights:[],viewBoundingBoxLastFrame:new o,_lightUniforms:{},_lightNumber:{},_opaqueObjectCount:0,_transparentObjectCount:0,_nodeRepository:{}}},function(){this._scene=this},{addToScene:function(t){t.name&&(this._nodeRepository[t.name]=t)},removeFromScene:function(t){t.name&&delete this._nodeRepository[t.name]},getNode:function(t){return this._nodeRepository[t]},cloneNode:function(t){var e=t.clone(),n={},r=function(i,a){i.skeleton&&(a.skeleton=i.skeleton.clone(t,e),a.joints=i.joints.slice()),i.material&&(n[i.material.__GUID__]={oldMat:i.material});for(var o=0;o<i._children.length;o++)r(i._children[o],a._children[o])};r(t,e);for(var i in n)n[i].newMat=n[i].oldMat.clone();return e.traverse(function(t){t.material&&(t.material=n[t.material.__GUID__].newMat)}),e},update:function(t,e){if(this.autoUpdate||t){i.prototype.update.call(this,t);var n=this.lights,r=this.material&&this.material.transparent;if(this._opaqueObjectCount=0,this._transparentObjectCount=0,n.length=0,this._updateRenderQueue(this,r),this.opaqueQueue.length=this._opaqueObjectCount,this.transparentQueue.length=this._transparentObjectCount,!e){var a=this._lightNumber;for(var o in a)for(var s in a[o])a[o][s]=0;for(var u=0;u<n.length;u++){var l=n[u],o=l.group;a[o]||(a[o]={}),a[o][l.type]=a[o][l.type]||0,a[o][l.type]++}this._updateLightUniforms()}}},_updateRenderQueue:function(t,e){if(!t.invisible)for(var n=0;n<t._children.length;n++){var r=t._children[n];r instanceof a&&this.lights.push(r),r.isRenderable()&&(r.material.transparent||e?this.transparentQueue[this._transparentObjectCount++]=r:this.opaqueQueue[this._opaqueObjectCount++]=r),r._children.length>0&&this._updateRenderQueue(r)}},_updateLightUniforms:function(){var t=this.lights;t.sort(r);var e=this._lightUniforms;for(var n in e)for(var i in e[n])e[n][i].value.length=0;for(var a=0;a<t.length;a++){var o=t[a],n=o.group;for(var i in o.uniformTemplates){var s=o.uniformTemplates[i];e[n]||(e[n]={}),e[n][i]||(e[n][i]={type:"",value:[]});var u=s.value(o),l=e[n][i];switch(l.type=s.type+"v",s.type){case"1i":case"1f":case"t":l.value.push(u);break;case"2f":case"3f":case"4f":for(var c=0;c<u.length;c++)l.value.push(u[c]);break;default:console.error("Unkown light uniform type "+s.type)}}}},isShaderLightNumberChanged:function(t){var e=t.lightGroup;for(var n in this._lightNumber[e])if(this._lightNumber[e][n]!==t.lightNumber[n])return!0;for(var n in t.lightNumber)if(this._lightNumber[e][n]!==t.lightNumber[n])return!0;return!1},setShaderLightNumber:function(t){var e=t.lightGroup;for(var n in this._lightNumber[e])t.lightNumber[n]=this._lightNumber[e][n];t.dirty()},setLightUniforms:function(t,e){var n=t.lightGroup;for(var r in this._lightUniforms[n]){var i=this._lightUniforms[n][r];if("tv"===i.type)for(var a=0;a<i.value.length;a++){var o=i.value[a],s=t.currentTextureSlot(),u=t.setUniform(e,"1i",r,s);u&&t.useCurrentTextureSlot(e,o)}else t.setUniform(e,i.type,r,i.value)}},dispose:function(){this.material=null,this.opaqueQueue=[],this.transparentQueue=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}});t.exports=s},function(t,e,n){"use strict";function r(t,e,n){var r=e;r+=256*n.roughnessChannel,r+=1024*n.metalnessChannel;for(var i=0;i<t.length;i++)r+=m[t[i]];for(var i=0;i<d.length;i++){var a=d[i];n[a]&&(r+=m[a])}return r}function i(t,e,n,i){var a=r(e,n,i),o=u[a];return o||(o=new s({vertex:s.source("qtek.standard.vertex"),fragment:s.source("qtek.standard.fragment")}),o.enableTexture(e),o.define("fragment","USE_METALNESS"),o.define("fragment","USE_ROUGHNESS"),o.define("ROUGHNESS_CHANNEL",i.roughnessChannel),o.define("METALNESS_CHANNEL",i.metalnessChannel),n&&(o.define("vertex","SKINNING"),o.define("vertex","JOINT_COUNT",n)),i.environmentMapPrefiltered&&o.define("fragment","ENVIRONMENTMAP_PREFILTER"),i.linear&&o.define("fragment","SRGB_DECODE"),i.encodeRGBM&&o.define("fragment","RGBM_ENCODE"),i.decodeRGBM&&o.define("fragment","RGBM_DECODE"),i.parallaxCorrected&&o.define("fragment","PARALLAX_CORRECTED"),i.doubleSided&&o.define("fragment","DOUBLE_SIDED"),i.alphaTest&&o.define("fragment","ALPHA_TEST"),u[a]=o,l[t.__GLID__]=l[t.__GLID__]||{},l[t.__GLID__][a]=0),l[a]++,o.__key__=a,o}function a(t,e){var n=t.__key__;u[n]&&(--l[e.__GLID__][n]||e&&t.dispose(e))}var o=n(11),s=n(6);s.import(n(42));var u={},l={},c=["diffuseMap","normalMap","roughnessMap","metalnessMap","emissiveMap","environmentMap","brdfLookup","ssaoMap","aoMap"],h=["color","emission","emissionIntensity","alpha","roughness","metalness","uvRepeat","uvOffset","aoIntensity","alphaCutoff"],f=["jointCount","linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","roughnessChannel","metalnessChannel"],d=["environmentMapPrefiltered","linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","parallaxCorrected"],_=c.concat(d),m=_.reduce(function(t,e,n){return t[e]=4096<<n,t},{}),p=o.extend(function(){return{color:[1,1,1],emission:[0,0,0],emissionIntensity:0,roughness:.5,metalness:0,alpha:1,alphaTest:!1,alphaCutoff:.9,doubleSided:!1,uvRepeat:[1,1],uvOffset:[0,0],aoIntensity:1,jointCount:0,environmentMapPrefiltered:!1,linear:!1,encodeRGBM:!1,decodeRGBM:!1,roughnessChannel:0,metalnessChannel:1}},{_doUpdateShader:function(t){var e=c.filter(function(t){return!!this[t]},this);this._shader&&(a(this._shader,t),this._shader.detached());var n=i(t,e,this.jointCount||0,{environmentMapPrefiltered:this.environmentMapPrefiltered,linear:this.linear,encodeRGBM:this.encodeRGBM,decodeRGBM:this.decodeRGBM,parallaxCorrected:!!this._environmentBox,alphaTest:this.alphaTest,doubleSided:this.doubleSided,metalnessChannel:this.metalnessChannel,roughnessChannel:this.roughnessChannel}),r=this.uniforms;this.uniforms=n.createUniforms(),this._shader=n;var o=this.uniforms;this._enabledUniforms=Object.keys(o);for(var s in r)o[s]&&(o[s].value=r[s].value);n.attached(),this._shaderDirty=!1},updateShader:function(t){this._shaderDirty&&(this._doUpdateShader(t),this._shaderDirty=!1)},attachShader:function(){},dispose:function(t,e){this._shader&&a(this._shader),o.prototype.dispose.call(t,e)},clone:function(){var t=new p({name:this.name});return c.forEach(function(e){this[e]&&(t[e]=this[e])},this),h.concat(f).forEach(function(e){t[e]=this[e]},this),t}});h.forEach(function(t){Object.defineProperty(p.prototype,t,{get:function(){return this.get(t)},set:function(e){var n=this.uniforms=this.uniforms||{};n[t]=n[t]||{value:null},this.setUniform(t,e)}})}),c.forEach(function(t){Object.defineProperty(p.prototype,t,{get:function(){return this.get(t)},set:function(e){var n=this.uniforms=this.uniforms||{};n[t]=n[t]||{value:null};var r=this.get(t);this.setUniform(t,e),!r!=!e&&(this._shaderDirty=!0)}})}),f.forEach(function(t){var e="_"+t;Object.defineProperty(p.prototype,t,{get:function(){return this[e]},set:function(t){var n=this[e];this[e]=t,n!==t&&(this._shaderDirty=!0)}})}),Object.defineProperty(p.prototype,"environmentBox",{get:function(){var t=this._environmentBox;return t&&(t.min.setArray(this.get("environmentBoxMin")),t.max.setArray(this.get("environmentBoxMax"))),t},set:function(t){var e=this._environmentBox;this._environmentBox=t;var n=this.uniforms=this.uniforms||{};n.environmentBoxMin=n.environmentBoxMin||{value:null},n.environmentBoxMax=n.environmentBoxMax||{value:null},t&&(this.setUniform("environmentBoxMin",t.min._array),this.setUniform("environmentBoxMax",t.max._array)),e!==t&&(this._shaderDirty=!0)}}),Object.defineProperty(p.prototype,"shader",{get:function(){return this._shader,this._shader},set:function(){console.warn("StandardMaterial can't change shader")}}),t.exports=p},function(t,e,n){"use strict";function r(t,e){return t.time-e.time}var i=n(17),a=n(0),o=a.quat,s=a.vec3,u=function(t){t=t||{},i.call(this,t),this.keyFrames=[],t.keyFrames&&this.addKeyFrames(t.keyFrames),this.position=s.create(),this.rotation=o.create(),this.scale=s.fromValues(1,1,1),this._cacheKey=0,this._cacheTime=0};u.prototype=Object.create(i.prototype),u.prototype.constructor=u,u.prototype.step=function(t,e){var n=i.prototype.step.call(this,t,e);return"finish"!==n&&this.setTime(this.getElapsedTime()),n},u.prototype.setTime=function(t){this._interpolateField(t,"position"),this._interpolateField(t,"rotation"),this._interpolateField(t,"scale")},u.prototype.addKeyFrame=function(t){for(var e=0;e<this.keyFrames.length-1;e++){var n=this.keyFrames[e],r=this.keyFrames[e+1];if(n.time<=t.time&&r.time>=t.time)return this.keyFrames.splice(e,0,t),e}this.life=t.time,this.keyFrames.push(t)},u.prototype.addKeyFrames=function(t){for(var e=0;e<t.length;e++)this.keyFrames.push(t[e]);this.keyFrames.sort(r),this.life=this.keyFrames[this.keyFrames.length-1].time},u.prototype._interpolateField=function(t,e){var n,r,i=this.keyFrames,a=i.length;if(i.length&&!(t<i[0].time||t>i[i.length-1].time)){if(t<this._cacheTime){for(var u=this._cacheKey>=a-1?a-1:this._cacheKey+1,l=u;l>=0;l--)if(i[l].time<=t&&i[l][e])n=i[l],this._cacheKey=l,this._cacheTime=t;else if(i[l][e]){r=i[l];break}}else for(var l=this._cacheKey;l<a;l++)if(i[l].time<=t&&i[l][e])n=i[l],this._cacheKey=l,this._cacheTime=t;else if(i[l][e]){r=i[l];break}if(n&&r){var c=(t-n.time)/(r.time-n.time);c=Math.max(Math.min(c,1),0),"rotation"===e?o.slerp(this[e],n[e],r[e],c):s.lerp(this[e],n[e],r[e],c)}else this._cacheKey=0,this._cacheTime=0}},u.prototype.blend1D=function(t,e,n){s.lerp(this.position,t.position,e.position,n),s.lerp(this.scale,t.scale,e.scale,n),o.slerp(this.rotation,t.rotation,e.rotation,n)},u.prototype.blend2D=function(){var t=o.create(),e=o.create();return function(n,r,i,a,s){var u=1-a-s;this.position[0]=n.position[0]*u+r.position[0]*a+i.position[0]*s,this.position[1]=n.position[1]*u+r.position[1]*a+i.position[1]*s,this.position[2]=n.position[2]*u+r.position[2]*a+i.position[2]*s,this.scale[0]=n.scale[0]*u+r.scale[0]*a+i.scale[0]*s,this.scale[1]=n.scale[1]*u+r.scale[1]*a+i.scale[1]*s,this.scale[2]=n.scale[2]*u+r.scale[2]*a+i.scale[2]*s;var l=a+s;0===l?o.copy(this.rotation,n.rotation):(o.slerp(t,n.rotation,r.rotation,l),o.slerp(e,n.rotation,i.rotation,l),o.slerp(this.rotation,t,e,s/l))}}(),u.prototype.additiveBlend=function(t,e){s.add(this.position,t.position,e.position),s.add(this.scale,t.scale,e.scale),o.multiply(this.rotation,e.rotation,t.rotation)},u.prototype.subtractiveBlend=function(t,e){s.sub(this.position,t.position,e.position),s.sub(this.scale,t.scale,e.scale),o.invert(this.rotation,e.rotation),o.multiply(this.rotation,this.rotation,t.rotation)},u.prototype.getSubClip=function(t,e){console.warn("TODO")},u.prototype.clone=function(){var t=i.prototype.clone.call(this);return t.keyFrames=this.keyFrames,s.copy(t.position,this.position),o.copy(t.rotation,this.rotation),s.copy(t.scale,this.scale),t},t.exports=u},function(t,e,n){"use strict";function r(t,e){var n=new s;return a.get({url:t,responseType:e,onload:function(t){n.resolve(t)},onerror:function(t){n.reject(t)}}),n}var i=n(32),a=n(33),o=n(5),s=function(){this._fullfilled=!1,this._rejected=!1};s.prototype.resolve=function(t){this._fullfilled=!0,this._rejected=!1,this.trigger("success",t)},s.prototype.reject=function(t){this._rejected=!0,this._fullfilled=!1,this.trigger("error",t)},s.prototype.isFullfilled=function(){return this._fullfilled},s.prototype.isRejected=function(){return this._rejected},s.prototype.isSettled=function(){return this._fullfilled||this._rejected},o.extend(s.prototype,i),s.makeRequestTask=function(t,e){if("string"==typeof t)return r(t,e);if(t.url){var n=t;return r(n.url,n.responseType)}if(t instanceof Array){var i=t,a=[];return i.forEach(function(t){var e,n;"string"==typeof t?e=t:Object(t)===t&&(e=t.url,n=t.responseType),a.push(r(e,n))}),a}},s.makeTask=function(){return new s},o.extend(s.prototype,i),t.exports=s},function(t,e){function n(t,e){this.action=t,this.context=e}var r={trigger:function(t){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(t)){var e=this.__handlers__[t],n=e.length,r=-1,i=arguments;switch(i.length){case 1:for(;++r<n;)e[r].action.call(e[r].context);return;case 2:for(;++r<n;)e[r].action.call(e[r].context,i[1]);return;case 3:for(;++r<n;)e[r].action.call(e[r].context,i[1],i[2]);return;case 4:for(;++r<n;)e[r].action.call(e[r].context,i[1],i[2],i[3]);return;case 5:for(;++r<n;)e[r].action.call(e[r].context,i[1],i[2],i[3],i[4]);return;default:for(;++r<n;)e[r].action.apply(e[r].context,Array.prototype.slice.call(i,1));return}}},on:function(t,e,r){if(t&&e){var i=this.__handlers__||(this.__handlers__={});if(i[t]){if(this.has(t,e))return}else i[t]=[];var a=new n(e,r||this);return i[t].push(a),this}},once:function(t,e,n){function r(){i.off(t,r),e.apply(this,arguments)}if(t&&e){var i=this;return this.on(t,r,n)}},before:function(t,e,n){if(t&&e)return t="before"+t,this.on(t,e,n)},after:function(t,e,n){if(t&&e)return t="after"+t,this.on(t,e,n)},success:function(t,e){return this.once("success",t,e)},error:function(t,e){return this.once("error",t,e)},off:function(t,e){var n=this.__handlers__||(this.__handlers__={});if(!e)return void(n[t]=[]);if(n[t]){for(var r=n[t],i=[],a=0;a<r.length;a++)e&&r[a].action!==e&&i.push(r[a]);n[t]=i}return this},has:function(t,e){var n=this.__handlers__;if(!n||!n[t])return!1;for(var r=n[t],i=0;i<r.length;i++)if(r[i].action===e)return!0}};t.exports=r},function(t,e,n){"use strict";function r(t){var e=new XMLHttpRequest;e.open("get",t.url),e.responseType=t.responseType||"text",t.onprogress&&(e.onprogress=function(e){if(e.lengthComputable){var n=e.loaded/e.total;t.onprogress(n,e.loaded,e.total)}else t.onprogress(null)}),e.onload=function(n){t.onload&&t.onload(e.response)},t.onerror&&(e.onerror=t.onerror),e.send(null)}t.exports={get:r}},function(t,e,n){"use strict";var r=n(12),i=n(3),a=r.extend({widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){for(var t=this.heightSegments,e=this.widthSegments,n=this.attributes,r=[],a=[],o=[],s=[],u=0;u<=t;u++)for(var l=u/t,c=0;c<=e;c++){var h=c/e;if(r.push([2*h-1,2*l-1,0]),a&&a.push([h,l]),o&&o.push([0,0,1]),c<e&&u<t){var f=c+u*(e+1);s.push([f,f+1,f+e+1]),s.push([f+e+1,f+1,f+e+2])}}n.position.fromArray(r),n.texcoord0.fromArray(a),n.normal.fromArray(o),this.initIndicesFromArray(s),this.boundingBox=new i,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}});t.exports=a},function(t,e,n){"use strict";var r=n(10),i=r.extend({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(t){return t.getWorldPosition()._array}},pointLightRange:{type:"1f",value:function(t){return t.range}},pointLightColor:{type:"3f",value:function(t){var e=t.color,n=t.intensity;return[e[0]*n,e[1]*n,e[2]*n]}}},clone:function(){var t=r.prototype.clone.call(this);return t.range=this.range,t}});t.exports=i},function(t,e,n){"use strict";var r=n(10),i=n(4),a=r.extend({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:2e-4,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(t){return t.getWorldPosition()._array}},spotLightRange:{type:"1f",value:function(t){return t.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(t){return Math.cos(t.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(t){return Math.cos(t.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(t){return t.falloffFactor}},spotLightDirection:{type:"3f",value:function(t){return t.__dir=t.__dir||new i,t.__dir.copy(t.worldTransform.z).negate()._array}},spotLightColor:{type:"3f",value:function(t){var e=t.color,n=t.intensity;return[e[0]*n,e[1]*n,e[2]*n]}}},clone:function(){var t=r.prototype.clone.call(this);return t.range=this.range,t.umbraAngle=this.umbraAngle,t.penumbraAngle=this.penumbraAngle,t.falloffFactor=this.falloffFactor,t.shadowBias=this.shadowBias,t.shadowSlopeScale=this.shadowSlopeScale,t}});t.exports=a},function(t,e,n){"use strict";var r=(n(4),n(3)),i=n(69),a=n(0),o=a.vec3,s=o.set,u=o.copy,l=o.transformMat4,c=Math.min,h=Math.max,f=function(){this.planes=[];for(var t=0;t<6;t++)this.planes.push(new i);this.boundingBox=new r,this.vertices=[];for(var t=0;t<8;t++)this.vertices[t]=o.fromValues(0,0,0)};f.prototype={setFromProjection:function(t){var e=this.planes,n=t._array,r=n[0],i=n[1],a=n[2],o=n[3],u=n[4],l=n[5],c=n[6],h=n[7],f=n[8],d=n[9],_=n[10],m=n[11],p=n[12],v=n[13],g=n[14],y=n[15];s(e[0].normal._array,o-r,h-u,m-f),e[0].distance=-(y-p),e[0].normalize(),s(e[1].normal._array,o+r,h+u,m+f),e[1].distance=-(y+p),e[1].normalize(),s(e[2].normal._array,o+i,h+l,m+d),e[2].distance=-(y+v),e[2].normalize(),s(e[3].normal._array,o-i,h-l,m-d),e[3].distance=-(y-v),e[3].normalize(),s(e[4].normal._array,o-a,h-c,m-_),e[4].distance=-(y-g),e[4].normalize(),s(e[5].normal._array,o+a,h+c,m+_),e[5].distance=-(y+g),e[5].normalize();var x=this.boundingBox;if(0===y){var T=l/r,E=-g/(_-1),b=-g/(_+1),A=-b/l,S=-E/l;x.min.set(-A*T,-A,b),x.max.set(A*T,A,E);var N=this.vertices;s(N[0],-A*T,-A,b),s(N[1],-A*T,A,b),s(N[2],A*T,-A,b),s(N[3],A*T,A,b),s(N[4],-S*T,-S,E),s(N[5],-S*T,S,E),s(N[6],S*T,-S,E),s(N[7],S*T,S,E)}else{var C=(-1-p)/r,R=(1-p)/r,M=(1-v)/l,w=(-1-v)/l,I=(-1-g)/_,D=(1-g)/_;x.min.set(C,w,D),x.max.set(R,M,I);var L=x.min._array,O=x.max._array,N=this.vertices;s(N[0],L[0],L[1],L[2]),s(N[1],L[0],O[1],L[2]),s(N[2],O[0],L[1],L[2]),s(N[3],O[0],O[1],L[2]),s(N[4],L[0],L[1],O[2]),s(N[5],L[0],O[1],O[2]),s(N[6],O[0],L[1],O[2]),s(N[7],O[0],O[1],O[2])}},getTransformedBoundingBox:function(){var t=o.create();return function(e,n){var r=this.vertices,i=n._array,a=e.min,o=e.max,s=a._array,f=o._array,d=r[0];l(t,d,i),u(s,t),u(f,t);for(var _=1;_<8;_++)d=r[_],l(t,d,i),s[0]=c(t[0],s[0]),s[1]=c(t[1],s[1]),s[2]=c(t[2],s[2]),f[0]=h(t[0],f[0]),f[1]=h(t[1],f[1]),f[2]=h(t[2],f[2]);return a._dirty=!0,o._dirty=!0,e}}()},t.exports=f},function(t,e,n){"use strict";var r=n(0),i=r.vec2,a=function(t,e){t=t||0,e=e||0,this._array=i.fromValues(t,e),this._dirty=!0};if(a.prototype={constructor:a,add:function(t){return i.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e){return this._array[0]=t,this._array[1]=e,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._dirty=!0,this},clone:function(){return new a(this.x,this.y)},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},cross:function(t,e){return i.cross(t._array,this._array,e._array),t._dirty=!0,this},dist:function(t){return i.dist(this._array,t._array)},distance:function(t){return i.distance(this._array,t._array)},div:function(t){return i.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return i.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return i.dot(this._array,t._array)},len:function(){return i.len(this._array)},length:function(){return i.length(this._array)},lerp:function(t,e,n){return i.lerp(this._array,t._array,e._array,n),this._dirty=!0,this},min:function(t){return i.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return i.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return i.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return i.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return i.random(this._array,t),this._dirty=!0,this},scale:function(t){return i.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return i.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return i.sqrDist(this._array,t._array)},squaredDistance:function(t){return i.squaredDistance(this._array,t._array)},sqrLen:function(){return i.sqrLen(this._array)},squaredLength:function(){return i.squaredLength(this._array)},sub:function(t){return i.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return i.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat2:function(t){return i.transformMat2(this._array,this._array,t._array),this._dirty=!0,this},transformMat2d:function(t){return i.transformMat2d(this._array,this._array,t._array),this._dirty=!0,this},transformMat3:function(t){return i.transformMat3(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return i.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},Object.defineProperty){var o=a.prototype;Object.defineProperty(o,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),Object.defineProperty(o,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}})}a.add=function(t,e,n){return i.add(t._array,e._array,n._array),t._dirty=!0,t},a.set=function(t,e,n){return i.set(t._array,e,n),t._dirty=!0,t},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.cross=function(t,e,n){return i.cross(t._array,e._array,n._array),t._dirty=!0,t},a.dist=function(t,e){return i.distance(t._array,e._array)},a.distance=a.dist,a.div=function(t,e,n){return i.divide(t._array,e._array,n._array),t._dirty=!0,t},a.divide=a.div,a.dot=function(t,e){return i.dot(t._array,e._array)},a.len=function(t){return i.length(t._array)},a.lerp=function(t,e,n,r){return i.lerp(t._array,e._array,n._array,r),t._dirty=!0,t},a.min=function(t,e,n){return i.min(t._array,e._array,n._array),t._dirty=!0,t},a.max=function(t,e,n){return i.max(t._array,e._array,n._array),t._dirty=!0,t},a.mul=function(t,e,n){return i.multiply(t._array,e._array,n._array),t._dirty=!0,t},a.multiply=a.mul,a.negate=function(t,e){return i.negate(t._array,e._array),t._dirty=!0,t},a.normalize=function(t,e){return i.normalize(t._array,e._array),t._dirty=!0,t},a.random=function(t,e){return i.random(t._array,e),t._dirty=!0,t},a.scale=function(t,e,n){return i.scale(t._array,e._array,n),t._dirty=!0,t},a.scaleAndAdd=function(t,e,n,r){return i.scaleAndAdd(t._array,e._array,n._array,r),t._dirty=!0,t},a.sqrDist=function(t,e){return i.sqrDist(t._array,e._array)},a.squaredDistance=a.sqrDist,a.sqrLen=function(t){return i.sqrLen(t._array)},a.squaredLength=a.sqrLen,a.sub=function(t,e,n){return i.subtract(t._array,e._array,n._array),t._dirty=!0,t},a.subtract=a.sub,a.transformMat2=function(t,e,n){return i.transformMat2(t._array,e._array,n._array),t._dirty=!0,t},a.transformMat2d=function(t,e,n){return i.transformMat2d(t._array,e._array,n._array),t._dirty=!0,t},a.transformMat3=function(t,e,n){return i.transformMat3(t._array,e._array,n._array),t._dirty=!0,t},a.transformMat4=function(t,e,n){return i.transformMat4(t._array,e._array,n._array),t._dirty=!0,t},t.exports=a},function(t,e){var n={};n.isPowerOfTwo=function(t){return 0==(t&t-1)},n.nextPowerOfTwo=function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t},n.nearestPowerOfTwo=function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},t.exports=n},function(t,e,n){var r=":unconfigurable;";t.exports=["@export qtek.header.directional_light","uniform vec3 directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+r,"uniform vec3 directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+r,"@end","@export qtek.header.ambient_light","uniform vec3 ambientLightColor[AMBIENT_LIGHT_COUNT]"+r,"@end","@export qtek.header.ambient_sh_light","uniform vec3 ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+r,"uniform vec3 ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+r,n(91),"@end","@export qtek.header.ambient_cubemap_light","uniform vec3 ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+r,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+r,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+r,"@end","@export qtek.header.point_light","uniform vec3 pointLightPosition[POINT_LIGHT_COUNT]"+r,"uniform float pointLightRange[POINT_LIGHT_COUNT]"+r,"uniform vec3 pointLightColor[POINT_LIGHT_COUNT]"+r,"@end","@export qtek.header.spot_light","uniform vec3 spotLightPosition[SPOT_LIGHT_COUNT]"+r,"uniform vec3 spotLightDirection[SPOT_LIGHT_COUNT]"+r,"uniform float spotLightRange[SPOT_LIGHT_COUNT]"+r,"uniform float spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+r,"uniform float spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+r,"uniform float spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+r,"uniform vec3 spotLightColor[SPOT_LIGHT_COUNT]"+r,"@end"].join("\n")},function(t,e){t.exports="@export qtek.prez.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\n@import qtek.chunk.skinning_header\n\nvoid main()\n{\n\n vec3 skinnedPosition = position;\n\n#ifdef SKINNING\n\n @import qtek.chunk.skin_matrix\n\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n\n@end\n\n\n@export qtek.prez.fragment\n\nvoid main()\n{\n gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n\n@end"},function(t,e){t.exports="\n\n@export qtek.standard.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\n#if defined(AOMAP_ENABLED)\nattribute vec2 texcoord2 : TEXCOORD_1;\n#endif\n\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\n\n#ifdef VERTEX_COLOR\nattribute vec4 color : COLOR;\n#endif\n\nattribute vec3 barycentric;\n\n@import qtek.chunk.skinning_header\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n\n#if defined(AOMAP_ENABLED)\nvarying vec2 v_Texcoord2;\n#endif\n\nvoid main()\n{\n\n vec3 skinnedPosition = position;\n vec3 skinnedNormal = normal;\n vec3 skinnedTangent = tangent.xyz;\n#ifdef SKINNING\n\n @import qtek.chunk.skin_matrix\n\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n#endif\n\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n v_Barycentric = barycentric;\n\n v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n\n#ifdef NORMALMAP_ENABLED\n v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n\n#ifdef VERTEX_COLOR\n v_Color = color;\n#endif\n\n#if defined(AOMAP_ENABLED)\n v_Texcoord2 = texcoord2;\n#endif\n}\n\n@end\n\n\n@export qtek.standard.fragment\n\n#define PI 3.14159265358979\n\n#define GLOSS_CHANEL 0\n#define ROUGHNESS_CHANNEL 0\n#define METALNESS_CHANNEL 1\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nuniform sampler2D normalMap;\n#endif\n\n#ifdef DIFFUSEMAP_ENABLED\nuniform sampler2D diffuseMap;\n#endif\n\n#ifdef SPECULARMAP_ENABLED\nuniform sampler2D specularMap;\n#endif\n\n#ifdef USE_ROUGHNESS\nuniform float roughness : 0.5;\n #ifdef ROUGHNESSMAP_ENABLED\nuniform sampler2D roughnessMap;\n #endif\n#else\nuniform float glossiness: 0.5;\n #ifdef GLOSSMAP_ENABLED\nuniform sampler2D glossMap;\n #endif\n#endif\n\n#ifdef METALNESSMAP_ENABLED\nuniform sampler2D metalnessMap;\n#endif\n\n#ifdef ENVIRONMENTMAP_ENABLED\nuniform samplerCube environmentMap;\n\n #ifdef PARALLAX_CORRECTED\nuniform vec3 environmentBoxMin;\nuniform vec3 environmentBoxMax;\n #endif\n\n#endif\n\n#ifdef BRDFLOOKUP_ENABLED\nuniform sampler2D brdfLookup;\n#endif\n\n#ifdef EMISSIVEMAP_ENABLED\nuniform sampler2D emissiveMap;\n#endif\n\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n\n#ifdef AOMAP_ENABLED\nuniform sampler2D aoMap;\nuniform float aoIntensity;\nvarying vec2 v_Texcoord2;\n#endif\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n\n#ifdef USE_METALNESS\nuniform float metalness : 0.0;\n#else\nuniform vec3 specularColor : [0.1, 0.1, 0.1];\n#endif\n\nuniform vec3 emission : [0.0, 0.0, 0.0];\n\nuniform float emissionIntensity: 1;\n\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef ENVIRONMENTMAP_PREFILTER\nuniform float maxMipmapLevel: 5;\n#endif\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n@import qtek.header.ambient_cubemap_light\n#endif\n\n#ifdef POINT_LIGHT_COUNT\n@import qtek.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import qtek.header.spot_light\n#endif\n\n@import qtek.util.calculate_attenuation\n\n@import qtek.util.edge_factor\n\n@import qtek.util.rgbm\n\n@import qtek.util.srgb\n\n@import qtek.plugin.compute_shadow_map\n\n@import qtek.util.parallax_correct\n\n\nfloat G_Smith(float g, float ndv, float ndl)\n{\n float roughness = 1.0 - g;\n float k = roughness * roughness / 2.0;\n float G1V = ndv / (ndv * (1.0 - k) + k);\n float G1L = ndl / (ndl * (1.0 - k) + k);\n return G1L * G1V;\n}\nvec3 F_Schlick(float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n\nfloat D_Phong(float g, float ndh) {\n float a = pow(8192.0, g);\n return (a + 2.0) / 8.0 * pow(ndh, a);\n}\n\nfloat D_GGX(float g, float ndh) {\n float r = 1.0 - g;\n float a = r * r;\n float tmp = ndh * ndh * (a - 1.0) + 1.0;\n return a / (PI * tmp * tmp);\n}\n\n\nvoid main()\n{\n vec4 albedoColor = vec4(color, alpha);\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n\n#ifdef DIFFUSEMAP_ENABLED\n vec4 texel = texture2D(diffuseMap, v_Texcoord);\n #ifdef SRGB_DECODE\n texel = sRGBToLinear(texel);\n #endif\n albedoColor.rgb *= texel.rgb;\n #ifdef DIFFUSEMAP_ALPHA_ALPHA\n albedoColor.a *= texel.a;\n #endif\n\n#endif\n\n\n#ifdef USE_METALNESS\n float m = metalness;\n\n #ifdef METALNESSMAP_ENABLED\n float m2 = texture2D(metalnessMap, v_Texcoord)[METALNESS_CHANNEL];\n m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\n #endif\n\n vec3 baseColor = albedoColor.rgb;\n albedoColor.rgb = baseColor * (1.0 - m);\n vec3 spec = mix(vec3(0.04), baseColor, m);\n#else\n vec3 spec = specularColor;\n#endif\n\n#ifdef USE_ROUGHNESS\n float g = 1.0 - roughness;\n #ifdef ROUGHNESSMAP_ENABLED\n float g2 = 1.0 - texture2D(roughnessMap, v_Texcoord)[ROUGHNESS_CHANNEL];\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n #endif\n#else\n float g = glossiness;\n #ifdef GLOSSMAP_ENABLED\n float g2 = texture2D(glossMap, v_Texcoord)[GLOSS_CHANEL];\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n #endif\n#endif\n\n#ifdef SPECULARMAP_ENABLED\n spec *= texture2D(specularMap, v_Texcoord).rgb;\n#endif\n\n vec3 N = v_Normal;\n\n#ifdef DOUBLE_SIDED\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n#endif\n\n#ifdef NORMALMAP_ENABLED\n if (dot(v_Tangent, v_Tangent) > 0.0) {\n vec3 normalTexel = texture2D(normalMap, v_Texcoord).xyz;\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n N = normalize(tbn * N);\n }\n }\n#endif\n\n vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n vec3 fresnelTerm = F_Schlick(ndv, spec);\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {{\n diffuseTerm += ambientLightColor[_idx_];\n }}\n#endif\n\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseTerm += calcAmbientSHLight(_idx_, N) * ambientSHLightColor[_idx_];\n }}\n#endif\n\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsPoint[POINT_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n }\n#endif\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_COUNT; _idx_++)\n {{\n\n vec3 lightPosition = pointLightPosition[_idx_];\n vec3 lc = pointLightColor[_idx_];\n float range = pointLightRange[_idx_];\n\n vec3 L = lightPosition - v_WorldPosition;\n\n float dist = length(L);\n float attenuation = lightAttenuation(dist, range);\n L /= dist;\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n if(shadowEnabled)\n {\n shadowContrib = shadowContribsPoint[_idx_];\n }\n#endif\n\n vec3 li = lc * ndl * attenuation * shadowContrib;\n diffuseTerm += li;\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n }}\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\n {{\n\n vec3 L = -normalize(directionalLightDirection[_idx_]);\n vec3 lc = directionalLightColor[_idx_];\n\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if(shadowEnabled)\n {\n shadowContrib = shadowContribsDir[_idx_];\n }\n#endif\n\n vec3 li = lc * ndl * shadowContrib;\n\n diffuseTerm += li;\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n }}\n#endif\n\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsSpot[SPOT_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n }\n#endif\n for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n {\n vec3 lightPosition = spotLightPosition[i];\n vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n vec3 lc = spotLightColor[i];\n float range = spotLightRange[i];\n float a = spotLightUmbraAngleCosine[i];\n float b = spotLightPenumbraAngleCosine[i];\n float falloffFactor = spotLightFalloffFactor[i];\n\n vec3 L = lightPosition - v_WorldPosition;\n float dist = length(L);\n float attenuation = lightAttenuation(dist, range);\n\n L /= dist;\n float c = dot(spotLightDirection, L);\n\n float falloff;\n falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n falloff = pow(falloff, falloffFactor);\n\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n if (shadowEnabled)\n {\n shadowContrib = shadowContribsSpot[i];\n }\n#endif\n\n vec3 li = lc * attenuation * (1.0 - falloff) * shadowContrib * ndl;\n\n diffuseTerm += li;\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n }\n#endif\n\n vec4 outColor = albedoColor;\n outColor.rgb *= diffuseTerm;\n\n outColor.rgb += specularTerm;\n\n\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n vec3 L = reflect(-V, N);\n float rough2 = clamp(1.0 - g, 0.0, 1.0);\n float bias2 = rough2 * 5.0;\n vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\n vec3 envWeight2 = spec * brdfParam2.x + brdfParam2.y;\n vec3 envTexel2;\n for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\n {{\n envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 51.5);\n outColor.rgb += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2;\n }}\n#endif\n\n#ifdef ENVIRONMENTMAP_ENABLED\n\n vec3 envWeight = g * fresnelTerm;\n vec3 L = reflect(-V, N);\n\n #ifdef PARALLAX_CORRECTED\n L = parallaxCorrect(L, v_WorldPosition, environmentBoxMin, environmentBoxMax);\n #endif\n\n #ifdef ENVIRONMENTMAP_PREFILTER\n float rough = clamp(1.0 - g, 0.0, 1.0);\n float bias = rough * maxMipmapLevel;\n vec3 envTexel = decodeHDR(textureCubeLodEXT(environmentMap, L, bias)).rgb;\n\n #ifdef BRDFLOOKUP_ENABLED\n vec2 brdfParam = texture2D(brdfLookup, vec2(rough, ndv)).xy;\n envWeight = spec * brdfParam.x + brdfParam.y;\n #endif\n\n #else\n vec3 envTexel = textureCube(environmentMap, L).xyz;\n #endif\n\n outColor.rgb += envTexel * envWeight;\n#endif\n\n float aoFactor = 1.0;\n#ifdef SSAOMAP_ENABLED\n aoFactor = min(texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r, aoFactor);\n#endif\n\n#ifdef AOMAP_ENABLED\n aoFactor = min(1.0 - clamp((1.0 - texture2D(aoMap, v_Texcoord2).r) * aoIntensity, 0.0, 1.0), aoFactor);\n#endif\n\n outColor.rgb *= aoFactor;\n\n vec3 lEmission = emission;\n#ifdef EMISSIVEMAP_ENABLED\n lEmission *= texture2D(emissiveMap, v_Texcoord).rgb;\n#endif\n outColor.rgb += lEmission * emissionIntensity;\n\n#ifdef GAMMA_ENCODE\n outColor.rgb = pow(outColor.rgb, vec3(1 / 2.2));\n#endif\n\n if(lineWidth > 0.)\n {\n outColor.rgb = mix(lineColor, vec3(outColor.rgb), edgeFactor(lineWidth));\n }\n\n#ifdef ALPHA_TEST\n if (outColor.a < alphaCutoff) {\n discard;\n }\n#endif\n\n gl_FragColor = encodeHDR(outColor);\n}\n\n@end\n"},function(t,e,n){function r(t){var e=new h,n=new p({radius:.04}),r=new g({shader:new y({vertex:y.source("qtek.basic.vertex"),fragment:y.source("qtek.basic.fragment")})});r.set("color",[.3,.3,.3]);var i=[];return t.joints.forEach(function(a){var o=t.joints[a.parentIndex],s=new v({geometry:n,material:r});e.add(s);var u=new x({dynamic:!0}),l=u.attributes.position;l.fromArray([0,0,0,0,0,0]);var c=new v({geometry:u,material:r,mode:v.LINES,lineWidth:2});e.add(c),i.push(function(){s.localTransform.copy(a.node.worldTransform),s.decomposeLocalTransform(),s.scale.set(1,1,1),o&&(l.set(0,a.node.getWorldPosition()._array),l.set(1,o.node.getWorldPosition()._array)),u.dirty()})}),e.before("render",function(){for(var t=0;t<i.length;t++)i[t]()}),e}function i(t,e){this.init(t,e)}var a=n(27),o=n(22),s=n(72),u=n(68),l=n(23),c=n(67),h=n(28),f=n(8),d=n(4),_=n(56),m=n(97),p=n(66),v=(n(65),n(14)),g=n(11),y=n(6),x=n(12),T=n(31),E=n(61),b=n(5),A=n(46),S=n(51),N=n(50),C=n(49),R=n(48);i.prototype.init=function(t,e){e=e||{},this._shaderName=e.shader||"lambert",this._renderDebugSkeleton=e.renderDebugSkeleton,e.shadow&&(this._shadowMapPass=new s),this.root=t,this._animation=new _;var n=new a;t.appendChild(n.canvas),n.canvas.style.cssText="position:absolute;left:0;top:0",this._renderer=n,this._scene=new h,this._camera=new o({near:.1,far:100}),this._cameraControl=new C({renderer:n,animation:this._animation,dom:t}),this._cameraControl.setCamera(this._camera),this._cameraControl.init(),this._hotspotManager=new R({dom:t,renderer:n,camera:this._camera}),this._skeletons=[],this._clips=[],this._initLights(),this.resize(),this._mainLightAlpha=45,this._mainLightBeta=45},i.prototype._initLights=function(){var t=new l({intensity:1,shadowResolution:1024,shadowBias:.05}),e=new c({intensity:.8,coefficients:[.4901205003261566,.496532678604126,.7081291079521179,-.0044515603221952915,.003780306549742818,.011885687708854675,-.17520742118358612,-.045615702867507935,.13985709846019745,.0018043766031041741,-.005721535999327898,-.00747253792360425,-.013539238832890987,-.009005839005112648,-.0029368270188570023,-.0036218082532286644,-.0014644089387729764,.002722999081015587,.003975209314376116,-.0012733691837638617,-.006120394915342331,-.010730908252298832,.02799658663570881,.05306524038314819,-.0002291168348165229,.017803849652409554,.030858537182211876]});this._mainLight=t,this._ambientLight=e,this._scene.add(t),this._scene.add(e)},i.prototype._addModel=function(t,e,n){var i=this._modelNode;i&&(this._renderer.disposeNode(i),this._scene.remove(i)),this._skeletons.forEach(function(t){t.__debugScene&&this._renderer.disposeScene(t.__debugScene)},this),this._scene.add(t);var a=[];for(var o in e){var s=e[o];a.push(s),this._renderDebugSkeleton&&(s.__debugScene=r(s))}this._skeletons=a,this._modelNode=t,this._setAnimationClips(n)},i.prototype._setAnimationClips=function(t){this._clips.forEach(function(t){this._animation.removeClip(t)},this);var e=[];for(var n in t){var r=t[n];r.target||(r.target=this._scene.getNode(r.name)),e.push(r),this._animation.addClip(r),t[n].setLoop(!0)}this._clips=e},i.prototype.resize=function(){var t=this._renderer;t.resize(this.root.clientWidth,this.root.clientHeight),this._camera.aspect=t.canvas.width/t.canvas.height},i.prototype.autoFitModel=function(t){if(t=t||10,this._modelNode){this.setPose(0),this._modelNode.update();var e=S(this._modelNode),n=new d;n.copy(e.max).sub(e.min);var r=new d;r.copy(e.max).add(e.min).scale(.5);var i=t/Math.max(n.x,n.y,n.z);this._modelNode.scale.set(i,i,i),this._modelNode.position.copy(r).scale(-i),this._mainLight.position.set(1,3,1),this._mainLight.lookAt(d.ZERO),this._hotspotManager.setBoundingBox(e.min._array,e.max._array)}},i.prototype.loadModel=function(t,e){e=e||{};var n=null!=e.alphaCutoff?e.alphaCutoff:.95;if(!t)throw new Error("URL of model is not provided");var r=new u({rootNode:new f,shaderName:"qtek."+this._shaderName,textureRootPath:e.textureRootPath,bufferRootPath:e.bufferRootPath,crossOrigin:"Anonymous"});r.load(t);var i=new T,a=0,o=0,s=0;return r.success(function(t){var e=[];t.rootNode.traverse(function(t){s++,t.skeleton&&e.push(t),t.geometry&&(o+=t.geometry.triangleCount,a+=t.geometry.vertexCount)}),e.forEach(function(t){m.splitByJoints(t,15,!0,r.shaderLibrary,"qtek."+this._shaderName)},this),t.rootNode.traverse(function(t){t.geometry&&(t.geometry.updateBoundingBox(),t.culling=!1),t.skeleton&&(t.frustumCulling=!1),t.material&&(t.material.shader.define("fragment","DIFFUSEMAP_ALPHA_ALPHA"),t.material.shader.define("fragment","ALPHA_TEST"),t.material.shader.precision="mediump",t.material.set("alphaCutoff",n))}),this._addModel(t.rootNode,t.skeletons,t.clips),this.autoFitModel(),this.setCameraControl({distance:20,minDisntance:2,maxDistance:100,center:[0,0,0]});var u={triangleCount:o,vertexCount:a,nodeCount:s,meshCount:Object.keys(t.meshes).length,materialCount:Object.keys(t.materials).length,textureCount:Object.keys(t.textures).length};i.trigger("loadmodel",u);var l=[];b.each(t.textures,function(t){t.isRenderable()||l.push(t)}),(new E).allSettled(l).success(function(){i.trigger("ready")})},this),r.error(function(){i.trigger("error")}),i},i.prototype.loadAnimation=function(t){var e=new u({rootNode:new f,crossOrigin:"Anonymous"});return e.load(t),e.success(function(t){this._setAnimationClips(t.clips)},this),e},i.prototype.pauseAnimation=function(){this._clips.forEach(function(t){t.pause()})},i.prototype.resumeAnimation=function(){this._clips.forEach(function(t){t.resume()})},i.prototype.setCameraControl=function(t){this._cameraControl.setOption(t)},i.prototype.setMainLight=function(t){null!=t.intensity&&(this._mainLight.intensity=t.intensity),null!=t.color&&(this._mainLight.color=(A.parse(t.color)||[0,0,0]).slice(0,3).map(function(t){return t/255})),null!=t.alpha&&(this._mainLightAlpha=t.alpha),null!=t.beta&&(this._mainLightBeta=t.beta),this._mainLight.position.setArray(N(this._mainLightAlpha,this._mainLightBeta)),this._mainLight.lookAt(d.ZERO)},i.prototype.setAmbientLight=function(t){null!=t.intensity&&(this._ambientLight.intensity=t.intensity)},i.prototype.start=function(){this._animation.start(),this._animation.on("frame",this._loop,this)},i.prototype.stop=function(){this._animation.stop(),this._animation.off("frame",this._loop)},i.prototype.addHotspot=function(t,e){return this._hotspotManager.add(t,e)},i.prototype.setPose=function(t){this._clips.forEach(function(e){e.setTime(t)}),this._updateClipAndSkeletons()},i.prototype._updateClipAndSkeletons=function(){this._clips.forEach(function(t){t.channels.position&&t.target.position.setArray(t.position),t.channels.rotation&&t.target.rotation.setArray(t.rotation),t.channels.scale&&t.target.scale.setArray(t.scale)}),this._skeletons.forEach(function(t){t.update()})},i.prototype._loop=function(t){this._disposed||(this._updateClipAndSkeletons(),this._scene.update(),this._shadowMapPass&&this._shadowMapPass.render(this._renderer,this._scene,this._camera),this._renderer.render(this._scene,this._camera),this._hotspotManager.update(),this._renderDebugSkeleton&&(this._renderer.saveClear(),this._renderer.clearBit=this._renderer.gl.DEPTH_BUFFER_BIT,this._skeletons.forEach(function(t){this._renderer.render(t.__debugScene,this._camera)},this),this._renderer.restoreClear()))},i.prototype.dispose=function(){this._disposed=!0,this.stop(),this._shadowMapPass&&this._shadowMapPass.dispose(this._renderer),this._renderer.disposeScene(this._scene),this._renderer.dispose(),this._cameraControl.dispose(),this.root.innerHTML=""},t.exports=i},function(t,e,n){t.exports={Viewer:n(43)}},function(t,e){var n=function(){this.head=null,this.tail=null,this._len=0},r=n.prototype;r.insert=function(t){var e=new i(t);return this.insertEntry(e),e},r.insertEntry=function(t){this.head?(this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t):this.head=this.tail=t,this._len++},r.remove=function(t){var e=t.prev,n=t.next;e?e.next=n:this.head=n,n?n.prev=e:this.tail=e,t.next=t.prev=null,this._len--},r.len=function(){return this._len},r.clear=function(){this.head=this.tail=null,this._len=0};var i=function(t){this.value=t,this.next,this.prev},a=function(t){this._list=new n,this._map={},this._maxSize=t||10,this._lastRemovedEntry=null},o=a.prototype;o.put=function(t,e){var n=this._list,r=this._map,a=null;if(null==r[t]){var o=n.len(),s=this._lastRemovedEntry;if(o>=this._maxSize&&o>0){var u=n.head;n.remove(u),delete r[u.key],a=u.value,this._lastRemovedEntry=u}s?s.value=e:s=new i(e),s.key=t,n.insertEntry(s),r[t]=s}return a},o.get=function(t){var e=this._map[t],n=this._list;if(null!=e)return e!==n.tail&&(n.remove(e),n.insertEntry(e)),e.value},o.clear=function(){this._list.clear(),this._map={}},t.exports=a},function(t,e,n){function r(t){return t=Math.round(t),t<0?0:t>255?255:t}function i(t){return t=Math.round(t),t<0?0:t>360?360:t}function a(t){return t<0?0:t>1?1:t}function o(t){return r(t.length&&"%"===t.charAt(t.length-1)?parseFloat(t)/100*255:parseInt(t,10))}function s(t){return a(t.length&&"%"===t.charAt(t.length-1)?parseFloat(t)/100:parseFloat(t))}function u(t,e,n){return n<0?n+=1:n>1&&(n-=1),6*n<1?t+(e-t)*n*6:2*n<1?e:3*n<2?t+(e-t)*(2/3-n)*6:t}function l(t,e,n){return t+(e-t)*n}function c(t,e,n,r,i){return t[0]=e,t[1]=n,t[2]=r,t[3]=i,t}function h(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function f(t,e){N&&h(N,e),N=S.put(t,N||e.slice())}function d(t,e){if(t){e=e||[];var n=S.get(t);if(n)return h(e,n);t+="";var r=t.replace(/ /g,"").toLowerCase();if(r in A)return h(e,A[r]),f(t,e),e;if("#"!==r.charAt(0)){var i=r.indexOf("("),a=r.indexOf(")");if(-1!==i&&a+1===r.length){var u=r.substr(0,i),l=r.substr(i+1,a-(i+1)).split(","),d=1;switch(u){case"rgba":if(4!==l.length)return void c(e,0,0,0,1);d=s(l.pop());case"rgb":return 3!==l.length?void c(e,0,0,0,1):(c(e,o(l[0]),o(l[1]),o(l[2]),d),f(t,e),e);case"hsla":return 4!==l.length?void c(e,0,0,0,1):(l[3]=s(l[3]),_(l,e),f(t,e),e);case"hsl":return 3!==l.length?void c(e,0,0,0,1):(_(l,e),f(t,e),e);default:return}}c(e,0,0,0,1)}else{if(4===r.length){var m=parseInt(r.substr(1),16);return m>=0&&m<=4095?(c(e,(3840&m)>>4|(3840&m)>>8,240&m|(240&m)>>4,15&m|(15&m)<<4,1),f(t,e),e):void c(e,0,0,0,1)}if(7===r.length){var m=parseInt(r.substr(1),16);return m>=0&&m<=16777215?(c(e,(16711680&m)>>16,(65280&m)>>8,255&m,1),f(t,e),e):void c(e,0,0,0,1)}}}}function _(t,e){var n=(parseFloat(t[0])%360+360)%360/360,i=s(t[1]),a=s(t[2]),o=a<=.5?a*(i+1):a+i-a*i,l=2*a-o;return e=e||[],c(e,r(255*u(l,o,n+1/3)),r(255*u(l,o,n)),r(255*u(l,o,n-1/3)),1),4===t.length&&(e[3]=t[3]),e}function m(t){if(t){var e,n,r=t[0]/255,i=t[1]/255,a=t[2]/255,o=Math.min(r,i,a),s=Math.max(r,i,a),u=s-o,l=(s+o)/2;if(0===u)e=0,n=0;else{n=l<.5?u/(s+o):u/(2-s-o);var c=((s-r)/6+u/2)/u,h=((s-i)/6+u/2)/u,f=((s-a)/6+u/2)/u;r===s?e=f-h:i===s?e=1/3+c-f:a===s&&(e=2/3+h-c),e<0&&(e+=1),e>1&&(e-=1)}var d=[360*e,n,l];return null!=t[3]&&d.push(t[3]),d}}function p(t,e){var n=d(t);if(n){for(var r=0;r<3;r++)n[r]=e<0?n[r]*(1-e)|0:(255-n[r])*e+n[r]|0;return E(n,4===n.length?"rgba":"rgb")}}function v(t,e){var n=d(t);if(n)return((1<<24)+(n[0]<<16)+(n[1]<<8)+ +n[2]).toString(16).slice(1)}function g(t,e,n){if(e&&e.length&&t>=0&&t<=1){n=n||[];var i=t*(e.length-1),o=Math.floor(i),s=Math.ceil(i),u=e[o],c=e[s],h=i-o;return n[0]=r(l(u[0],c[0],h)),n[1]=r(l(u[1],c[1],h)),n[2]=r(l(u[2],c[2],h)),n[3]=a(l(u[3],c[3],h)),n}}function y(t,e,n){if(e&&e.length&&t>=0&&t<=1){var i=t*(e.length-1),o=Math.floor(i),s=Math.ceil(i),u=d(e[o]),c=d(e[s]),h=i-o,f=E([r(l(u[0],c[0],h)),r(l(u[1],c[1],h)),r(l(u[2],c[2],h)),a(l(u[3],c[3],h))],"rgba");return n?{color:f,leftIndex:o,rightIndex:s,value:i}:f}}function x(t,e,n,r){if(t=d(t))return t=m(t),null!=e&&(t[0]=i(e)),null!=n&&(t[1]=s(n)),null!=r&&(t[2]=s(r)),E(_(t),"rgba")}function T(t,e){if((t=d(t))&&null!=e)return t[3]=a(e),E(t,"rgba")}function E(t,e){if(t&&t.length){var n=t[0]+","+t[1]+","+t[2];return"rgba"!==e&&"hsva"!==e&&"hsla"!==e||(n+=","+t[3]),e+"("+n+")"}}var b=n(45),A={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]},S=new b(20),N=null;t.exports={parse:d,lift:p,toHex:v,fastMapToColor:g,mapToColor:y,modifyHSL:x,modifyAlpha:T,stringify:E}},function(t,e){function n(t){var e=t[1][0]-t[0][0],n=t[1][1]-t[0][1];return Math.sqrt(e*e+n*n)}function r(t){return[(t[0][0]+t[1][0])/2,(t[0][1]+t[1][1])/2]}var i=function(){this._track=[]};i.prototype={constructor:i,recognize:function(t,e,n){return this._doTrack(t,e,n),this._recognize(t)},clear:function(){return this._track.length=0,this},_doTrack:function(t,e,n){var r=t.targetTouches;if(r){for(var i={points:[],touches:[],target:e,event:t},a=0,o=r.length;a<o;a++){var s=r[a];i.points.push([s.clientX,s.clientY]),i.touches.push(s)}this._track.push(i)}},_recognize:function(t){for(var e in a)if(a.hasOwnProperty(e)){var n=a[e](this._track,t);if(n)return n}}};var a={pinch:function(t,e){var i=t.length;if(i){var a=(t[i-1]||{}).points,o=(t[i-2]||{}).points||a;if(o&&o.length>1&&a&&a.length>1){var s=n(a)/n(o);!isFinite(s)&&(s=1),e.pinchScale=s;var u=r(a);return e.pinchX=u[0],e.pinchY=u[1],{type:"pinch",target:t[0].target,event:e}}}}};t.exports=i},function(t,e,n){var r=n(1),i=n(71),a=n(3),o=r.extend(function(){return{dom:null,renderer:null,camera:null,_boundingBox:new a,_hotspotRoot:null,_hotspots:[]}},function(){if(!this.dom||!this.renderer||!this.camera)throw new Error("Tip manager needs `root`,  `camera`, `renderer`");var t=this._hotspotRoot=document.createElement("div");t.style.cssText="position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;",this.dom.appendChild(t)},{setBoundingBox:function(t,e){this._boundingBox.min.setArray(t),this._boundingBox.max.setArray(e)},add:function(t,e){if("string"==typeof e){var n=document.createElement("div");n.innerHTML=e,e=n}return e.classList.add("qmv-annotation"),e.style.position="absolute",this._hotspotRoot.appendChild(e),this._hotspots.push({position:t,dom:e}),e},remove:function(t){for(var e=-1,n=0;n<this._hotspots.length;n++)if(this._hotspots[n].dom===t){e=n;break}e>=0&&(this._hotspots.splice(e,1),this._hotspotRoot.removeChild(t))},update:function(){var t=new i,e=new a;this._hotspots.forEach(function(n){var r=n.position;t.set(r[0],r[1],r[2],1),t.transformMat4(this.camera.viewMatrix);var i=t.z;t.transformMat4(this.camera.projectionMatrix),t.scale(1/t.w);var a=.5*(t.x+1)*this.renderer.getWidth(),o=.5*(t.y+1)*this.renderer.getHeight();n.dom.style.left=a+"px",n.dom.style.top=this.renderer.getHeight()-o+"px";var s=null==n.farAlpha?.1:n.farAlpha,u=null==n.nearAlpha?1:n.nearAlpha;e.copy(this._boundingBox),e.applyTransform(this.camera.viewMatrix);var l=(i-e.max.z)/(e.min.z-e.max.z);Math.max(Math.min(l,1),0);n.dom.style.opacity=1,n.onupdate&&n.onupdate(a,o)},this)}});t.exports=o},function(t,e,n){var r=n(1),i=n(38),a=n(4),o=(n(24),n(47)),s=r.extend(function(){return{renderer:null,animation:null,dom:null,_center:new a,minDistance:2,maxDistance:100,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,_mode:"rotate",damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,_camera:null,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new i,_panVelocity:new i,_distance:20,_zoomSpeed:0,_stillTimeout:0,_animators:[],_gestureMgr:new o}},function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._pinchHandler=this._pinchHandler.bind(this),this._update=this._update.bind(this)},{init:function(){var t=this.dom;t.addEventListener("touchstart",this._mouseDownHandler),t.addEventListener("mousedown",this._mouseDownHandler),t.addEventListener("mousewheel",this._mouseWheelHandler),this.animation.on("frame",this._update)},dispose:function(){var t=this.dom;t.removeEventListener("touchstart",this._mouseDownHandler),t.removeEventListener("touchmove",this._mouseMoveHandler),t.removeEventListener("touchend",this._mouseUpHandler),t.removeEventListener("mousedown",this._mouseDownHandler),t.removeEventListener("mousemove",this._mouseMoveHandler),t.removeEventListener("mouseup",this._mouseUpHandler),t.removeEventListener("mousewheel",this._mouseWheelHandler),this.animation&&this.animation.off("frame",this._update),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(t){this._distance=t,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(t){t=Math.max(Math.min(this.maxAlpha,t),this.minAlpha),this._theta=t/180*Math.PI,this._needsUpdate=!0},setBeta:function(t){t=Math.max(Math.min(this.maxBeta,t),this.minBeta),this._phi=-t/180*Math.PI,this._needsUpdate=!0},setCenter:function(t){this._center.setArray(t)},setCamera:function(t){this._camera=t,this._needsUpdate=!0},getCamera:function(){return this._camera},setOption:function(t){t=t||{},["autoRotate","autoRotateAfterStill","autoRotateDirection","autoRotateSpeed","damping","minDistance","maxDistance","minAlpha","maxAlpha","minBeta","maxBeta","rotateSensitivity","zoomSensitivity","panSensitivity"].forEach(function(e){null!=t[e]&&(this[e]=t[e])},this),null!=t.distance&&this.setDistance(t.distance),null!=t.alpha&&this.setAlpha(t.alpha),null!=t.beta&&this.setBeta(t.beta),t.center&&this.setCenter(t.center)},animateTo:function(t){var e=this,n={},r={};return null!=t.distance&&(n.distance=this.getDistance(),r.distance=t.distance),null!=t.alpha&&(n.alpha=this.getAlpha(),r.alpha=t.alpha),null!=t.beta&&(n.beta=this.getBeta(),r.beta=t.beta),null!=t.center&&(n.center=this.getCenter(),r.center=t.center),this._addAnimator(animation.animate(n).when(t.duration||1e3,r).during(function(){null!=n.alpha&&e.setAlpha(n.alpha),null!=n.beta&&e.setBeta(n.beta),null!=n.distance&&e.setDistance(n.distance),null!=n.center&&e.setCenter(n.center),e._needsUpdate=!0})).start(t.easing||"linear")},stopAllAnimation:function(){for(var t=0;t<this._animators.length;t++)this._animators[t].stop();this._animators.length=0},_isAnimating:function(){return this._animators.length>0},_update:function(t){if(this._rotating){var e=("cw"===this.autoRotateDirection?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=e*t/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.01||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(this._updateDistance(Math.min(t,50)),this._updatePan(Math.min(t,50)),this._updateRotate(Math.min(t,50)),this._updateTransform(),this._camera.update(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(t){var e=this._rotateVelocity;this._phi=e.y*t/20+this._phi,this._theta=e.x*t/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(e,this.damping)},_updateDistance:function(t){this._setDistance(this._distance+this._zoomSpeed*t/20),this._zoomSpeed*=this.damping},_setDistance:function(t){this._distance=Math.max(Math.min(t,this.maxDistance),this.minDistance)},_updatePan:function(t){},_updateTransform:function(){var t=this._camera,e=new a,n=this._theta+Math.PI/2,r=this._phi+Math.PI/2,i=Math.sin(n);e.x=i*Math.cos(r),e.y=-Math.cos(n),e.z=i*Math.sin(r),t.position.copy(this._center).scaleAndAdd(e,this._distance),t.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var t=this.autoRotateAfterStill,e=this;!isNaN(t)&&t>0&&(this._stillTimeout=setTimeout(function(){e._rotating=!0},1e3*t))},_vectorDamping:function(t,e){var n=t.len();n*=e,n<1e-4&&(n=0),t.normalize().scale(n)},_decomposeTransform:function(){if(this._camera){var t=new a;t.eulerFromQuat(this._camera.rotation.normalize(),"ZYX"),this._theta=-t.x,this._phi=-t.y,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this._setDistance(this._camera.position.dist(this._center))}},_mouseDownHandler:function(t){if(!this._isAnimating()){var e=t.clientX,n=t.clientY;if(t.targetTouches){var r=t.targetTouches[0];e=r.clientX,n=r.clientY,this._mode="rotate",this._processGesture(t,"start")}var i=this.dom;i.addEventListener("touchmove",this._mouseMoveHandler),i.addEventListener("touchend",this._mouseUpHandler),i.addEventListener("mousemove",this._mouseMoveHandler),i.addEventListener("mouseup",this._mouseUpHandler),0===t.button?this._mode="rotate":1===t.button&&(this._mode="pan"),this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=e,this._mouseY=n}},_mouseMoveHandler:function(t){if(!this._isAnimating()){var e,n=t.clientX,r=t.clientY;if(t.targetTouches){var i=t.targetTouches[0];n=i.clientX,r=i.clientY,e=this._processGesture(t,"change")}e||("rotate"===this._mode?(this._rotateVelocity.y=(n-this._mouseX)/this.renderer.getHeight()*2*this.rotateSensitivity,this._rotateVelocity.x=(r-this._mouseY)/this.renderer.getWidth()*2*this.rotateSensitivity):"pan"===this._mode&&(this._panVelocity.x=(n-this._mouseX)/this.renderer.getWidth()*this.panSensitivity*400,this._panVelocity.y=(-r+this._mouseY)/this.renderer.getHeight()*this.panSensitivity*400)),this._mouseX=n,this._mouseY=r,t.preventDefault()}},_mouseWheelHandler:function(t){if(!this._isAnimating()){var e=t.wheelDelta||-t.detail;0!==e&&this._zoomHandler(t,e>0?-1:1)}},_pinchHandler:function(t){this._isAnimating()||this._zoomHandler(t,t.pinchScale>1?-.4:.4)},_zoomHandler:function(t,e){var n=(t.clientX,t.clientY,Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance)));this._zoomSpeed=e*Math.max(n/40*this.zoomSensitivity,.2),this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),t.preventDefault()},_mouseUpHandler:function(t){var e=this.dom;e.removeEventListener("touchmove",this._mouseMoveHandler),e.removeEventListener("touchend",this._mouseUpHandler),e.removeEventListener("mousemove",this._mouseMoveHandler),e.removeEventListener("mouseup",this._mouseUpHandler),this._processGesture(t,"end")},_addAnimator:function(t){var e=this._animators;return e.push(t),t.done(function(){var n=e.indexOf(t);n>=0&&e.splice(n,1)}),t},_processGesture:function(t,e){var n=this._gestureMgr;"start"===e&&n.clear();var r=n.recognize(t,null,this.dom);if("end"===e&&n.clear(),r){var i=r.type;t.gestureEvent=i,this._pinchHandler(r.event)}return r}});Object.defineProperty(s.prototype,"autoRotate",{get:function(t){return this._autoRotate},set:function(t){this._autoRotate=t,this._rotating=t}}),t.exports=s},function(t,e){t.exports=function(t,e){var n=t/180*Math.PI+Math.PI/2,r=-e/180*Math.PI+Math.PI/2,i=[],a=Math.sin(n);return i[0]=a*Math.cos(r),i[1]=-Math.cos(n),i[2]=a*Math.sin(r),i}},function(t,e,n){function r(t,e){for(var n=[],r=[],i=[],a=[],o=[],u=[],l=t.geometry,c=t.skeleton.getSubSkinMatrices(t.__GUID__,t.joints),h=0;h<t.joints.length;h++){a[h]=a[h]||[];for(var f=0;f<16;f++)a[h][f]=c[16*h+f]}for(var d=l.attributes.position,_=l.attributes.weight,m=l.attributes.joint,p=[1/0,1/0,1/0],v=[-1/0,-1/0,-1/0],h=0;h<l.vertexCount;h++){d.get(h,n),_.get(h,i),m.get(h,r),i[3]=1-i[0]-i[1]-i[2],s.set(o,0,0,0);for(var f=0;f<4;f++)r[f]>=0&&(s.transformMat4(u,n,a[r[f]]),s.scaleAndAdd(o,o,u,i[f]));s.min(p,p,o),s.max(v,v,o)}e.min.setArray(p),e.max.setArray(v)}function i(t,e){e=e||new a;var n=t.children();0===n.length&&(e.max.set(-1/0,-1/0,-1/0),e.min.set(1/0,1/0,1/0));for(var o=new a,s=0;s<n.length;s++){var u=n[s];i(u,o),u.updateLocalTransform(),o.isFinite()&&o.applyTransform(u.localTransform),0===s?e.copy(o):e.union(o)}return t.geometry&&(t.skeleton&&t.joints&&t.joints.length?(r(t,o),e.union(o)):e.union(t.geometry.boundingBox)),e}var a=n(3),o=n(0),s=o.vec3;o.mat4;t.exports=i},function(t,e,n){"use strict";var r=n(1),i=n(13),a=n(20),o=n(7),s=n(2),u=n(18),l=s.FRAMEBUFFER,c=s.RENDERBUFFER,h=s.DEPTH_ATTACHMENT,f=s.COLOR_ATTACHMENT0,d=r.extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},function(){this._cache=new u,this._textures={}},{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(t){if(t.__currentFrameBuffer){if(t.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}t.__currentFrameBuffer=this;var e=t.gl;e.bindFramebuffer(l,this._getFrameBufferGL(e)),this._boundRenderer=t;var n=this._cache;n.put("viewport",t.viewport);var r,i,a=!1;for(var o in this._textures){a=!0;var s=this._textures[o];s&&(r=s.texture.width,i=s.texture.height,this._doAttach(e,s.texture,o,s.target))}this._width=r,this._height=i,!a&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?t.setViewport(this.viewport):t.setViewport(0,0,r,i,1);var u=n.get("attached_textures");if(u)for(var o in u)if(!this._textures[o]){var f=u[o];this._doDetach(e,o,f)}if(!n.get("depthtexture_attached")&&this.depthBuffer){n.miss("renderbuffer")&&n.put("renderbuffer",e.createRenderbuffer());var d=n.get("renderbuffer");r===n.get("renderbuffer_width")&&i===n.get("renderbuffer_height")||(e.bindRenderbuffer(c,d),e.renderbufferStorage(c,e.DEPTH_COMPONENT16,r,i),n.put("renderbuffer_width",r),n.put("renderbuffer_height",i),e.bindRenderbuffer(c,null)),n.get("renderbuffer_attached")||(e.framebufferRenderbuffer(l,h,c,d),n.put("renderbuffer_attached",!0))}},unbind:function(t){t.__currentFrameBuffer=null;var e=t.gl;e.bindFramebuffer(l,null),this._boundRenderer=null,this._cache.use(e.__GLID__);var n=this._cache.get("viewport");n&&t.setViewport(n),this.updateMipmap(e)},updateMipmap:function(t){for(var e in this._textures){var n=this._textures[e];if(n){var r=n.texture;if(!r.NPOT&&r.useMipmap&&r.minFilter===i.LINEAR_MIPMAP_LINEAR){var o=r instanceof a?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D;t.bindTexture(o,r.getWebGLTexture(t)),t.generateMipmap(o),t.bindTexture(o,null)}}}},checkStatus:function(t){return t.checkFramebufferStatus(l)},_getFrameBufferGL:function(t){var e=this._cache;return e.use(t.__GLID__),e.miss("framebuffer")&&e.put("framebuffer",t.createFramebuffer()),e.get("framebuffer")},attach:function(t,e,n){if(!t.width)throw new Error("The texture attached to color buffer is not a valid.");e=e||f,n=n||s.TEXTURE_2D;var r,i=this._boundRenderer,a=i&&i.gl;if(a){var o=this._cache;o.use(a.__GLID__),r=o.get("attached_textures")}var u=this._textures[e];if(!u||u.target!==n||u.texture!==t||!r||null==r[e]){var l=!0;a&&(l=this._doAttach(a,t,e,n),this.viewport||i.setViewport(0,0,t.width,t.height,1)),l&&(this._textures[e]=this._textures[e]||{},this._textures[e].texture=t,this._textures[e].target=n)}},_doAttach:function(t,e,n,r){var i=e.getWebGLTexture(t),a=this._cache.get("attached_textures");if(a&&a[n]){var u=a[n];if(u.texture===e&&u.target===r)return}n=+n;var f=!0;if(n===h||n===s.DEPTH_STENCIL_ATTACHMENT){if(o.getExtension(t,"WEBGL_depth_texture")||(console.error("Depth texture is not supported by the browser"),f=!1),e.format!==s.DEPTH_COMPONENT&&e.format!==s.DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),f=!1),f){var d=this._cache.get("renderbuffer");d&&(t.framebufferRenderbuffer(l,h,c,null),t.deleteRenderbuffer(d),this._cache.put("renderbuffer",!1)),this._cache.put("renderbuffer_attached",!1),this._cache.put("depthtexture_attached",!0)}}return t.framebufferTexture2D(l,n,r,i,0),a||(a={},this._cache.put("attached_textures",a)),a[n]=a[n]||{},a[n].texture=e,a[n].target=r,f},_doDetach:function(t,e,n){t.framebufferTexture2D(l,e,n,null,0);var r=this._cache.get("attached_textures");r&&r[e]&&(r[e]=null),e!==h&&e!==s.DEPTH_STENCIL_ATTACHMENT||this._cache.put("depthtexture_attached",!1)},detach:function(t,e){if(this._textures[t]=null,this._boundRenderer){var n=this._boundRenderer.gl;this._cache.use(n.__GLID__),this._doDetach(n,t,e)}},dispose:function(t){var e=this._cache;e.use(t.__GLID__);var n=e.get("renderbuffer");n&&t.deleteRenderbuffer(n);var r=e.get("framebuffer");r&&t.deleteFramebuffer(r),e.deleteContext(t.__GLID__),this._textures={}}});d.DEPTH_ATTACHMENT=h,d.COLOR_ATTACHMENT0=f,d.STENCIL_ATTACHMENT=s.STENCIL_ATTACHMENT,d.DEPTH_STENCIL_ATTACHMENT=s.DEPTH_STENCIL_ATTACHMENT,t.exports=d},function(t,e,n){"use strict";function r(t){return{byte:f.Int8Array,ubyte:f.Uint8Array,short:f.Int16Array,ushort:f.Uint16Array}[t]||f.Float32Array}function i(t,e,n,r){this.name=t,this.type=e,this.size=n,r&&(this.semantic=r)}function a(t,e,n,r){switch(i.call(this,t,e,n,r),this.value=null,n){case 1:this.get=function(t){return this.value[t]},this.set=function(t,e){this.value[t]=e},this.copy=function(t,e){this.value[t]=this.value[t]};break;case 2:this.get=function(t,e){var n=this.value;return e[0]=n[2*t],e[1]=n[2*t+1],e},this.set=function(t,e){var n=this.value;n[2*t]=e[0],n[2*t+1]=e[1]},this.copy=function(t,e){var n=this.value;e*=2,t*=2,n[t]=n[e],n[t+1]=n[e+1]};break;case 3:this.get=function(t,e){var n=3*t,r=this.value;return e[0]=r[n],e[1]=r[n+1],e[2]=r[n+2],e},this.set=function(t,e){var n=3*t,r=this.value;r[n]=e[0],r[n+1]=e[1],r[n+2]=e[2]},this.copy=function(t,e){var n=this.value;e*=3,t*=3,n[t]=n[e],n[t+1]=n[e+1],n[t+2]=n[e+2]};break;case 4:this.get=function(t,e){var n=this.value,r=4*t;return e[0]=n[r],e[1]=n[r+1],e[2]=n[r+2],e[3]=n[r+3],e},this.set=function(t,e){var n=this.value,r=4*t;n[r]=e[0],n[r+1]=e[1],n[r+2]=e[2],n[r+3]=e[3]},this.copy=function(t,e){var n=this.value;e*=4,t*=4,n[t]=n[e],n[t+1]=n[e+1],n[t+2]=n[e+2],n[t+3]=n[e+3]}}}function o(t,e,n,r,i){this.name=t,this.type=e,this.buffer=n,this.size=r,this.semantic=i,this.symbol="",this.needsRemove=!1}function s(t){this.buffer=t,this.count=0}function u(){console.warn("Geometry doesn't implement this method, use StaticGeometry instead")}var l=n(1),c=n(2),h=n(18),f=n(9);i.prototype.clone=function(t){var e=new this.constructor(this.name,this.type,this.size,this.semantic);return t&&console.warn("todo"),e},a.prototype.constructor=new i,a.prototype.init=function(t){if(!this.value||this.value.length!=t*this.size){var e=r(this.type);this.value=new e(t*this.size)}},a.prototype.fromArray=function(t){var e,n=r(this.type);if(t[0]&&t[0].length){var i=0,a=this.size;e=new n(t.length*a);for(var o=0;o<t.length;o++)for(var s=0;s<a;s++)e[i++]=t[o][s]}else e=new n(t);this.value=e};var d=l.extend({boundingBox:null,attributes:{},indices:null,dynamic:!1},function(){this._cache=new h,this._attributeList=Object.keys(this.attributes)},{pickByRay:null,pick:null,mainAttribute:"position",dirty:u,createAttribute:u,removeAttribute:u,getTriangleIndices:u,setTriangleIndices:u,isUseIndices:u,getEnabledAttributes:u,getBufferChunks:u,generateVertexNormals:u,generateFaceNormals:u,isUniqueVertex:u,generateUniqueVertex:u,generateTangents:u,generateBarycentric:u,applyTransform:u,dispose:u});d.STATIC_DRAW=c.STATIC_DRAW,d.DYNAMIC_DRAW=c.DYNAMIC_DRAW,d.STREAM_DRAW=c.STREAM_DRAW,d.AttributeBuffer=o,d.IndicesBuffer=s,d.Attribute=i,d.StaticAttribute=a,t.exports=d},function(t,e,n){"use strict";function r(t,e,n){this.availableAttributes=t,this.availableAttributeSymbols=e,this.indicesBuffer=n,this.vao=null}var i,a=n(8),o=n(2),s=n(7),u=0,l=null,c=!0,h=function(){this.triangleCount=0,this.vertexCount=0,this.drawCallCount=0},f=a.extend({material:null,geometry:null,mode:o.TRIANGLES,_drawCache:null,_renderInfo:null},function(){this._drawCache={},this._renderInfo=new h},{renderOrder:0,lineWidth:1,culling:!0,cullFace:o.BACK,frontFace:o.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,isRenderable:function(){return this.geometry&&this.material&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(t){},afterRender:function(t,e){},getBoundingBox:function(t,e){return e=a.prototype.getBoundingBox.call(this,t,e),this.geometry&&this.geometry.boundingBox&&e.union(this.geometry.boundingBox),e},render:function(t,e){var e=e||this.material.shader,n=this.geometry,a=this.mode,h=n.vertexCount,f=n.isUseIndices(),d=s.getExtension(t,"OES_element_index_uint"),_=d&&h>65535,m=_?t.UNSIGNED_INT:t.UNSIGNED_SHORT,p=s.getExtension(t,"OES_vertex_array_object"),v=!n.dynamic,g=this._renderInfo;g.vertexCount=h,g.triangleCount=0,g.drawCallCount=0;var y=!1;if(i=t.__GLID__+"-"+n.__GUID__+"-"+e.__GUID__,i!==u?y=!0:(h>65535&&!d&&f||p&&v||n._cache.isDirty())&&(y=!0),u=i,y){var x=this._drawCache[i];if(!x){var T=n.getBufferChunks(t);if(!T)return;x=[];for(var E=0;E<T.length;E++){for(var b=T[E],A=b.attributeBuffers,S=b.indicesBuffer,N=[],C=[],R=0;R<A.length;R++){var M,w=A[R],I=w.name,D=w.semantic;if(D){var L=e.attribSemantics[D];M=L&&L.symbol}else M=I;M&&e.attributeTemplates[M]&&(N.push(w),C.push(M))}var O=new r(N,C,S);x.push(O)}v&&(this._drawCache[i]=x)}for(var P=0;P<x.length;P++){var O=x[P],U=!0;p&&v&&(null==O.vao?O.vao=p.createVertexArrayOES():U=!1,p.bindVertexArrayOES(O.vao));var N=O.availableAttributes,S=O.indicesBuffer;if(U)for(var F=e.enableAttributes(t,O.availableAttributeSymbols,p&&v&&O.vao),R=0;R<N.length;R++){var k=F[R];if(-1!==k){var B,w=N[R],H=w.buffer,W=w.size;switch(w.type){case"float":B=t.FLOAT;break;case"byte":B=t.BYTE;break;case"ubyte":B=t.UNSIGNED_BYTE;break;case"short":B=t.SHORT;break;case"ushort":B=t.UNSIGNED_SHORT;break;default:B=t.FLOAT}t.bindBuffer(t.ARRAY_BUFFER,H),t.vertexAttribPointer(k,W,B,!1,0,0)}}a!=o.LINES&&a!=o.LINE_STRIP&&a!=o.LINE_LOOP||t.lineWidth(this.lineWidth),l=S,c=n.isUseIndices(),c?(U&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,S.buffer),t.drawElements(a,S.count,m,0),g.triangleCount+=S.count/3):t.drawArrays(a,0,h),p&&v&&p.bindVertexArrayOES(null),g.drawCallCount++}}else c?(t.drawElements(a,l.count,m,0),g.triangleCount=l.count/3):t.drawArrays(a,0,h),g.drawCallCount=1;return g},clone:function(){var t=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling"];return function(){var e=a.prototype.clone.call(this);e.geometry=this.geometry,e.material=this.material;for(var n=0;n<t.length;n++){var r=t[n];e[r]!==this[r]&&(e[r]=this[r])}return e}}()});f.beforeFrame=function(){u=0},f.POINTS=o.POINTS,f.LINES=o.LINES,f.LINE_LOOP=o.LINE_LOOP,f.LINE_STRIP=o.LINE_STRIP,f.TRIANGLES=o.TRIANGLES,f.TRIANGLE_STRIP=o.TRIANGLE_STRIP,f.TRIANGLE_FAN=o.TRIANGLE_FAN,f.BACK=o.BACK,f.FRONT=o.FRONT,f.FRONT_AND_BACK=o.FRONT_AND_BACK,f.CW=o.CW,f.CCW=o.CCW,f.RenderInfo=h,t.exports=f},function(t,e,n){"use strict";var r=n(1),i=n(26),a=n(0),o=a.quat,s=a.vec3,u=a.mat4,l=r.extend(function(){return{relativeRootNode:null,name:"",roots:[],joints:[],_clips:[],_invBindPoseMatricesArray:null,_jointMatricesSubArrays:[],_skinMatricesArray:null,_skinMatricesSubArrays:[],_subSkinMatricesArray:{}}},{addClip:function(t,e){for(var n=0;n<this._clips.length;n++)if(this._clips[n].clip===t)return;for(var r=[],n=0;n<this.joints.length;n++)r[n]=-1;for(var n=0;n<t.jointClips.length;n++)for(var i=0;i<this.joints.length;i++){var a=this.joints[i],o=t.jointClips[n],s=a.name;if(e&&(s=e[s]),o.name===s){r[i]=n;break}}return this._clips.push({maps:r,clip:t}),this._clips.length-1},removeClip:function(t){for(var e=-1,n=0;n<this._clips.length;n++)if(this._clips[n].clip===t){e=n;break}e>0&&this._clips.splice(e,1)},removeClipsAll:function(){this._clips=[]},getClip:function(t){if(this._clips[t])return this._clips[t].clip},getClipNumber:function(){return this._clips.length},updateJointMatrices:function(){var t=u.create();return function(){for(var e=0;e<this.roots.length;e++)this.roots[e].node.update(!0);this._invBindPoseMatricesArray=new Float32Array(16*this.joints.length),this._skinMatricesArray=new Float32Array(16*this.joints.length);for(var e=0;e<this.joints.length;e++){var n=this.joints[e];this.relativeRootNode?(u.invert(t,this.relativeRootNode.worldTransform._array),u.multiply(t,t,n.node.worldTransform._array),u.invert(t,t)):(u.copy(t,n.node.worldTransform._array),u.invert(t,t));for(var r=16*e,i=0;i<16;i++)this._invBindPoseMatricesArray[r+i]=t[i]}this.updateMatricesSubArrays()}}(),setJointMatricesArray:function(t){this._invBindPoseMatricesArray=t,this._skinMatricesArray=new Float32Array(t.length),this.updateMatricesSubArrays()},updateMatricesSubArrays:function(){for(var t=0;t<this.joints.length;t++)this._jointMatricesSubArrays[t]=this._invBindPoseMatricesArray.subarray(16*t,16*(t+1)),this._skinMatricesSubArrays[t]=this._skinMatricesArray.subarray(16*t,16*(t+1))},update:function(){var t=u.create();return function(){for(var e=0;e<this.roots.length;e++)this.roots[e].node.update(!0);for(var e=0;e<this.joints.length;e++){var n=this.joints[e];u.multiply(this._skinMatricesSubArrays[e],n.node.worldTransform._array,this._jointMatricesSubArrays[e]),this.relativeRootNode&&(u.invert(t,this.relativeRootNode.worldTransform._array),u.multiply(this._skinMatricesSubArrays[e],t,this._skinMatricesSubArrays[e]))}}}(),getSubSkinMatrices:function(t,e){var n=this._subSkinMatricesArray[t];n||(n=this._subSkinMatricesArray[t]=new Float32Array(16*e.length));for(var r=0,i=0;i<e.length;i++)for(var a=e[i],o=0;o<16;o++)n[r++]=this._skinMatricesArray[16*a+o];return n},setPose:function(t){if(this._clips[t])for(var e=this._clips[t].clip,n=this._clips[t].maps,r=0;r<this.joints.length;r++){var i=this.joints[r];if(-1!==n[r]){var a=e.jointClips[n[r]];a.channels.position&&s.copy(i.node.position._array,a.position),a.channels.rotation&&o.copy(i.node.rotation._array,a.rotation),a.channels.scale&&s.copy(i.node.scale._array,a.scale),i.node.position._dirty=!0,i.node.rotation._dirty=!0,i.node.scale._dirty=!0}}this.update()},clone:function(t,e){var n=new l;n.name=this.name;for(var r=0;r<this.joints.length;r++){var a=new i;a.name=this.joints[r].name,a.index=this.joints[r].index;var o=this.joints[r].node.getPath(t),s=this.joints[r].rootNode.getPath(t);null!=o&&null!=s?a.node=e.queryNode(o):console.warn("Something wrong in clone, may be the skeleton root nodes is not mounted on the cloned root node."),n.joints.push(a)}for(var r=0;r<this.roots.length;r++)n.roots.push(n.joints[this.roots[r].index]);if(this._invBindPoseMatricesArray){var u=this._invBindPoseMatricesArray.length;n._invBindPoseMatricesArray=new Float32Array(u);for(var r=0;r<u;r++)n._invBindPoseMatricesArray[r]=this._invBindPoseMatricesArray[r];n._skinMatricesArray=new Float32Array(u),n.updateMatricesSubArrays()}return n.update(),n}});t.exports=l},function(t,e,n){"use strict";var r=n(1),i=n(57),a=window.requestAnimationFrame||window.msRequestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(t){setTimeout(t,16)},o=r.extend(function(){return{stage:null,_clips:[],_running:!1,_time:0,_paused:!1,_pausedTime:0}},{addAnimator:function(t){t.animation=this;for(var e=t.getClips(),n=0;n<e.length;n++)this.addClip(e[n])},addClip:function(t){this._clips.indexOf(t)<0&&this._clips.push(t)},removeClip:function(t){var e=this._clips.indexOf(t);e>=0&&this._clips.splice(e,1)},removeAnimator:function(t){for(var e=t.getClips(),n=0;n<e.length;n++)this.removeClip(e[n]);t.animation=null},_update:function(){for(var t=(new Date).getTime()-this._pausedTime,e=t-this._time,n=this._clips,r=n.length,i=[],a=[],o=0;o<r;o++){var s=n[o],u=s.step(t,e);u&&(i.push(u),a.push(s))}for(var o=0;o<r;)n[o]._needsRemove?(n[o]=n[r-1],n.pop(),r--):o++;r=i.length;for(var o=0;o<r;o++)a[o].fire(i[o]);this._time=t,this.trigger("frame",e),this.stage&&this.stage.render&&this.stage.render()},start:function(){function t(){e._running&&(a(t),e._paused||e._update())}var e=this;this._running=!0,this._time=(new Date).getTime(),this._pausedTime=0,a(t)},stop:function(){this._running=!1},pause:function(){this._paused||(this._pauseStart=(new Date).getTime(),this._paused=!0)},resume:function(){this._paused&&(this._pausedTime+=(new Date).getTime()-this._pauseStart,this._paused=!1)},removeClipsAll:function(){this._clips=[]},animate:function(t,e){e=e||{};var n=new i(t,e.loop,e.getter,e.setter,e.interpolater);return n.animation=this,n}});t.exports=o},function(t,e,n){function r(t,e){return t[e]}function i(t,e,n){t[e]=n}function a(t,e,n){return(e-t)*n+t}function o(t,e,n,r,i){var o=t.length;if(1==i)for(var s=0;s<o;s++)r[s]=a(t[s],e[s],n);else for(var u=t[0].length,s=0;s<o;s++)for(var l=0;l<u;l++)r[s][l]=a(t[s][l],e[s][l],n)}function s(t){return void 0!==t&&("string"!=typeof t&&"number"==typeof t.length)}function u(t){if(s(t)){var e=t.length;if(s(t[0])){for(var n=[],r=0;r<e;r++)n.push(p.call(t[r]));return n}return p.call(t)}return t}function l(t,e,n,r,i,a,o,s,u){var l=t.length;if(1==u)for(var h=0;h<l;h++)s[h]=c(t[h],e[h],n[h],r[h],i,a,o);else for(var f=t[0].length,h=0;h<l;h++)for(var d=0;d<f;d++)s[h][d]=c(t[h][d],e[h][d],n[h][d],r[h][d],i,a,o)}function c(t,e,n,r,i,a,o){var s=.5*(n-t),u=.5*(r-e);return(2*(e-n)+s+u)*o+(-3*(e-n)-2*s-u)*a+s*i+e}function h(t,e,n){var r=t.length,i=e.length;if(r!==i){if(r>i)t.length=i;else for(var a=r;a<i;a++)t.push(1===n?e[a]:p.call(e[a]))}for(var o=t[0]&&t[0].length,a=0;a<t.length;a++)if(1===n)isNaN(t[a])&&(t[a]=e[a]);else for(var s=0;s<o;s++)isNaN(t[a][s])&&(t[a][s]=e[a][s])}function f(t,e,n){if(t===e)return!0;var r=t.length;if(r!==e.length)return!1;if(1===n){for(var i=0;i<r;i++)if(t[i]!==e[i])return!1}else for(var a=t[0].length,i=0;i<r;i++)for(var o=0;o<a;o++)if(t[i][o]!==e[i][o])return!1;return!0}function d(t,e,n,r,i,u){var d=t._getter,_=t._setter,p="spline"===e,v=r.length;if(v){var g=r[0].value,y=s(g),x=y&&s(g[0])?2:1;r.sort(function(t,e){return t.time-e.time});for(var T=r[v-1].time,E=[],b=[],A=r[0].value,S=!0,N=0;N<v;N++){E.push(r[N].time/T);var C=r[N].value;y&&f(C,A,x)||!y&&C===A||(S=!1),A=C,b.push(C)}if(!S){for(var R=b[v-1],N=0;N<v-1;N++)y?h(b[N],R,x):isNaN(b[N])&&!isNaN(R)&&(b[N]=R);y&&h(d(t._target,i),R,x);var M,N,w,I,D,L,O,P=0,U=0,F=function(t,e){if(e<U){for(M=Math.min(P+1,v-1),N=M;N>=0&&!(E[N]<=e);N--);N=Math.min(N,v-2)}else{for(N=P;N<v&&!(E[N]>e);N++);N=Math.min(N-1,v-2)}P=N,U=e;var n=E[N+1]-E[N];0!==n&&(w=(e-E[N])/n,p?(D=b[N],I=b[0===N?N:N-1],L=b[N>v-2?v-1:N+1],O=b[N>v-3?v-1:N+2],u?_(t,i,u(d(t,i),I,D,L,O,w)):y?l(I,D,L,O,w,w*w,w*w*w,d(t,i),x):_(t,i,c(I,D,L,O,w,w*w,w*w*w))):u?_(t,i,u(d(t,i),b[N],b[N+1],w)):y?o(b[N],b[N+1],w,d(t,i),x):_(t,i,a(b[N],b[N+1],w)))},k=new m({target:t._target,life:T,loop:t._loop,delay:t._delay,onframe:F,onfinish:n});return e&&"spline"!==e&&k.setEasing(e),k}}}function _(t,e,n,a,o){this._tracks={},this._target=t,this._loop=e||!1,this._getter=n||r,this._setter=a||i,this._interpolater=o||null,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[]}var m=n(17),p=Array.prototype.slice;_.prototype={constructor:_,when:function(t,e){for(var n in e)this._tracks[n]||(this._tracks[n]=[],0!==t&&this._tracks[n].push({time:0,value:u(this._getter(this._target,n))})),this._tracks[n].push({time:parseInt(t),value:e[n]});return this},during:function(t){return this._onframeList.push(t),this},_doneCallback:function(){this._tracks={},this._clipList.length=0;for(var t=this._doneList,e=t.length,n=0;n<e;n++)t[n].call(this)},start:function(t){var e,n=this,r=0,i=function(){0===--r&&n._doneCallback()};for(var a in this._tracks){var o=d(this,t,i,this._tracks[a],a,n._interpolater);o&&(this._clipList.push(o),r++,this.animation&&this.animation.addClip(o),e=o)}if(e){var s=e.onframe;e.onframe=function(t,e){s(t,e);for(var r=0;r<n._onframeList.length;r++)n._onframeList[r](t,e)}}return r||this._doneCallback(),this},stop:function(){for(var t=0;t<this._clipList.length;t++){var e=this._clipList[t];this.animation.removeClip(e)}this._clipList=[]},delay:function(t){return this._delay=t,this},done:function(t){return t&&this._doneList.push(t),this},getClips:function(){return this._clipList}},t.exports=_},function(t,e,n){"use strict";function r(t,e,n,r,i,a){var o=e[i],s=e[i+1],u=e[i+2];return t[0]=o+r*(n[a]-o),t[1]=s+r*(n[a+1]-s),t[2]=u+r*(n[a+2]-u),t}function i(t,e,n,r,i,a){var o,s,u,l,c,h=e[0+i],f=e[1+i],d=e[2+i],_=e[3+i],m=n[0+a],p=n[1+a],v=n[2+a],g=n[3+a];return s=h*m+f*p+d*v+_*g,s<0&&(s=-s,m=-m,p=-p,v=-v,g=-g),1-s>1e-6?(o=Math.acos(s),u=Math.sin(o),l=Math.sin((1-r)*o)/u,c=Math.sin(r*o)/u):(l=1-r,c=r),t[0]=l*h+c*m,t[1]=l*f+c*p,t[2]=l*d+c*v,t[3]=l*_+c*g,t}var a=n(17),o=n(30),s=n(0),u=s.quat,l=s.vec3,c=function(t){t=t||{},a.call(this,t),this.position=l.create(),this.rotation=u.create(),this.scale=l.fromValues(1,1,1),this.channels={time:null,position:null,rotation:null,scale:null},this._cacheKey=0,this._cacheTime=0};c.prototype=Object.create(a.prototype),c.prototype.constructor=c,c.prototype.step=function(t,e){var n=a.prototype.step.call(this,t,e);return"finish"!==n&&this.setTime(this.getElapsedTime()),n},c.prototype.setTime=function(t){if(this.channels.time){var e=this.channels,n=e.time.length,a=-1;if(t<=e.time[0])t=e.time[0],a=0;else if(t>=e.time[n-1])t=e.time[n-1],a=n-2;else if(t<this._cacheTime){for(var o=Math.min(n-2,this._cacheKey),s=o;s>=0;s--)if(e.time[s-1]<=t&&e.time[s]>t){a=s-1;break}}else for(var s=this._cacheKey;s<n-1;s++)if(e.time[s]<=t&&e.time[s+1]>t){a=s;break}if(a>-1){this._cacheKey=a,this._cacheTime=t;var u=a,l=a+1,c=e.time[u],h=e.time[l],f=(t-c)/(h-c);e.rotation&&i(this.rotation,e.rotation,e.rotation,f,4*u,4*l),e.position&&r(this.position,e.position,e.position,f,3*u,3*l),e.scale&&r(this.scale,e.scale,e.scale,f,3*u,3*l)}a==n-2&&(this._cacheKey=0,this._cacheTime=0)}},c.prototype.getSubClip=function(t,e){var n=new c({name:this.name}),r=this.channels.time[0];t=Math.min(Math.max(t,r),this.life),e=Math.min(Math.max(e,r),this.life);var i=this._findRange(t),a=this._findRange(e),o=a[0]-i[0]+1;0===i[1]&&0===a[1]&&(o-=1),this.channels.rotation&&(n.channels.rotation=new Float32Array(4*o)),this.channels.position&&(n.channels.position=new Float32Array(3*o)),this.channels.scale&&(n.channels.scale=new Float32Array(3*o)),this.channels.time&&(n.channels.time=new Float32Array(o)),this.setTime(t);for(var s=0;s<3;s++)n.channels.rotation[s]=this.rotation[s],n.channels.position[s]=this.position[s],n.channels.scale[s]=this.scale[s];n.channels.time[0]=0,n.channels.rotation[3]=this.rotation[3];for(var s=1;s<o-1;s++){for(var u,l=0;l<3;l++)u=i[0]+s,n.channels.rotation[4*s+l]=this.channels.rotation[4*u+l],n.channels.position[3*s+l]=this.channels.position[3*u+l],n.channels.scale[3*s+l]=this.channels.scale[3*u+l];n.channels.time[s]=this.channels.time[u]-t,n.channels.rotation[4*s+3]=this.channels.rotation[4*u+3]}this.setTime(e);for(var s=0;s<3;s++)n.channels.rotation[4*(o-1)+s]=this.rotation[s],n.channels.position[3*(o-1)+s]=this.position[s],n.channels.scale[3*(o-1)+s]=this.scale[s];return n.channels.time[o-1]=e-t,n.channels.rotation[4*(o-1)+3]=this.rotation[3],n.life=e-t,n},c.prototype._findRange=function(t){for(var e=this.channels,n=e.time.length,r=-1,i=0;i<n-1;i++)e.time[i]<=t&&e.time[i+1]>t&&(r=i);var a=0;if(r>=0)var o=e.time[r],s=e.time[r+1],a=(t-o)/(s-o);return[r,a]},c.prototype.blend1D=o.prototype.blend1D,c.prototype.blend2D=o.prototype.blend2D,c.prototype.additiveBlend=o.prototype.additiveBlend,c.prototype.subtractiveBlend=o.prototype.subtractiveBlend,c.prototype.clone=function(){var t=a.prototype.clone.call(this);return t.channels={time:this.channels.time||null,position:this.channels.position||null,rotation:this.channels.rotation||null,scale:this.channels.scale||null},l.copy(t.position,this.position),u.copy(t.rotation,this.rotation),l.copy(t.scale,this.scale),t},t.exports=c},function(t,e,n){"use strict";var r=n(17),i=n(30),a=n(0),o=a.quat,s=a.vec3,u=function(t){if(t=t||{},r.call(this,t),this.jointClips=[],this.life=0,t.jointClips&&t.jointClips.length>0)for(var e=0;e<t.jointClips.length;e++){var n=t.jointClips[e],a=new i({keyFrames:n.keyFrames});a.name=n.name||"",this.jointClips[e]=a,this.life=Math.max(a.life,this.life)}};u.prototype=Object.create(r.prototype),u.prototype.constructor=u,u.prototype.step=function(t,e){var n=r.prototype.step.call(this,t,e);return"finish"!==n&&this.setTime(this.getElapsedTime()),n},u.prototype.setTime=function(t){for(var e=0;e<this.jointClips.length;e++)this.jointClips[e].setTime(t)},u.prototype.addJointClip=function(t){this.jointClips.push(t),this.life=Math.max(t.life,this.life)},u.prototype.removeJointClip=function(t){this.jointClips.splice(this.jointClips.indexOf(t),1)},u.prototype.getSubClip=function(t,e,n){for(var r=new u({name:this.name}),i=0;i<this.jointClips.length;i++){var a=this.jointClips[i].getSubClip(t,e);r.addJointClip(a)}return void 0!==n&&r.setLoop(n),r},u.prototype.blend1D=function(t,e,n){for(var r=0;r<this.jointClips.length;r++){var i=t.jointClips[r],a=e.jointClips[r];this.jointClips[r].blend1D(i,a,n)}},u.prototype.additiveBlend=function(t,e){for(var n=0;n<this.jointClips.length;n++){var r=t.jointClips[n],i=e.jointClips[n];this.jointClips[n].additiveBlend(r,i)}},u.prototype.subtractiveBlend=function(t,e){for(var n=0;n<this.jointClips.length;n++){var r=t.jointClips[n],i=e.jointClips[n];this.jointClips[n].subtractiveBlend(r,i)}},u.prototype.blend2D=function(t,e,n,r,i){for(var a=0;a<this.jointClips.length;a++){var o=t.jointClips[a],s=e.jointClips[a],u=n.jointClips[a];this.jointClips[a].blend2D(o,s,u,r,i)}},u.prototype.copy=function(t){for(var e=0;e<this.jointClips.length;e++){var n=t.jointClips[e],r=this.jointClips[e];s.copy(r.position,n.position),s.copy(r.scale,n.scale),o.copy(r.rotation,n.rotation)}},u.prototype.clone=function(){for(var t=r.prototype.clone.call(this),e=0;e<this.jointClips.length;e++)t.addJointClip(this.jointClips[e].clone());return t},t.exports=u},function(t,e){var n={linear:function(t){return t},quadraticIn:function(t){return t*t},quadraticOut:function(t){return t*(2-t)},quadraticInOut:function(t){return(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1)},cubicIn:function(t){return t*t*t},cubicOut:function(t){return--t*t*t+1},cubicInOut:function(t){return(t*=2)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},quarticIn:function(t){return t*t*t*t},quarticOut:function(t){return 1- --t*t*t*t},quarticInOut:function(t){return(t*=2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},quinticIn:function(t){return t*t*t*t*t},quinticOut:function(t){return--t*t*t*t*t+1},quinticInOut:function(t){return(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},sinusoidalIn:function(t){return 1-Math.cos(t*Math.PI/2)},sinusoidalOut:function(t){return Math.sin(t*Math.PI/2)},sinusoidalInOut:function(t){return.5*(1-Math.cos(Math.PI*t))},exponentialIn:function(t){return 0===t?0:Math.pow(1024,t-1)},exponentialOut:function(t){return 1===t?1:1-Math.pow(2,-10*t)},exponentialInOut:function(t){return 0===t?0:1===t?1:(t*=2)<1?.5*Math.pow(1024,t-1):.5*(2-Math.pow(2,-10*(t-1)))},circularIn:function(t){return 1-Math.sqrt(1-t*t)},circularOut:function(t){return Math.sqrt(1- --t*t)},circularInOut:function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},elasticIn:function(t){var e,n=.1;return 0===t?0:1===t?1:(!n||n<1?(n=1,e=.1):e=.4*Math.asin(1/n)/(2*Math.PI),-n*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/.4))},elasticOut:function(t){var e,n=.1;return 0===t?0:1===t?1:(!n||n<1?(n=1,e=.1):e=.4*Math.asin(1/n)/(2*Math.PI),n*Math.pow(2,-10*t)*Math.sin((t-e)*(2*Math.PI)/.4)+1)},elasticInOut:function(t){var e,n=.1;return 0===t?0:1===t?1:(!n||n<1?(n=1,e=.1):e=.4*Math.asin(1/n)/(2*Math.PI),(t*=2)<1?n*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/.4)*-.5:n*Math.pow(2,-10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/.4)*.5+1)},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){var e=1.70158;return--t*t*((e+1)*t+e)+1},backInOut:function(t){var e=2.5949095;return(t*=2)<1?t*t*((e+1)*t-e)*.5:.5*((t-=2)*t*((e+1)*t+e)+2)},bounceIn:function(t){return 1-n.bounceOut(1-t)},bounceOut:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},bounceInOut:function(t){return t<.5?.5*n.bounceIn(2*t):.5*n.bounceOut(2*t-1)+.5}};t.exports=n},function(t,e,n){"use strict";var r=n(5),i=n(31),a=function(){i.apply(this,arguments),this._tasks=[],this._fulfilledNumber=0,this._rejectedNumber=0},o=function(){};o.prototype=i.prototype,a.prototype=new o,a.prototype.constructor=a,a.prototype.all=function(t){var e=0,n=this,i=[];return this._tasks=t,this._fulfilledNumber=0,this._rejectedNumber=0,r.each(t,function(t,r){t&&t.once&&(e++,t.once("success",function(a){e--,n._fulfilledNumber++,t._fulfilled=!0,t._rejected=!1,i[r]=a,0===e&&n.resolve(i)}),t.once("error",function(){n._rejectedNumber++,t._fulfilled=!1,t._rejected=!0,n.reject(t)}))}),0===e?(setTimeout(function(){n.resolve(i)}),this):this},a.prototype.allSettled=function(t){var e=0,n=this,i=[];return 0===t.length?(setTimeout(function(){n.trigger("success",i)}),this):(this._tasks=t,r.each(t,function(t,r){t&&t.once&&(e++,t.once("success",function(a){e--,n._fulfilledNumber++,t._fulfilled=!0,t._rejected=!1,i[r]=a,0===e&&n.resolve(i)}),t.once("error",function(a){e--,n._rejectedNumber++,t._fulfilled=!1,t._rejected=!0,i[r]=null,0===e&&n.resolve(i)}))}),this)},a.prototype.getFulfilledNumber=function(t){if(t){for(var e=0,n=0;n<this._tasks.length;n++){var r=this._tasks[n];r instanceof a?e+=r.getFulfilledNumber(t):r._fulfilled&&(e+=1)}return e}return this._fulfilledNumber},a.prototype.getRejectedNumber=function(t){if(t){for(var e=0,n=0;n<this._tasks.length;n++){var r=this._tasks[n];r instanceof a?e+=r.getRejectedNumber(t):r._rejected&&(e+=1)}return e}return this._rejectedNumber},a.prototype.getSettledNumber=function(t){if(t){for(var e=0,n=0;n<this._tasks.length;n++){var r=this._tasks[n];r instanceof a?e+=r.getSettledNumber(t):(r._rejected||r._fulfilled)&&(e+=1)}return e}return this._fulfilledNumber+this._rejectedNumber},a.prototype.getTaskNumber=function(t){if(t){for(var e=0,n=0;n<this._tasks.length;n++){var r=this._tasks[n];e+=r instanceof a?r.getTaskNumber(t):1}return e}return this._tasks.length},t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(21),a=n(34),o=n(6),s=n(11),u=n(14),l=n(7),c=n(2);o.import(n(89));var h=new a,f=new u({geometry:h,frustumCulling:!1}),d=new i,_=r.extend(function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}},function(){var t=new o({vertex:o.source("qtek.compositor.vertex"),fragment:this.fragment}),e=new s({shader:t});t.enableTexturesAll(),this.material=e},{setUniform:function(t,e){var n=this.material.uniforms[t];n&&(n.value=e)},getUniform:function(t){var e=this.material.uniforms[t];if(e)return e.value},attachOutput:function(t,e){this.outputs||(this.outputs={}),e=e||c.COLOR_ATTACHMENT0,this.outputs[e]=t},detachOutput:function(t){for(var e in this.outputs)this.outputs[e]===t&&(this.outputs[e]=null)},bind:function(t,e){if(this.outputs)for(var n in this.outputs){var r=this.outputs[n];r&&e.attach(r,n)}e&&e.bind(t)},unbind:function(t,e){e.unbind(t)},render:function(t,e){var n=t.gl;if(e){this.bind(t,e);var r=l.getExtension(n,"EXT_draw_buffers");if(r&&this.outputs){var i=[];for(var a in this.outputs)(a=+a)>=n.COLOR_ATTACHMENT0&&a<=n.COLOR_ATTACHMENT0+8&&i.push(a);r.drawBuffersEXT(i)}}this.trigger("beforerender",this,t);var o=this.clearDepth?n.DEPTH_BUFFER_BIT:0;if(n.depthMask(!0),this.clearColor){o|=n.COLOR_BUFFER_BIT,n.colorMask(!0,!0,!0,!0);var s=this.clearColor;s instanceof Array&&n.clearColor(s[0],s[1],s[2],s[3])}n.clear(o),this.blendWithPrevious?(n.enable(n.BLEND),this.material.transparent=!0):(n.disable(n.BLEND),this.material.transparent=!1),this.renderQuad(t),this.trigger("afterrender",this,t),e&&this.unbind(t,e)},renderQuad:function(t){f.material=this.material,t.renderQueue([f],d)},dispose:function(t){this.material.dispose(t)}});t.exports=_},function(t,e,n){"use strict";function r(t){u.defaultsWithPropList(t,c,h),i(t);for(var e="",n=0;n<h.length;n++){e+=t[h[n]].toString()}return e}function i(t){var e=a(t.width,t.height);t.format===s.DEPTH_COMPONENT&&(t.useMipmap=!1),e&&t.useMipmap||(t.minFilter==s.NEAREST_MIPMAP_NEAREST||t.minFilter==s.NEAREST_MIPMAP_LINEAR?t.minFilter=s.NEAREST:t.minFilter!=s.LINEAR_MIPMAP_LINEAR&&t.minFilter!=s.LINEAR_MIPMAP_NEAREST||(t.minFilter=s.LINEAR),t.wrapS=s.CLAMP_TO_EDGE,t.wrapT=s.CLAMP_TO_EDGE)}function a(t,e){return 0==(t&t-1)&&0==(e&e-1)}var o=n(16),s=n(2),u=n(5),l=function(){this._pool={},this._allocatedTextures=[]};l.prototype={constructor:l,get:function(t){var e=r(t);this._pool.hasOwnProperty(e)||(this._pool[e]=[]);var n=this._pool[e];if(!n.length){var i=new o(t);return this._allocatedTextures.push(i),i}return n.pop()},put:function(t){var e=r(t);this._pool.hasOwnProperty(e)||(this._pool[e]=[]),this._pool[e].push(t)},clear:function(t){for(var e=0;e<this._allocatedTextures.length;e++)this._allocatedTextures[e].dispose(t);this._pool={},this._allocatedTextures=[]}};var c={width:512,height:512,type:s.UNSIGNED_BYTE,format:s.RGBA,wrapS:s.CLAMP_TO_EDGE,wrapT:s.CLAMP_TO_EDGE,minFilter:s.LINEAR_MIPMAP_LINEAR,magFilter:s.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},h=Object.keys(c);t.exports=l},function(t,e,n){"use strict";function r(t,e,n){"object"==typeof e&&(n=e,e=null);var r,o=this;if(!(t instanceof Function)){r=[];for(var s in t)t.hasOwnProperty(s)&&r.push(s)}var u=function(e){if(o.apply(this,arguments),t instanceof Function?i(this,t.call(this,e)):a(this,t,r),this.constructor===u)for(var n=u.__initializers__,s=0;s<n.length;s++)n[s].apply(this,arguments)};u.__super__=o,o.__initializers__?u.__initializers__=o.__initializers__.slice():u.__initializers__=[],e&&u.__initializers__.push(e);var l=function(){};return l.prototype=o.prototype,u.prototype=new l,u.prototype.constructor=u,i(u.prototype,n),u.extend=o.extend,u.derive=o.extend,u}function i(t,e){if(e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])}function a(t,e,n){for(var r=0;r<n.length;r++){var i=n[r];t[i]=e[i]}}t.exports={extend:r,derive:r}},function(t,e,n){"use strict";function r(t,e,n){c.identity();var r=new a({widthSegments:e,heightSegments:n});switch(t){case"px":o.translate(c,c,s.POSITIVE_X),o.rotateY(c,c,Math.PI/2);break;case"nx":o.translate(c,c,s.NEGATIVE_X),o.rotateY(c,c,-Math.PI/2);break;case"py":o.translate(c,c,s.POSITIVE_Y),o.rotateX(c,c,-Math.PI/2);break;case"ny":o.translate(c,c,s.NEGATIVE_Y),o.rotateX(c,c,Math.PI/2);break;case"pz":o.translate(c,c,s.POSITIVE_Z);break;case"nz":o.translate(c,c,s.NEGATIVE_Z),o.rotateY(c,c,Math.PI)}return r.applyTransform(c),r}var i=n(12),a=n(34),o=n(15),s=n(4),u=n(3),l=n(9),c=new o,h=i.extend({widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},function(){this.build()},{build:function(){var t={px:r("px",this.depthSegments,this.heightSegments),nx:r("nx",this.depthSegments,this.heightSegments),py:r("py",this.widthSegments,this.depthSegments),ny:r("ny",this.widthSegments,this.depthSegments),pz:r("pz",this.widthSegments,this.heightSegments),nz:r("nz",this.widthSegments,this.heightSegments)},e=["position","texcoord0","normal"],n=0,i=0;for(var a in t)n+=t[a].vertexCount,i+=t[a].indices.length;for(var o=0;o<e.length;o++)this.attributes[e[o]].init(n);this.indices=new l.Uint16Array(i);var s=0,c=0;for(var a in t){for(var h=t[a],o=0;o<e.length;o++)for(var f=e[o],d=h.attributes[f].value,_=h.attributes[f].size,m="normal"===f,p=0;p<d.length;p++){var v=d[p];this.inside&&m&&(v=-v),this.attributes[f].value[p+_*c]=v}for(var p=0;p<h.indices.length;p++)this.indices[p+s]=c+h.indices[p];s+=h.indices.length,c+=h.vertexCount}this.boundingBox=new u,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});t.exports=h},function(t,e,n){"use strict";var r=n(12),i=n(0),a=(i.vec3,i.vec2,n(3)),o=r.extend({widthSegments:20,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},function(){this.build()},{build:function(){var t=this.heightSegments,e=this.widthSegments,n=this.attributes.position,r=this.attributes.texcoord0,i=this.attributes.normal,o=(e+1)*(t+1);n.init(o),r.init(o),i.init(o);var s,u,l,c,h,f,d,_=o>65535?Uint32Array:Uint16Array,m=this.indices=new _(e*t*6),p=this.radius,v=this.phiStart,g=this.phiLength,y=this.thetaStart,x=this.thetaLength,p=this.radius,T=[],E=[],b=0,A=1/p;for(d=0;d<=t;d++)for(f=0;f<=e;f++)c=f/e,h=d/t,s=-p*Math.cos(v+c*g)*Math.sin(y+h*x),u=p*Math.cos(y+h*x),l=p*Math.sin(v+c*g)*Math.sin(y+h*x),T[0]=s,T[1]=u,T[2]=l,E[0]=c,E[1]=h,n.set(b,T),r.set(b,E),T[0]*=A,T[1]*=A,T[2]*=A,i.set(b,T),b++;var S,N,C,R,M=e+1,w=0;for(d=0;d<t;d++)for(f=0;f<e;f++)N=d*M+f,S=d*M+f+1,R=(d+1)*M+f+1,C=(d+1)*M+f,m[w++]=S,m[w++]=N,m[w++]=R,m[w++]=N,m[w++]=C,m[w++]=R;this.boundingBox=new a,this.boundingBox.max.set(p,p,p),this.boundingBox.min.set(-p,-p,-p)}});t.exports=o},function(t,e,n){"use strict";var r=n(10),i=n(9),a=r.extend({castShadow:!1,coefficients:[]},function(){this._coefficientsTmpArr=new i.Float32Array(27)},{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(t){var e=t.color,n=t.intensity;return[e[0]*n,e[1]*n,e[2]*n]}},ambientSHLightCoefficients:{type:"3f",value:function(t){for(var e=t._coefficientsTmpArr,n=0;n<t.coefficients.length;n++)e[n]=t.coefficients[n];return e}}}});t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(33),a=n(5),o=n(9),s=n(28),u=(n(6),n(11)),l=n(29),c=n(14),h=n(8),f=(n(13),n(16)),d=(n(20),n(19)),_=n(55),m=n(26),p=n(22),v=n(21),g=n(35),y=n(36),x=n(23),T=n(2),E=(n(4),n(24),n(3)),b=n(58),A=n(59),S=n(12),N=n(0),C=N.quat;n(73);var R={NORMAL:"normal",POSITION:"position",TEXCOORD_0:"texcoord0",TEXCOORD_1:"texcoord1",WEIGHT:"weight",JOINT:"joint",COLOR:"color"},M=r.extend({rootNode:null,rootPath:null,textureRootPath:null,bufferRootPath:null,shaderName:"qtek.standard",useStandardMaterial:!1,includeCamera:!0,includeLight:!0,includeAnimation:!0,includeMesh:!0,includeTexture:!0,crossOrigin:"",shaderLibrary:null},function(){this.shaderLibrary||(this.shaderLibrary=d.createLibrary())},{load:function(t){var e=this;null==this.rootPath&&(this.rootPath=t.slice(0,t.lastIndexOf("/"))),i.get({url:t,onprogress:function(t,n,r){e.trigger("progress",t,n,r)},onerror:function(t){e.trigger("error",t)},responseType:"text",onload:function(t){e.parse(JSON.parse(t))}})},parse:function(t){function e(){n.includeMesh&&(n.includeTexture&&n._parseTextures(t,i),n._parseMaterials(t,i),n._parseMeshes(t,i)),n._parseNodes(t,i);var e=t.scenes[t.scene];if(e)for(var r=0;r<e.nodes.length;r++){var a=i.nodes[e.nodes[r]];a.update(),o.add(a)}n.includeMesh&&n._parseSkins(t,i);var s,u={};if(n.includeAnimation&&(u=n._parseAnimations(t,i),Object.keys(u).length)){s=new A,s.setLoop(!0);for(var l in u)s.addJointClip(u[l]);for(var c in i.skeletons)i.skeletons[c].addClip(s)}for(var c in i.skeletons)i.skeletons[c].relativeRootNode=o;n.trigger("success",{scene:n.rootNode?null:o,rootNode:n.rootNode?o:null,cameras:i.cameras,textures:i.textures,materials:i.materials,skeletons:i.skeletons,meshes:i.meshes,clips:i.clips,clip:s})}var n=this,r=0,i={buffers:{},materials:{},textures:{},meshes:{},joints:{},skeletons:{},cameras:{},nodes:{}},o=this.rootNode||new s;return a.each(t.buffers,function(t,a){r++;var o=t.uri;null==o&&(o=t.path),n._loadBuffer(o,function(t){i.buffers[a]=t,0===--r&&e()},function(){0===--r&&e()})}),{scene:n.rootNode?null:o,rootNode:n.rootNode?o:null,cameras:i.cameras,textures:i.textures,materials:i.materials,skeletons:i.skeletons,meshes:i.meshes,clip:null}},_loadBuffer:function(t,e,n){var r=this.bufferRootPath;null==r&&(r=this.rootPath),r&&(t=r+"/"+t),i.get({url:t,responseType:"arraybuffer",onload:function(t){e&&e(t)},onerror:function(t){n&&n(t)}})},_parseSkins:function(t,e){function n(t,e,n){t.skeleton=e,t.joints=n;var r=t.material.shader,i=t.material.clone();t.material=i,i instanceof l?i.jointCount=n.length:i.shader=S.get(N,{textures:r.getEnabledTextures(),vertexDefines:{SKINNING:null,JOINT_COUNT:n.length}})}var r=!1;for(var i in t.skins){for(var a=t.skins[i],s=new _({name:i}),u=0;u<a.joints.length;u++){var h=a.joints[u],f=new m({name:h,index:s.joints.length});s.joints.push(f)}if(a.inverseBindMatrices){r=!0;var d=a.inverseBindMatrices,p=d.bufferView,v=t.bufferViews[p],g=e.buffers[v.buffer],y=d.byteOffset+v.byteOffset,x=16*d.count,T=new o.Float32Array(g,y,x);s._invBindPoseMatricesArray=T,s._skinMatricesArray=new o.Float32Array(T.length)}e.skeletons[i]=s}var E=function(n,r,i,a){var o=e.nodes[r],s=t.nodes[r],u=n[s.jointId];u?(u.node=o,u.parentIndex=i,u.rootNode=a,i=u.index):u=new m({node:o,rootNode:a,parentIndex:i});for(var l=0;l<s.children.length;l++)E(n,s.children[l],i,a);return u},b=function(t){return t.index},A={},S=this.shaderLibrary,N=this.shaderName;for(var i in t.nodes){var C=t.nodes[i];if(C.instanceSkin){var R=C.instanceSkin.skin,s=e.skeletons[R];A[R]=s;var M=e.nodes[i],w=s.joints.map(b);if(M instanceof c)n(M,s,w);else for(var u=0;u<M._children.length;u++)n(M._children[u],s,w);for(var I={},u=0;u<s.joints.length;u++){var f=s.joints[u];I[f.name]=f}var D=C.instanceSkin.skeletons;for(u=0;u<D.length;u++){var L=e.nodes[D[u]],O=E(I,D[u],-1,L);O&&s.roots.push(O)}}}for(var i in A){var s=A[i];r?s.updateMatricesSubArrays():s.updateJointMatrices(),s.update()}},_parseTextures:function(t,e){var n=this.textureRootPath;null==n&&(n=this.rootPath),a.each(t.textures,function(r,i){var o=t.samplers[r.sampler],s={};["wrapS","wrapT","magFilter","minFilter"].forEach(function(t){var e=o[t];null!=e&&("string"==typeof e&&(e=T[e]),s[t]=e)});var u=r.target,l=r.format;if("string"==typeof u&&(u=T[u],l=T[l]),s.format=l,u===T.TEXTURE_2D){var c=new f(s),h=t.images[r.source];c.load(a.relative2absolute(h.path,n),this.crossOrigin),e.textures[i]=c}else T.TEXTURE_CUBE_MAP},this)},_parseMaterials:function(t,e){var n={};for(var r in t.techniques){var i=t.techniques[r];i.passes?n[r]=i.passes[i.pass]:n[r]=i}for(var r in t.materials){var a=t.materials[r];if(a.instanceTechnique){for(var o in a.instanceTechnique)a[o]=a.instanceTechnique[o];a.instanceTechnique=null}var s=n[a.technique],c={};c=a.values;for(var h in c){var d=c[h];"string"==typeof d&&(e.textures[d]?c[h]=e.textures[d]:c[h]=null)}var _=[];c.diffuse instanceof f&&_.push("diffuseMap"),c.normalMap instanceof f&&_.push("normalMap");var m,p=this.useStandardMaterial;m=p?new l({name:a.name}):new u({name:a.name,shader:this.shaderLibrary.get(this.shaderName,_)}),null!=s.states.depthMask&&(m.depthMask=s.states.depthMask),null!=s.states.depthTestEnable&&(m.depthTest=s.states.depthTestEnable),m.cullFace=s.states.cullFaceEnable||!1,s.states.blendEnable&&(m.transparent=!0);var v=c.diffuse;if(v&&(v instanceof Array?p?m.color=v.slice(0,3):m.set("color",v.slice(0,3)):p?m.diffuseMap=v:m.set("diffuseMap",v)),null!=c.normalMap&&(p?m.normalMap=c.normalMap:m.set("normalMap",c.normalMap)),null!=c.emission&&m.set("emission",c.emission.slice(0,3)),null!=c.shininess){var g=Math.log(c.shininess)/Math.log(8192);m.set("glossiness",g),m.set("roughness",1-g),m.set("shininess",c.shininess)}else m.set("glossiness",.5),m.set("shininess",.5);null!=c.specular&&m.set("specularColor",c.specular.slice(0,3)),null!=c.transparency&&m.set("alpha",c.transparency),e.materials[r]=m}},_parseMeshes:function(t,e){for(var n=this,r=Object.keys(t.meshes),i=0;i<r.length;i++){var a=r[i],s=t.meshes[a];e.meshes[a]=[];for(var l=0;l<s.primitives.length;l++){for(var h=s.primitives[l],f=new S({boundingBox:new E}),d=Object.keys(h.attributes),_=0;_<d.length;_++){var m=d[_],p=h.attributes[m],v=t.accessors[p],g=R[m];if(g){var y=v.componentType;if(null==y){var x=v.type;switch(x){case 35664:T=2,b=o.Float32Array;break;case 35665:T=3,b=o.Float32Array;break;case 35666:T=4,b=o.Float32Array;break;case 5126:T=1,b=o.Float32Array;break;default:console.warn("Attribute type "+v.type+" not support yet")}}else{var x=v.type;b={5120:o.Int8Array,5121:o.Uint8Array,5122:o.Int16Array,5123:o.Uint16Array,5126:o.Float32Array}[y]||o.Float32Array,T={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16}[x]}var T,b,A=t.bufferViews[v.bufferView],N=e.buffers[A.buffer],C=A.byteOffset+v.byteOffset,M=new b(N,C,v.count*T);if("WEIGHT"===m&&4===T){for(var w=new b(3*v.count),I=0;I<v.count;I++)w[3*I]=M[4*I],w[3*I+1]=M[4*I+1],w[3*I+2]=M[4*I+2];f.attributes[g].value=w}else f.attributes[g].value=M;if("POSITION"===m){var D=v.min,L=v.max;D&&f.boundingBox.min.set(D[0],D[1],D[2]),L&&f.boundingBox.max.set(L[0],L[1],L[2])}}}var O=t.accessors[h.indices],A=t.bufferViews[O.bufferView],N=e.buffers[A.buffer],C=A.byteOffset+O.byteOffset;5125===O.componentType?f.indices=new o.Uint32Array(N,C,O.count):f.indices=new o.Uint16Array(N,C,O.count);var P=e.materials[h.material];P||(P=new u({shader:this.shaderLibrary.get(n.shaderName)}));var U=new c({geometry:f,material:P});P.shader.isTextureEnabled("normalMap")&&(U.geometry.attributes.tangent.value||U.geometry.generateTangents()),s.name&&(s.primitives.length>1?U.name=[s.name,l].join("-"):U.name=s.name),e.meshes[a].push(U)}}},_parseNodes:function(t,e){for(var n in t.nodes){var r,i=t.nodes[n];if(i.camera&&this.includeCamera){var a=t.cameras[i.camera];"perspective"===a.projection?r=new p({name:i.name,aspect:a.aspect_ratio,fov:a.xfov,far:a.zfar,near:a.znear}):(r=new v,console.warn("TODO:Orthographic camera")),r.setName(i.name),e.cameras[i.name]=r}else if(i.lights&&this.includeLight){for(var o=[],s=0;s<i.lights.length;s++){var u=t.lights[i.lights[s]],l=this._parseLight(u);l&&o.push(l)}if(1==o.length)r=o[0],r.setName(i.name);else{r=new h,r.setName(i.name);for(var s=0;s<o.length;s++)r.add(o[s])}}else if((i.meshes||i.instanceSkin)&&this.includeMesh){var c;if(c=i.meshes?i.meshes[0]:i.instanceSkin.sources[0]){var f=e.meshes[c];if(f)if(1===f.length)r=f[0],r.setName(i.name);else{r=new h,r.setName(i.name);for(var d=0;d<f.length;d++)i.instanceSkin&&(f[d].skeleton=i.instanceSkin.skin),r.add(f[d])}}}else r=new h,r.setName(i.name);i.matrix?(r.localTransform.setArray(i.matrix),r.decomposeLocalTransform()):(i.translation&&r.position.setArray(i.translation),i.rotation&&r.rotation.setArray(i.rotation),i.scale&&r.scale.setArray(i.scale)),e.nodes[n]=r}for(var n in t.nodes){var i=t.nodes[n],r=e.nodes[n];if(i.children)for(var s=0;s<i.children.length;s++){var _=i.children[s],m=e.nodes[_];r.add(m)}}},_parseLight:function(t){switch(t.type){case"point":var e=new g({name:t.id,color:t.point.color});break;case"spot":var e=new y({name:t.id,color:t.spot.color});break;case"directional":var e=new x({name:t.id,color:t.directional.color});break;default:console.warn("Light "+t.type+" not support yet")}return e},_parseAnimations:function(t,e){var n=e.clips={},r=C.create();for(var i in t.animations){var a=t.animations[i],s={};for(var u in a.parameters){var l=a.parameters[u],c=t.accessors[l],h=t.bufferViews[c.bufferView],f=e.buffers[h.buffer],d=h.byteOffset+c.byteOffset;switch(c.type){case 35664:var _=2;break;case 35665:var _=3;break;case 35666:var _=4;break;case 5126:var _=1}s[u]=new o.Float32Array(f,d,_*c.count)}if(s.TIME&&a.channels.length){var m=a.channels[0].target.id,p=e.nodes[m],v=s.rotation;if(v)for(var g=0;g<s.TIME.length;g++){var y=4*g;v&&(r[0]=v[y],r[1]=v[y+1],r[2]=v[y+2],C.setAxisAngle(r,r,v[y+3]),s.rotation[y]=r[0],s.rotation[y+1]=r[1],s.rotation[y+2]=r[2],s.rotation[y+3]=r[3])}for(var g=0;g<s.TIME.length;g++)s.TIME[g]*=1e3;n[m]=new b({name:m,target:p});var x=n[m];x.channels.time=s.TIME,x.channels.rotation=s.rotation||null,x.channels.position=s.translation||null,x.channels.scale=s.scale||null,x.life=s.TIME[s.TIME.length-1]}}return n}});t.exports=M},function(t,e,n){"use strict";var r=n(4),i=n(0),a=i.vec3,o=i.mat4,s=i.vec4,u=function(t,e){this.normal=t||new r(0,1,0),this.distance=e||0};u.prototype={constructor:u,distanceToPoint:function(t){return a.dot(t._array,this.normal._array)-this.distance},projectPoint:function(t,e){e||(e=new r);var n=this.distanceToPoint(t);return a.scaleAndAdd(e._array,t._array,this.normal._array,-n),e._dirty=!0,e},normalize:function(){var t=1/a.len(this.normal._array);a.scale(this.normal._array,t),this.distance*=t},intersectFrustum:function(t){for(var e=t.vertices,n=this.normal._array,r=a.dot(e[0]._array,n)>this.distance,i=1;i<8;i++)if(a.dot(e[i]._array,n)>this.distance!=r)return!0},intersectLine:function(){var t=a.create();return function(e,n,i){var o=this.distanceToPoint(e),s=this.distanceToPoint(n);if(o>0&&s>0||o<0&&s<0)return null;var u=this.normal._array,l=this.distance,c=e._array;a.sub(t,n._array,e._array),a.normalize(t,t);var h=a.dot(u,t);if(0===h)return null;i||(i=new r);var f=(a.dot(u,c)-l)/h;return a.scaleAndAdd(i._array,c,t,-f),i._dirty=!0,i}}(),applyTransform:function(){var t=o.create(),e=s.create(),n=s.create();return n[3]=1,function(r){r=r._array,a.scale(n,this.normal._array,this.distance),s.transformMat4(n,n,r),this.distance=a.dot(n,this.normal._array),o.invert(t,r),o.transpose(t,t),e[3]=0,a.copy(e,this.normal._array),s.transformMat4(e,e,t),a.copy(this.normal._array,e)}}(),copy:function(t){a.copy(this.normal._array,t.normal._array),this.normal._dirty=!0,this.distance=t.distance},clone:function(){var t=new u;return t.copy(this),t}},t.exports=u},function(t,e,n){"use strict";var r=n(4),i=n(0),a=i.vec3,o=function(t,e){this.origin=t||new r,this.direction=e||new r};o.prototype={constructor:o,intersectPlane:function(t,e){var n=t.normal._array,i=t.distance,o=this.origin._array,s=this.direction._array,u=a.dot(n,s);if(0===u)return null;e||(e=new r);var l=(a.dot(n,o)-i)/u;return a.scaleAndAdd(e._array,o,s,-l),e._dirty=!0,e},mirrorAgainstPlane:function(t){var e=a.dot(t.normal._array,this.direction._array);a.scaleAndAdd(this.direction._array,this.direction._array,t.normal._array,2*-e),this.direction._dirty=!0},distanceToPoint:function(){var t=a.create();return function(e){a.sub(t,e,this.origin._array);var n=a.dot(t,this.direction._array);if(n<0)return a.distance(this.origin._array,e);var r=a.lenSquared(t);return Math.sqrt(r-n*n)}}(),intersectSphere:function(){var t=a.create();return function(e,n,i){var o=this.origin._array,s=this.direction._array;e=e._array,a.sub(t,e,o);var u=a.dot(t,s),l=a.squaredLength(t),c=l-u*u,h=n*n;if(!(c>h)){var f=Math.sqrt(h-c),d=u-f,_=u+f;return i||(i=new r),d<0?_<0?null:(a.scaleAndAdd(i._array,o,s,_),i):(a.scaleAndAdd(i._array,o,s,d),i)}}}(),intersectBoundingBox:function(t,e){var n,i,o,s,u,l,c=this.direction._array,h=this.origin._array,f=t.min._array,d=t.max._array,_=1/c[0],m=1/c[1],p=1/c[2];if(_>=0?(n=(f[0]-h[0])*_,i=(d[0]-h[0])*_):(i=(f[0]-h[0])*_,n=(d[0]-h[0])*_),m>=0?(o=(f[1]-h[1])*m,s=(d[1]-h[1])*m):(s=(f[1]-h[1])*m,o=(d[1]-h[1])*m),n>s||o>i)return null;if((o>n||n!==n)&&(n=o),(s<i||i!==i)&&(i=s),p>=0?(u=(f[2]-h[2])*p,l=(d[2]-h[2])*p):(l=(f[2]-h[2])*p,u=(d[2]-h[2])*p),n>l||u>i)return null;if((u>n||n!==n)&&(n=u),(l<i||i!==i)&&(i=l),i<0)return null;var v=n>=0?n:i;return e||(e=new r),a.scaleAndAdd(e._array,h,c,v),e},intersectTriangle:function(){var t=a.create(),e=a.create(),n=a.create(),i=a.create();return function(o,s,u,l,c,h){var f=this.direction._array,d=this.origin._array;o=o._array,s=s._array,u=u._array,a.sub(t,s,o),a.sub(e,u,o),a.cross(i,e,f);var _=a.dot(t,i);if(l){if(_>-1e-5)return null}else if(_>-1e-5&&_<1e-5)return null;a.sub(n,d,o);var m=a.dot(i,n)/_;if(m<0||m>1)return null;a.cross(i,t,n);var p=a.dot(f,i)/_;if(p<0||p>1||m+p>1)return null;a.cross(i,t,e);var v=-a.dot(n,i)/_;return v<0?null:(c||(c=new r),h&&r.set(h,1-m-p,m,p),a.scaleAndAdd(c._array,d,f,v),c)}}(),applyTransform:function(t){r.add(this.direction,this.direction,this.origin),r.transformMat4(this.origin,this.origin,t),r.transformMat4(this.direction,this.direction,t),r.sub(this.direction,this.direction,this.origin),r.normalize(this.direction,this.direction)},copy:function(t){r.copy(this.origin,t.origin),r.copy(this.direction,t.direction)},clone:function(){var t=new o;return t.copy(this),t}},t.exports=o},function(t,e,n){"use strict";var r=n(0),i=r.vec4,a=function(t,e,n,r){t=t||0,e=e||0,n=n||0,r=r||0,this._array=i.fromValues(t,e,n,r),this._dirty=!0};a.prototype={constructor:a,add:function(t){return i.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e,n,r){return this._array[0]=t,this._array[1]=e,this._array[2]=n,this._array[3]=r,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._dirty=!0,this},clone:function(){return new a(this.x,this.y,this.z,this.w)},copy:function(t){return i.copy(this._array,t._array),this._dirty=!0,this},dist:function(t){return i.dist(this._array,t._array)},distance:function(t){return i.distance(this._array,t._array)},div:function(t){return i.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return i.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return i.dot(this._array,t._array)},len:function(){return i.len(this._array)},length:function(){return i.length(this._array)},lerp:function(t,e,n){return i.lerp(this._array,t._array,e._array,n),this._dirty=!0,this},min:function(t){return i.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return i.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return i.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return i.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return i.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return i.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return i.random(this._array,t),this._dirty=!0,this},scale:function(t){return i.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return i.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return i.sqrDist(this._array,t._array)},squaredDistance:function(t){return i.squaredDistance(this._array,t._array)},sqrLen:function(){return i.sqrLen(this._array)},squaredLength:function(){return i.squaredLength(this._array)},sub:function(t){return i.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return i.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return i.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},transformQuat:function(t){return i.transformQuat(this._array,this._array,t._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var o=Object.defineProperty;if(o){var s=a.prototype;o(s,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),o(s,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),o(s,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}}),o(s,"w",{get:function(){return this._array[3]},set:function(t){this._array[3]=t,this._dirty=!0}})}a.add=function(t,e,n){return i.add(t._array,e._array,n._array),t._dirty=!0,t},a.set=function(t,e,n,r,a){i.set(t._array,e,n,r,a),t._dirty=!0},a.copy=function(t,e){return i.copy(t._array,e._array),t._dirty=!0,t},a.dist=function(t,e){return i.distance(t._array,e._array)},a.distance=a.dist,a.div=function(t,e,n){return i.divide(t._array,e._array,n._array),t._dirty=!0,t},a.divide=a.div,a.dot=function(t,e){return i.dot(t._array,e._array)},a.len=function(t){return i.length(t._array)},a.lerp=function(t,e,n,r){return i.lerp(t._array,e._array,n._array,r),t._dirty=!0,t},a.min=function(t,e,n){return i.min(t._array,e._array,n._array),t._dirty=!0,t},a.max=function(t,e,n){return i.max(t._array,e._array,n._array),t._dirty=!0,t},a.mul=function(t,e,n){return i.multiply(t._array,e._array,n._array),t._dirty=!0,t},a.multiply=a.mul,a.negate=function(t,e){return i.negate(t._array,e._array),t._dirty=!0,t},a.normalize=function(t,e){return i.normalize(t._array,e._array),t._dirty=!0,t},a.random=function(t,e){return i.random(t._array,e),t._dirty=!0,t},a.scale=function(t,e,n){return i.scale(t._array,e._array,n),t._dirty=!0,t},a.scaleAndAdd=function(t,e,n,r){return i.scaleAndAdd(t._array,e._array,n._array,r),t._dirty=!0,t},a.sqrDist=function(t,e){return i.sqrDist(t._array,e._array)},a.squaredDistance=a.sqrDist,a.sqrLen=function(t){return i.sqrLen(t._array)},a.squaredLength=a.sqrLen,a.sub=function(t,e,n){return i.subtract(t._array,e._array,n._array),t._dirty=!0,t},a.subtract=a.sub,a.transformMat4=function(t,e,n){return i.transformMat4(t._array,e._array,n._array),t._dirty=!0,t},a.transformQuat=function(t,e,n){return i.transformQuat(t._array,e._array,n._array),t._dirty=!0,t},t.exports=a},function(t,e,n){var r=n(1),i=n(2),a=n(4),o=n(3),s=n(37),u=n(15),l=n(27),c=n(6),h=(n(10),n(14),n(36)),f=n(23),d=n(35),_=(n(19),n(11)),m=n(52),p=n(13),v=n(16),g=n(20),y=n(22),x=n(21),T=n(62),E=n(63),b=n(0),A=b.mat4,S=(b.vec3,["px","nx","py","ny","pz","nz"]);c.import(n(93));var N=r.extend(function(){return{softShadow:N.PCF,shadowBlur:1,lightFrustumBias:2,kernelPCF:new Float32Array([1,0,1,1,-1,1,0,1,-1,0,-1,-1,1,-1,0,-1]),precision:"mediump",_frameBuffer:new m,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_meshMaterials:{},_depthMaterials:{},_depthShaders:{},_distanceMaterials:{},_opaqueCasters:[],_receivers:[],_lightsCastShadow:[],_lightCameras:{},_texturePool:new E}},function(){this._gaussianPassH=new T({fragment:c.source("qtek.compositor.gaussian_blur")}),this._gaussianPassV=new T({fragment:c.source("qtek.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new T({fragment:c.source("qtek.sm.debug_depth")})},{render:function(t,e,n,r){this.trigger("beforerender",this,t,e,n),this._renderShadowPass(t,e,n,r),this.trigger("afterrender",this,t,e,n)},renderDebug:function(t,e){t.saveClear();var n=t.viewport,r=0,i=e||n.width/4,a=i;this.softShadow===N.VSM?this._outputDepthPass.material.shader.define("fragment","USE_VSM"):this._outputDepthPass.material.shader.undefine("fragment","USE_VSM");for(var o in this._textures){var s=this._textures[o];t.setViewport(r,0,i*s.width/s.height,a),this._outputDepthPass.setUniform("depthMap",s),this._outputDepthPass.render(t),r+=i*s.width/s.height}t.setViewport(n),t.restoreClear()},_bindDepthMaterial:function(t,e,n){for(var r=0;r<t.length;r++){var i,a,o=t[r],s=o.material.shadowTransparentMap instanceof v,u=o.material.shadowTransparentMap,l=o.joints&&o.joints.length;s?(i=l+"-"+u.__GUID__,a=l+"-t"):(i=l,a=l),o.useSkinMatricesTexture&&(i+="-s",a+="-s");var h=o.shadowDepthMaterial||this._depthMaterials[i],f=o.shadowDepthMaterial?o.shadowDepthMaterial.shader:this._depthShaders[a];o.material!==h&&(f||(f=new c({vertex:c.source("qtek.sm.depth.vertex"),fragment:c.source("qtek.sm.depth.fragment"),precision:this.precision}),l>0&&(f.define("vertex","SKINNING"),f.define("vertex","JOINT_COUNT",l)),s&&f.define("both","SHADOW_TRANSPARENT"),o.useSkinMatricesTexture&&f.define("vertex","USE_SKIN_MATRICES_TEXTURE"),this._depthShaders[a]=f),h||(h=new _({shader:f}),this._depthMaterials[i]=h),o.material=h,this.softShadow===N.VSM?f.define("fragment","USE_VSM"):f.undefine("fragment","USE_VSM"),h.setUniform("bias",e),h.setUniform("slopeScale",n),s&&h.set("shadowTransparentMap",u))}},_bindDistanceMaterial:function(t,e){for(var n=e.getWorldPosition()._array,r=0;r<t.length;r++){var i=t[r],a=i.joints&&i.joints.length,o=this._distanceMaterials[a];i.material!==o&&(o||(o=new _({shader:new c({vertex:c.source("qtek.sm.distance.vertex"),fragment:c.source("qtek.sm.distance.fragment"),precision:this.precision})}),a>0&&(o.shader.define("vertex","SKINNING"),o.shader.define("vertex","JOINT_COUNT",a)),this._distanceMaterials[a]=o),i.material=o,this.softShadow===N.VSM?o.shader.define("fragment","USE_VSM"):o.shader.undefine("fragment","USE_VSM")),o.set("lightPosition",n),o.set("range",e.range)}},saveMaterial:function(t){for(var e=0;e<t.length;e++){var n=t[e];this._meshMaterials[n.__GUID__]=n.material}},restoreMaterial:function(t){for(var e=0;e<t.length;e++){var n=t[e],r=this._meshMaterials[n.__GUID__];r&&(n.material=r)}},_updateCasterAndReceiver:function(t,e){e.castShadow&&this._opaqueCasters.push(e),e.receiveShadow?(this._receivers.push(e),e.material.set("shadowEnabled",1),e.material.set("pcfKernel",this.kernelPCF)):e.material.set("shadowEnabled",0),!e.material.shader&&e.material.updateShader&&e.material.updateShader(t.gl);var n=e.material.shader;if(this.softShadow===N.VSM)n.define("fragment","USE_VSM"),n.undefine("fragment","PCF_KERNEL_SIZE");else{n.undefine("fragment","USE_VSM");var r=this.kernelPCF;r&&r.length?n.define("fragment","PCF_KERNEL_SIZE",r.length/2):n.undefine("fragment","PCF_KERNEL_SIZE")}},_update:function(t,e){for(var n=0;n<e.opaqueQueue.length;n++)this._updateCasterAndReceiver(t,e.opaqueQueue[n]);for(var n=0;n<e.transparentQueue.length;n++)this._updateCasterAndReceiver(t,e.transparentQueue[n]);for(var n=0;n<e.lights.length;n++){var r=e.lights[n];r.castShadow&&this._lightsCastShadow.push(r)}},_renderShadowPass:function(t,e,n,r){function i(t){return t.height}for(var a in this._shadowMapNumber)this._shadowMapNumber[a]=0;this._lightsCastShadow.length=0,this._opaqueCasters.length=0,this._receivers.length=0;var o=t.gl;if(r||e.update(),this._update(t,e),this._lightsCastShadow.length){o.enable(o.DEPTH_TEST),o.depthMask(!0),o.disable(o.BLEND),o.clearColor(1,1,1,1);var s=[],u=[],l=[],c=[],_=[],m=[];this.saveMaterial(this._opaqueCasters);for(var p,v=0;v<this._lightsCastShadow.length;v++){var g=this._lightsCastShadow[v];if(g instanceof f){if(p){console.warn("Only one dire light supported with shadow cascade");continue}if(g.shadowCascade>1&&(p=g,g.shadowCascade>4)){console.warn("Support at most 4 cascade");continue}this.renderDirectionalLightShadow(t,e,n,g,this._opaqueCasters,_,c,l)}else g instanceof h?this.renderSpotLightShadow(t,g,this._opaqueCasters,u,s):g instanceof d&&this.renderPointLightShadow(t,g,this._opaqueCasters,m);this._shadowMapNumber[g.type]++}this.restoreMaterial(this._opaqueCasters);var y=_.slice(),x=_.slice();y.pop(),x.shift(),y.reverse(),x.reverse(),c.reverse();for(var T=s.map(i),E=l.map(i),b={},v=0;v<this._receivers.length;v++){var A=this._receivers[v],S=A.material,N=S.shader;if(!b[N.__GUID__]){var C=!1;for(var R in this._shadowMapNumber){var M=this._shadowMapNumber[R],w=R+"_SHADOWMAP_COUNT";N.fragmentDefines[w]!==M&&M>0&&(N.fragmentDefines[w]=M,C=!0)}C&&N.dirty(),p?N.define("fragment","SHADOW_CASCADE",p.shadowCascade):N.undefine("fragment","SHADOW_CASCADE"),b[N.__GUID__]=!0}s.length>0&&(S.setUniform("spotLightShadowMaps",s),S.setUniform("spotLightMatrices",u),S.setUniform("spotLightShadowMapSizes",T)),l.length>0&&(S.setUniform("directionalLightShadowMaps",l),p&&(S.setUniform("shadowCascadeClipsNear",y),S.setUniform("shadowCascadeClipsFar",x)),S.setUniform("directionalLightMatrices",c),S.setUniform("directionalLightShadowMapSizes",E)),m.length>0&&S.setUniform("pointLightShadowMaps",m)}}},renderDirectionalLightShadow:function(){var t=new s,e=new u,n=new o,r=new u,i=new u,a=new u,c=new u;return function(o,s,h,f,d,_,m,p){var v=f.shadowBias;this._bindDepthMaterial(d,v,f.shadowSlopeScale),d.sort(l.opaqueSortFunc);var g=Math.min(-s.viewBoundingBoxLastFrame.min.z,h.far),x=Math.max(-s.viewBoundingBoxLastFrame.max.z,h.near),T=this._getDirectionalLightCamera(f,s,h),E=a._array;c.copy(T.projectionMatrix),A.invert(i._array,T.worldTransform._array),A.multiply(i._array,i._array,h.worldTransform._array),A.multiply(E,c._array,i._array);for(var b=[],S=h instanceof y,C=(h.near+h.far)/(h.near-h.far),R=2*h.near*h.far/(h.near-h.far),M=0;M<=f.shadowCascade;M++){var w=x*Math.pow(g/x,M/f.shadowCascade),I=x+(g-x)*M/f.shadowCascade,D=w*f.cascadeSplitLogFactor+I*(1-f.cascadeSplitLogFactor);b.push(D),_.push(-(-D*C+R)/-D)}var L=this._getTexture(f,f.shadowCascade);p.push(L);var O=o.viewport,P=o.gl;this._frameBuffer.attach(L),this._frameBuffer.bind(o),P.clear(P.COLOR_BUFFER_BIT|P.DEPTH_BUFFER_BIT);for(var M=0;M<f.shadowCascade;M++){var U=b[M],F=b[M+1];S?A.perspective(e._array,h.fov/180*Math.PI,h.aspect,U,F):A.ortho(e._array,h.left,h.right,h.bottom,h.top,U,F),t.setFromProjection(e),t.getTransformedBoundingBox(n,i),n.applyProjection(c);var k=n.min._array,B=n.max._array;r.ortho(k[0],B[0],k[1],B[1],1,-1),T.projectionMatrix.multiplyLeft(r);var H=f.shadowResolution||512;o.setViewport((f.shadowCascade-M-1)*H,0,H,H,1);for(var W in this._depthMaterials)this._depthMaterials[W].set("shadowBias",v);o.renderQueue(d,T),this.softShadow===N.VSM&&this._gaussianFilter(o,L,L.width);var G=new u;G.copy(T.worldTransform).invert().multiplyLeft(T.projectionMatrix),m.push(G._array),T.projectionMatrix.copy(c)}this._frameBuffer.unbind(o),o.setViewport(O)}}(),renderSpotLightShadow:function(t,e,n,r,i){this._bindDepthMaterial(n,e.shadowBias,e.shadowSlopeScale),n.sort(l.opaqueSortFunc);var a=this._getTexture(e),o=this._getSpotLightCamera(e),s=t.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(t),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT),t.renderQueue(n,o),this._frameBuffer.unbind(t),this.softShadow===N.VSM&&this._gaussianFilter(t,a,a.width);var c=new u;c.copy(o.worldTransform).invert().multiplyLeft(o.projectionMatrix),i.push(a),r.push(c._array)},renderPointLightShadow:function(t,e,n,r){var i=this._getTexture(e),a=t.gl;r.push(i),this._bindDistanceMaterial(n,e);for(var o=0;o<6;o++){var s=S[o],u=this._getPointLightCamera(e,s);this._frameBuffer.attach(i,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(t),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),t.renderQueue(n,u)}this._frameBuffer.unbind(t)},_gaussianFilter:function(t,e,n){var r={width:n,height:n,type:p.FLOAT},i=(t.gl,this._texturePool.get(r));this._frameBuffer.attach(i),this._frameBuffer.bind(t),this._gaussianPassH.setUniform("texture",e),this._gaussianPassH.setUniform("textureWidth",n),this._gaussianPassH.render(t),this._frameBuffer.attach(e),this._gaussianPassV.setUniform("texture",i),this._gaussianPassV.setUniform("textureHeight",n),this._gaussianPassV.render(t),this._frameBuffer.unbind(t),this._texturePool.put(i)},_getTexture:function(t,e){var n=t.__GUID__,r=this._textures[n],a=t.shadowResolution||512;return e=e||1,r||(r=t instanceof d?new g:new v,r.width=a*e,r.height=a,this.softShadow===N.VSM?(r.type=p.FLOAT,r.anisotropic=4):(r.minFilter=i.NEAREST,r.magFilter=i.NEAREST,r.useMipmap=!1),this._textures[n]=r),r},_getPointLightCamera:function(t,e){this._lightCameras.point||(this._lightCameras.point={px:new y,nx:new y,py:new y,ny:new y,pz:new y,nz:new y});var n=this._lightCameras.point[e];switch(n.far=t.range,n.fov=90,n.position.set(0,0,0),e){case"px":n.lookAt(a.POSITIVE_X,a.NEGATIVE_Y);break;case"nx":n.lookAt(a.NEGATIVE_X,a.NEGATIVE_Y);break;case"py":n.lookAt(a.POSITIVE_Y,a.POSITIVE_Z);break;case"ny":n.lookAt(a.NEGATIVE_Y,a.NEGATIVE_Z);break;case"pz":n.lookAt(a.POSITIVE_Z,a.NEGATIVE_Y);break;case"nz":n.lookAt(a.NEGATIVE_Z,a.NEGATIVE_Y)}return t.getWorldPosition(n.position),n.update(),n},_getDirectionalLightCamera:function(){var t=new u,e=new o,n=new o;return function(r,i,a){this._lightCameras.directional||(this._lightCameras.directional=new x);var o=this._lightCameras.directional;e.copy(i.viewBoundingBoxLastFrame),e.intersection(a.frustum.boundingBox),o.position.copy(e.min).add(e.max).scale(.5).transformMat4(a.worldTransform),o.rotation.copy(r.rotation),o.scale.copy(r.scale),o.updateWorldTransform(),t.copy(o.worldTransform).invert().multiply(a.worldTransform),n.copy(e).applyTransform(t);var s=n.min._array,u=n.max._array;return o.position.scaleAndAdd(o.worldTransform.z,u[2]+this.lightFrustumBias),o.near=0,o.far=-s[2]+u[2]+this.lightFrustumBias,o.left=s[0]-this.lightFrustumBias,o.right=u[0]+this.lightFrustumBias,o.top=u[1]+this.lightFrustumBias,o.bottom=s[1]-this.lightFrustumBias,o.update(!0),o}}(),_getSpotLightCamera:function(t){this._lightCameras.spot||(this._lightCameras.spot=new y);var e=this._lightCameras.spot;return e.fov=2*t.penumbraAngle,e.far=t.range,e.worldTransform.copy(t.worldTransform),e.updateProjectionMatrix(),A.invert(e.viewMatrix._array,e.worldTransform._array),e},dispose:function(t){var e=t.gl||t;for(var n in this._depthMaterials){var r=this._depthMaterials[n];r.dispose(e)}for(var n in this._distanceMaterials){var r=this._distanceMaterials[n];r.dispose(e)}this._frameBuffer&&this._frameBuffer.dispose(e);for(var i in this._textures)this._textures[i].dispose(e);this._texturePool.clear(t.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var a=0;a<this._receivers.length;a++){var o=this._receivers[a];if(o.material&&o.material.shader){var s=o.material,u=s.shader;u.undefine("fragment","POINT_LIGHT_SHADOW_COUNT"),u.undefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),u.undefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),s.set("shadowEnabled",0)}}this._opaqueCasters=[],this._receivers=[],this._lightsCastShadow=[]}});N.VSM=1,N.PCF=2,t.exports=N},function(t,e,n){var r=n(19),i=n(6);i.import(n(40)),i.import(n(95)),i.import(n(74)),i.import(n(92)),i.import(n(42)),i.import(n(96)),i.import(n(94)),i.import(n(41)),r.template("qtek.basic",i.source("qtek.basic.vertex"),i.source("qtek.basic.fragment")),r.template("qtek.lambert",i.source("qtek.lambert.vertex"),i.source("qtek.lambert.fragment")),r.template("qtek.wireframe",i.source("qtek.wireframe.vertex"),i.source("qtek.wireframe.fragment")),r.template("qtek.skybox",i.source("qtek.skybox.vertex"),i.source("qtek.skybox.fragment")),r.template("qtek.prez",i.source("qtek.prez.vertex"),i.source("qtek.prez.fragment")),r.template("qtek.standard",i.source("qtek.standard.vertex"),i.source("qtek.standard.fragment")),i.import(n(78)),i.import(n(76)),i.import(n(85)),i.import(n(86)),i.import(n(90)),i.import(n(87)),i.import(n(77)),i.import(n(80)),i.import(n(88)),i.import(n(83)),i.import(n(79)),i.import(n(84)),i.import(n(75)),i.import(n(81)),i.import(n(82))},function(t,e){t.exports="@export qtek.basic.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\n\nattribute vec3 barycentric;\n\n@import qtek.chunk.skinning_header\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n vec3 skinnedPosition = position;\n\n#ifdef SKINNING\n @import qtek.chunk.skin_matrix\n\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n v_Barycentric = barycentric;\n\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n\n@end\n\n\n\n\n@export qtek.basic.fragment\n\n\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n@import qtek.util.edge_factor\n\n@import qtek.util.rgbm\n\n@import qtek.util.srgb\n\nvoid main()\n{\n\n#ifdef RENDER_TEXCOORD\n gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n return;\n#endif\n\n gl_FragColor = vec4(color, alpha);\n\n#ifdef DIFFUSEMAP_ENABLED\n vec4 tex = decodeHDR(texture2D(diffuseMap, v_Texcoord));\n\n#ifdef SRGB_DECODE\n tex = sRGBToLinear(tex);\n#endif\n\n#if defined(DIFFUSEMAP_ALPHA_ALPHA)\n gl_FragColor.a = tex.a;\n#endif\n\n gl_FragColor.rgb *= tex.rgb;\n#endif\n\n gl_FragColor.rgb += emission;\n if( lineWidth > 0.01)\n {\n gl_FragColor.rgb = gl_FragColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n }\n\n#ifdef GAMMA_ENCODE\n gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1 / 2.2));\n#endif\n\n#ifdef ALPHA_TEST\n if (gl_FragColor.a < alphaCutoff) {\n discard;\n }\n#endif\n\n gl_FragColor = encodeHDR(gl_FragColor);\n\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n\n gl_FragColor = encodeHDR(tex);\n}\n@end"},function(t,e){t.exports="@export qtek.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n\n@export qtek.compositor.kernel.gaussian_13\n\nfloat gaussianKernel[13];\n\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n\n@end\n\n\n@export qtek.compositor.gaussian_blur\n\nuniform sampler2D texture; varying vec2 v_Texcoord;\n\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\n\nvoid main (void)\n{\n @import qtek.compositor.kernel.gaussian_9\n\n vec2 off = blurSize / textureSize;\n off *= vec2(1.0 - blurDir, blurDir);\n\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n\n for (int i = 0; i < 9; i++) {\n float w = gaussianKernel[i];\n vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\n sum += texel * w;\n weightAll += w;\n }\n gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\n}\n\n@end\n"},function(t,e){t.exports="@export qtek.compositor.bright\n\nuniform sampler2D texture;\n\nuniform float threshold : 1;\nuniform float scale : 1.0;\n\nuniform vec2 textureSize: [512, 512];\n\nvarying vec2 v_Texcoord;\n\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n\n@import qtek.util.rgbm\n\n\nvec4 median(vec4 a, vec4 b, vec4 c)\n{\n return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\n\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n\n#ifdef ANTI_FLICKER\n vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n\n vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\n vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\n vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\n vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\n texel = median(median(texel, s1, s2), s3, s4);\n\n#endif\n\n float lum = dot(texel.rgb , lumWeight);\n vec4 color;\n if (lum > threshold && texel.a > 0.0)\n {\n color = vec4(texel.rgb * scale, texel.a * scale);\n }\n else\n {\n color = vec4(0.0);\n }\n\n gl_FragColor = encodeHDR(color);\n}\n@end\n"},function(t,e){t.exports="@export qtek.compositor.coloradjust\n\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n\n vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n float luminance = dot( color, w );\n color = mix(vec3(luminance), color, saturation);\n\n gl_FragColor = vec4(color, tex.a);\n}\n\n@end\n\n@export qtek.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float brightness : 0.0;\n\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = tex.rgb + vec3(brightness);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export qtek.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float contrast : 1.0;\n\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export qtek.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float exposure : 0.0;\n\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb * pow(2.0, exposure);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export qtek.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float gamma : 1.0;\n\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = pow(tex.rgb, vec3(gamma));\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export qtek.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float saturation : 1.0;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb;\n float luminance = dot(color, w);\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end"},function(t,e){t.exports="@export qtek.compositor.dof.coc\n\nuniform sampler2D depth;\n\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\n\nuniform float focalDist: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.encode_float\n\nvoid main()\n{\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n\n float aperture = focalLength / fstop;\n\n float coc;\n\n float uppper = focalDist + focalRange;\n float lower = focalDist - focalRange;\n if (dist <= uppper && dist >= lower) {\n coc = 0.5;\n }\n else {\n float focalAdjusted = dist > uppper ? uppper : lower;\n\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n coc = clamp(coc, 0.0, 0.4) / 0.4000001;\n\n if (dist < lower) {\n coc = -coc;\n }\n coc = coc * 0.5 + 0.5;\n }\n\n gl_FragColor = encodeFloat(coc);\n}\n\n@end\n\n@export qtek.compositor.dof.premultiply\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\n@import qtek.util.decode_float\n\nvoid main() {\n float fCoc = max(abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0), 0.1);\n gl_FragColor = encodeHDR(\n vec4(decodeHDR(texture2D(texture, v_Texcoord)).rgb * fCoc, 1.0)\n );\n}\n@end\n\n\n@export qtek.compositor.dof.min_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.float\n\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n\n gl_FragColor = encodeFloat(fCoc);\n}\n\n@end\n\n\n@export qtek.compositor.dof.max_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.float\n\nvoid main()\n{\n\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n\n gl_FragColor = encodeFloat(fCoc);\n}\n\n@end\n\n\n\n\n@export qtek.compositor.dof.coc_upsample\n\n#define HIGH_QUALITY\n\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\n\nuniform float sampleScale: 0.5;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.float\n\nvoid main()\n{\n\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n\n float s;\n s = decodeFloat(texture2D(coc, v_Texcoord - d.xy));\n s += decodeFloat(texture2D(coc, v_Texcoord - d.wy)) * 2.0;\n s += decodeFloat(texture2D(coc, v_Texcoord - d.zy));\n\n s += decodeFloat(texture2D(coc, v_Texcoord + d.zw)) * 2.0;\n s += decodeFloat(texture2D(coc, v_Texcoord )) * 4.0;\n s += decodeFloat(texture2D(coc, v_Texcoord + d.xw)) * 2.0;\n\n s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.wy)) * 2.0;\n s += decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n\n gl_FragColor = encodeFloat(s / 16.0);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n\n float s;\n s = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.xw));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.zw));\n\n gl_FragColor = encodeFloat(s / 4.0);\n#endif\n}\n\n@end\n\n\n\n@export qtek.compositor.dof.upsample\n\n#define HIGH_QUALITY\n\nuniform sampler2D coc;\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\n\nuniform float sampleScale: 0.5;\n\nvarying vec2 v_Texcoord;\n\n\n@import qtek.util.rgbm\n\n@import qtek.util.decode_float\n\nfloat tap(vec2 uv, inout vec4 color, float baseWeight) {\n float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * baseWeight;\n color += decodeHDR(texture2D(texture, uv)) * weight;\n return weight;\n}\n\nvoid main()\n{\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n\n vec4 color = vec4(0.0);\n float baseWeight = 1.0 / 16.0;\n float w = tap(v_Texcoord - d.xy, color, baseWeight);\n w += tap(v_Texcoord - d.wy, color, baseWeight * 2.0);\n w += tap(v_Texcoord - d.zy, color, baseWeight);\n\n w += tap(v_Texcoord + d.zw, color, baseWeight * 2.0);\n w += tap(v_Texcoord , color, baseWeight * 4.0);\n w += tap(v_Texcoord + d.xw, color, baseWeight * 2.0);\n\n w += tap(v_Texcoord + d.zy, color, baseWeight);\n w += tap(v_Texcoord + d.wy, color, baseWeight * 2.0);\n w += tap(v_Texcoord + d.xy, color, baseWeight);\n\n gl_FragColor = encodeHDR(color / w);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n\n vec4 color = vec4(0.0);\n float baseWeight = 1.0 / 4.0;\n float w = tap(v_Texcoord + d.xy, color, baseWeight);\n w += tap(v_Texcoord + d.zy, color, baseWeight);\n w += tap(v_Texcoord + d.xw, color, baseWeight);\n w += tap(v_Texcoord + d.zw, color, baseWeight);\n\n gl_FragColor = encodeHDR(color / w);\n#endif\n}\n\n@end\n\n\n\n@export qtek.compositor.dof.downsample\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\n@import qtek.util.decode_float\n\nfloat tap(vec2 uv, inout vec4 color) {\n float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * 0.25;\n color += decodeHDR(texture2D(texture, uv)) * weight;\n return weight;\n}\n\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n\n vec4 color = vec4(0.0);\n float weight = tap(v_Texcoord + d.xy, color);\n weight += tap(v_Texcoord + d.zy, color);\n weight += tap(v_Texcoord + d.xw, color);\n weight += tap(v_Texcoord + d.zw, color);\n color /= weight;\n\n gl_FragColor = encodeHDR(color);\n}\n\n@end\n\n\n\n@export qtek.compositor.dof.hexagonal_blur_frag\n\n@import qtek.util.float\n\n\nvec4 doBlur(sampler2D targetTexture, vec2 offset) {\n#ifdef BLUR_COC\n float cocSum = 0.0;\n#else\n vec4 color = vec4(0.0);\n#endif\n\n float weightSum = 0.0;\n float kernelWeight = 1.0 / float(KERNEL_SIZE);\n\n for (int i = 0; i < KERNEL_SIZE; i++) {\n vec2 coord = v_Texcoord + offset * float(i);\n\n float w = kernelWeight;\n#ifdef BLUR_COC\n float fCoc = decodeFloat(texture2D(targetTexture, coord)) * 2.0 - 1.0;\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n float fCoc = decodeFloat(texture2D(coc, coord)) * 2.0 - 1.0;\n vec4 texel = texture2D(targetTexture, coord);\n #if !defined(BLUR_NEARFIELD)\n w *= abs(fCoc);\n #endif\n color += decodeHDR(texel) * w;\n#endif\n\n weightSum += w;\n }\n#ifdef BLUR_COC\n return encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n return color / weightSum;\n#endif\n}\n\n@end\n\n\n@export qtek.compositor.dof.hexagonal_blur_1\n\n#define KERNEL_SIZE 5\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.rgbm\n\n@import qtek.compositor.dof.hexagonal_blur_frag\n\nvoid main()\n{\n vec2 offset = blurSize / textureSize;\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n gl_FragColor = doBlur(texture, vec2(0.0, offset.y));\n#if !defined(BLUR_COC)\n gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n\n@end\n\n@export qtek.compositor.dof.hexagonal_blur_2\n\n#define KERNEL_SIZE 5\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.rgbm\n\n@import qtek.compositor.dof.hexagonal_blur_frag\n\nvoid main()\n{\n vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n offset.y /= 2.0;\n\n gl_FragColor = doBlur(texture, -offset);\n#if !defined(BLUR_COC)\n gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n\n@export qtek.compositor.dof.hexagonal_blur_3\n\n#define KERNEL_SIZE 5\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D coc;\n\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\n@import qtek.util.rgbm\n\n@import qtek.compositor.dof.hexagonal_blur_frag\n\nvoid main()\n{\n vec2 offset = blurSize / textureSize;\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n offset.y /= 2.0;\n vec2 vDownRight = vec2(offset.x, -offset.y);\n\n vec4 texel1 = doBlur(texture1, -offset);\n vec4 texel2 = doBlur(texture1, vDownRight);\n vec4 texel3 = doBlur(texture2, vDownRight);\n\n#ifdef BLUR_COC\n float coc1 = decodeFloat(texel1) * 2.0 - 1.0;\n float coc2 = decodeFloat(texel2) * 2.0 - 1.0;\n float coc3 = decodeFloat(texel3) * 2.0 - 1.0;\n gl_FragColor = encodeFloat(\n ((coc1 + coc2 + coc3) / 3.0) * 0.5 + 0.5\n );\n\n#else\n vec4 color = (texel1 + texel2 + texel3) / 3.0;\n gl_FragColor = encodeHDR(color);\n#endif\n}\n\n@end\n\n@export qtek.compositor.dof.composite\n\n#define DEBUG 0\n\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n@import qtek.util.float\n\nvoid main()\n{\n vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n\n fCoc = abs(fCoc * 2.0 - 1.0);\n\n float weight = smoothstep(0.0, 1.0, fCoc);\n \n#ifdef NEARFIELD_ENABLED\n vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n\n gl_FragColor = encodeHDR(\n mix(\n nearfieldColor, mix(originalColor, blurredColor, weight),\n pow(1.0 - fNearCoc, 4.0)\n )\n );\n#else\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n\n#if DEBUG == 1\n gl_FragColor = vec4(vec3(fCoc), 1.0);\n#elif DEBUG == 2\n gl_FragColor = vec4(vec3(fNearCoc), 1.0);\n#elif DEBUG == 3\n gl_FragColor = encodeHDR(blurredColor);\n#elif DEBUG == 4\n gl_FragColor = encodeHDR(nearfieldColor);\n#endif\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.downsample\n\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\nfloat brightness(vec3 c)\n{\n return max(max(c.r, c.g), c.b);\n}\n\n@import qtek.util.clamp_sample\n\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n\n#ifdef ANTI_FLICKER\n vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n\n float s1w = 1.0 / (brightness(s1) + 1.0);\n float s2w = 1.0 / (brightness(s2) + 1.0);\n float s3w = 1.0 / (brightness(s3) + 1.0);\n float s4w = 1.0 / (brightness(s4) + 1.0);\n float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n\n vec4 color = vec4(\n (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n 1.0\n );\n#else\n vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n color *= 0.25;\n#endif\n\n gl_FragColor = encodeHDR(color);\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.fxaa\n\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\n\nvarying vec2 v_Texcoord;\n\n#define FXAA_REDUCE_MIN (1.0/128.0)\n#define FXAA_REDUCE_MUL (1.0/8.0)\n#define FXAA_SPAN_MAX 8.0\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec2 resolution = 1.0 / viewport.zw;\n vec3 rgbNW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n vec4 rgbaM = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution ) );\n vec3 rgbM = rgbaM.xyz;\n float opacity = rgbaM.w;\n\n vec3 luma = vec3( 0.299, 0.587, 0.114 );\n\n float lumaNW = dot( rgbNW, luma );\n float lumaNE = dot( rgbNE, luma );\n float lumaSW = dot( rgbSW, luma );\n float lumaSE = dot( rgbSE, luma );\n float lumaM = dot( rgbM, luma );\n float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n\n vec2 dir;\n dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n\n float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n dir * rcpDirMin)) * resolution;\n\n vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA *= 0.5;\n\n vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * -0.5 ) ).xyz;\n rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * 0.5 ) ).xyz;\n rgbB *= 0.25;\n rgbB += rgbA * 0.5;\n\n float lumaB = dot( rgbB, luma );\n\n if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n {\n gl_FragColor = vec4( rgbA, opacity );\n\n }\n else {\n\n gl_FragColor = vec4( rgbB, opacity );\n\n }\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.fxaa3\n\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\n\nuniform float subpixel: 0.75;\nuniform float edgeThreshold: 0.125;\nuniform float edgeThresholdMin: 0.0625;\n\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\nfloat FxaaLuma(vec4 rgba) { return rgba.y; }\nvec4 FxaaPixelShader(\n vec2 pos\n ,sampler2D tex\n ,vec2 fxaaQualityRcpFrame\n ,float fxaaQualitySubpix\n ,float fxaaQualityEdgeThreshold\n ,float fxaaQualityEdgeThresholdMin\n) {\n vec2 posM;\n posM.x = pos.x;\n posM.y = pos.y;\n vec4 rgbyM = decodeHDR(texture2D(texture, posM, 0.0));\n float lumaS = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 0.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n float lumaE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0, 0.0) * fxaaQualityRcpFrame.xy), 0.0)));\n float lumaN = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 0.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n float lumaW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0, 0.0) * fxaaQualityRcpFrame.xy), 0.0)));\n\n float maxSM = max(lumaS, rgbyM.y);\n float minSM = min(lumaS, rgbyM.y);\n float maxESM = max(lumaE, maxSM);\n float minESM = min(lumaE, minSM);\n float maxWN = max(lumaN, lumaW);\n float minWN = min(lumaN, lumaW);\n float rangeMax = max(maxWN, maxESM);\n float rangeMin = min(minWN, minESM);\n float rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\n float range = rangeMax - rangeMin;\n float rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\n bool earlyExit = range < rangeMaxClamped;\n if(earlyExit) return rgbyM;\n float lumaNW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n float lumaSE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n float lumaNE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n float lumaSW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n\n float lumaNS = lumaN + lumaS;\n float lumaWE = lumaW + lumaE;\n float subpixRcpRange = 1.0/range;\n float subpixNSWE = lumaNS + lumaWE;\n float edgeHorz1 = (-2.0 * rgbyM.y) + lumaNS;\n float edgeVert1 = (-2.0 * rgbyM.y) + lumaWE;\n float lumaNESE = lumaNE + lumaSE;\n float lumaNWNE = lumaNW + lumaNE;\n float edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\n float edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\n float lumaNWSW = lumaNW + lumaSW;\n float lumaSWSE = lumaSW + lumaSE;\n float edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\n float edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\n float edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\n float edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\n float edgeHorz = abs(edgeHorz3) + edgeHorz4;\n float edgeVert = abs(edgeVert3) + edgeVert4;\n float subpixNWSWNESE = lumaNWSW + lumaNESE;\n float lengthSign = fxaaQualityRcpFrame.x;\n bool horzSpan = edgeHorz >= edgeVert;\n float subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\n if(!horzSpan) lumaN = lumaW;\n if(!horzSpan) lumaS = lumaE;\n if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\n float subpixB = (subpixA * (1.0/12.0)) - rgbyM.y;\n float gradientN = lumaN - rgbyM.y;\n float gradientS = lumaS - rgbyM.y;\n float lumaNN = lumaN + rgbyM.y;\n float lumaSS = lumaS + rgbyM.y;\n bool pairN = abs(gradientN) >= abs(gradientS);\n float gradient = max(abs(gradientN), abs(gradientS));\n if(pairN) lengthSign = -lengthSign;\n float subpixC = clamp(abs(subpixB) * subpixRcpRange, 0.0, 1.0);\n vec2 posB;\n posB.x = posM.x;\n posB.y = posM.y;\n vec2 offNP;\n offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\n offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\n if(!horzSpan) posB.x += lengthSign * 0.5;\n if( horzSpan) posB.y += lengthSign * 0.5;\n vec2 posN;\n posN.x = posB.x - offNP.x * 1.0;\n posN.y = posB.y - offNP.y * 1.0;\n vec2 posP;\n posP.x = posB.x + offNP.x * 1.0;\n posP.y = posB.y + offNP.y * 1.0;\n float subpixD = ((-2.0)*subpixC) + 3.0;\n float lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN, 0.0)));\n float subpixE = subpixC * subpixC;\n float lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP, 0.0)));\n if(!pairN) lumaNN = lumaSS;\n float gradientScaled = gradient * 1.0/4.0;\n float lumaMM = rgbyM.y - lumaNN * 0.5;\n float subpixF = subpixD * subpixE;\n bool lumaMLTZero = lumaMM < 0.0;\n lumaEndN -= lumaNN * 0.5;\n lumaEndP -= lumaNN * 0.5;\n bool doneN = abs(lumaEndN) >= gradientScaled;\n bool doneP = abs(lumaEndP) >= gradientScaled;\n if(!doneN) posN.x -= offNP.x * 1.5;\n if(!doneN) posN.y -= offNP.y * 1.5;\n bool doneNP = (!doneN) || (!doneP);\n if(!doneP) posP.x += offNP.x * 1.5;\n if(!doneP) posP.y += offNP.y * 1.5;\n if(doneNP) {\n if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n doneN = abs(lumaEndN) >= gradientScaled;\n doneP = abs(lumaEndP) >= gradientScaled;\n if(!doneN) posN.x -= offNP.x * 2.0;\n if(!doneN) posN.y -= offNP.y * 2.0;\n doneNP = (!doneN) || (!doneP);\n if(!doneP) posP.x += offNP.x * 2.0;\n if(!doneP) posP.y += offNP.y * 2.0;\n\n if(doneNP) {\n if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n doneN = abs(lumaEndN) >= gradientScaled;\n doneP = abs(lumaEndP) >= gradientScaled;\n if(!doneN) posN.x -= offNP.x * 4.0;\n if(!doneN) posN.y -= offNP.y * 4.0;\n doneNP = (!doneN) || (!doneP);\n if(!doneP) posP.x += offNP.x * 4.0;\n if(!doneP) posP.y += offNP.y * 4.0;\n\n if(doneNP) {\n if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n doneN = abs(lumaEndN) >= gradientScaled;\n doneP = abs(lumaEndP) >= gradientScaled;\n if(!doneN) posN.x -= offNP.x * 12.0;\n if(!doneN) posN.y -= offNP.y * 12.0;\n doneNP = (!doneN) || (!doneP);\n if(!doneP) posP.x += offNP.x * 12.0;\n if(!doneP) posP.y += offNP.y * 12.0;\n }\n }\n }\n float dstN = posM.x - posN.x;\n float dstP = posP.x - posM.x;\n if(!horzSpan) dstN = posM.y - posN.y;\n if(!horzSpan) dstP = posP.y - posM.y;\n bool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\n float spanLength = (dstP + dstN);\n bool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\n float spanLengthRcp = 1.0/spanLength;\n bool directionN = dstN < dstP;\n float dst = min(dstN, dstP);\n bool goodSpan = directionN ? goodSpanN : goodSpanP;\n float subpixG = subpixF * subpixF;\n float pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\n float subpixH = subpixG * fxaaQualitySubpix;\n float pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\n float pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\n if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\n if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\n return vec4(decodeHDR(texture2D(texture, posM, 0.0)).xyz, rgbyM.y);\n\n}\n\nvoid main()\n{\n vec4 color = FxaaPixelShader(\n v_Texcoord,\n texture,\n vec2(1.0) / viewport.zw,\n subpixel,\n edgeThreshold,\n edgeThresholdMin\n );\n gl_FragColor = vec4(color.rgb, 1.0);\n}\n@end"},function(t,e){t.exports="@export qtek.compositor.hdr.composite\n\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n\n#ifdef COLOR_CORRECTION\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float saturation : 1.0;\n#endif\n\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\n\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\n\nvarying vec2 v_Texcoord;\n\n\n@import qtek.util.srgb\n\n\n\n\nvec3 ACESToneMapping(vec3 color)\n{\n const float A = 2.51;\n const float B = 0.03;\n const float C = 2.43;\n const float D = 0.59;\n const float E = 0.14;\n return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n\nfloat eyeAdaption(float fLum)\n{\n return mix(0.2, fLum, 0.5);\n}\n\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n float blueColor = color.b * 63.0;\n\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n\n vec4 newColor1 = texture2D(lut, texPos1);\n vec4 newColor2 = texture2D(lut, texPos2);\n\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n return newColor.rgb;\n}\n#endif\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec4 texel = vec4(0.0);\n vec4 originalTexel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n texel = decodeHDR(texture2D(texture, v_Texcoord));\n originalTexel = texel;\n#endif\n\n#ifdef BLOOM_ENABLED\n vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\n texel.rgb += bloomTexel.rgb * bloomIntensity;\n texel.a += bloomTexel.a * bloomIntensity;\n#endif\n\n#ifdef LENSFLARE_ENABLED\n texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n\n texel.a = min(texel.a, 1.0);\n\n#ifdef LUM_ENABLED\n float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n float exposureBias = adaptedLumDest * exposure;\n#else\n float exposureBias = exposure;\n#endif\n texel.rgb *= exposureBias;\n\n texel.rgb = ACESToneMapping(texel.rgb);\n texel = linearTosRGB(texel);\n\n#ifdef LUT_ENABLED\n texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n\n#ifdef COLOR_CORRECTION\n texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\n texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\n texel.rgb = mix(vec3(lum), texel.rgb, saturation);\n#endif\n\n#ifdef VIGNETTE\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n\n gl_FragColor = encodeHDR(texel);\n\n#ifdef DEBUG\n #if DEBUG == 1\n gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n #elif DEBUG == 2\n gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\n #elif DEBUG == 3\n gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\n #endif\n#endif\n\n if (originalTexel.a <= 0.01) {\n gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\n }\n #ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.lensflare\n\n#define SAMPLE_NUMBER 8\n\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\n\nuniform vec2 textureSize : [512, 512];\n\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\nvec4 textureDistorted(\n in vec2 texcoord,\n in vec2 direction,\n in vec3 distortion\n) {\n return vec4(\n decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n 1.0\n );\n}\n\nvoid main()\n{\n vec2 texcoord = -v_Texcoord + vec2(1.0); vec2 textureOffset = 1.0 / textureSize;\n\n vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n vec2 haloVec = normalize(ghostVec) * haloWidth;\n\n vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n vec4 result = vec4(0.0);\n for (int i = 0; i < SAMPLE_NUMBER; i++)\n {\n vec2 offset = fract(texcoord + ghostVec * float(i));\n\n float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n }\n\n result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n vec2 offset = fract(texcoord + haloVec);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n\n gl_FragColor = result;\n}\n@end"},function(t,e){t.exports="@export qtek.compositor.hdr.log_lum\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n float luminance = dot(tex.rgb, w);\n luminance = log(luminance + 0.001);\n\n gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n\n@end\n\n@export qtek.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\n\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\n\nuniform float frameTime : 0.02;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n\n fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n\n@export qtek.compositor.lum\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord );\n float luminance = dot(tex.rgb, w);\n\n gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n\n@end"},function(t,e){t.exports="\n@export qtek.compositor.lut\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\nuniform sampler2D lookup;\n\nvoid main()\n{\n\n vec4 tex = texture2D(texture, v_Texcoord);\n\n float blueColor = tex.b * 63.0;\n\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n\n vec4 newColor1 = texture2D(lookup, texPos1);\n vec4 newColor2 = texture2D(lookup, texPos2);\n\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.output\n\n#define OUTPUT_ALPHA\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n\n gl_FragColor.rgb = tex.rgb;\n\n#ifdef OUTPUT_ALPHA\n gl_FragColor.a = tex.a;\n#else\n gl_FragColor.a = 1.0;\n#endif\n\n gl_FragColor = encodeHDR(gl_FragColor);\n\n #ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n\n@end"},function(t,e){t.exports="\n@export qtek.compositor.upsample\n\n#define HIGH_QUALITY\n\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\n\nuniform float sampleScale: 0.5;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n\n@import qtek.util.clamp_sample\n\nvoid main()\n{\n\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord )) * 4.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n\n gl_FragColor = encodeHDR(s / 16.0);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n\n gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n\n@end"},function(t,e){t.exports="\n@export qtek.compositor.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n v_Texcoord = texcoord;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end"},function(t,e){t.exports="@export qtek.compositor.vignette\n\n#define OUTPUT_ALPHA\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nuniform float darkness: 1;\nuniform float offset: 1;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n\n gl_FragColor.rgb = texel.rgb;\n\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\n\n gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\n}\n\n@end"},function(t,e){t.exports="vec3 calcAmbientSHLight(int idx, vec3 N) {\n int offset = 9 * idx;\n\n return ambientSHLightCoefficients[0]\n + ambientSHLightCoefficients[1] * N.x\n + ambientSHLightCoefficients[2] * N.y\n + ambientSHLightCoefficients[3] * N.z\n + ambientSHLightCoefficients[4] * N.x * N.z\n + ambientSHLightCoefficients[5] * N.z * N.y\n + ambientSHLightCoefficients[6] * N.y * N.x\n + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}"},function(t,e){t.exports="/**\n * http: */\n\n@export qtek.lambert.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n\nattribute vec3 barycentric;\n\n@import qtek.chunk.skinning_header\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n\n vec3 skinnedPosition = position;\n vec3 skinnedNormal = normal;\n\n#ifdef SKINNING\n\n @import qtek.chunk.skin_matrix\n\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n#endif\n\n gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n v_Normal = normalize( ( worldInverseTranspose * vec4(skinnedNormal, 0.0) ).xyz );\n v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n\n v_Barycentric = barycentric;\n}\n\n@end\n\n\n@export qtek.lambert.fragment\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform sampler2D diffuseMap;\nuniform sampler2D alphaMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import qtek.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import qtek.header.spot_light\n#endif\n\n@import qtek.util.calculate_attenuation\n\n@import qtek.util.edge_factor\n\n@import qtek.util.rgbm\n\n@import qtek.plugin.compute_shadow_map\n\nvoid main()\n{\n#ifdef RENDER_NORMAL\n gl_FragColor = vec4(v_Normal * 0.5 + 0.5, 1.0);\n return;\n#endif\n#ifdef RENDER_TEXCOORD\n gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n return;\n#endif\n\n gl_FragColor = vec4(color, alpha);\n\n#ifdef DIFFUSEMAP_ENABLED\n vec4 tex = texture2D( diffuseMap, v_Texcoord );\n#ifdef SRGB_DECODE\n tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n gl_FragColor.rgb *= tex.rgb;\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\n gl_FragColor.a *= tex.a;\n#endif\n#endif\n\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {\n diffuseColor += ambientLightColor[_idx_];\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\n }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsPoint[POINT_LIGHT_COUNT];\n if( shadowEnabled )\n {\n computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n }\n#endif\n for(int i = 0; i < POINT_LIGHT_COUNT; i++)\n {\n\n vec3 lightPosition = pointLightPosition[i];\n vec3 lightColor = pointLightColor[i];\n float range = pointLightRange[i];\n\n vec3 lightDirection = lightPosition - v_WorldPosition;\n\n float dist = length(lightDirection);\n float attenuation = lightAttenuation(dist, range);\n\n lightDirection /= dist;\n\n float ndl = dot( v_Normal, lightDirection );\n\n float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsPoint[i];\n }\n#endif\n\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowContrib;\n }\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n vec3 lightColor = directionalLightColor[i];\n\n float ndl = dot(v_Normal, normalize(lightDirection));\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n }\n#endif\n\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsSpot[SPOT_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n }\n#endif\n for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n {\n vec3 lightPosition = -spotLightPosition[i];\n vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n vec3 lightColor = spotLightColor[i];\n float range = spotLightRange[i];\n float a = spotLightUmbraAngleCosine[i];\n float b = spotLightPenumbraAngleCosine[i];\n float falloffFactor = spotLightFalloffFactor[i];\n\n vec3 lightDirection = lightPosition - v_WorldPosition;\n float dist = length(lightDirection);\n float attenuation = lightAttenuation(dist, range);\n\n lightDirection /= dist;\n float c = dot(spotLightDirection, lightDirection);\n\n float falloff;\n falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n falloff = pow(falloff, falloffFactor);\n\n float ndl = dot(v_Normal, lightDirection);\n ndl = clamp(ndl, 0.0, 1.0);\n\n float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsSpot[i];\n }\n#endif\n diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n }\n#endif\n\n gl_FragColor.rgb *= diffuseColor;\n gl_FragColor.rgb += emission;\n if(lineWidth > 0.01)\n {\n gl_FragColor.rgb = gl_FragColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n }\n\n#ifdef ALPHA_TEST\n if (gl_FragColor.a < alphaCutoff) {\n discard;\n }\n#endif\n\n gl_FragColor = encodeHDR(gl_FragColor);\n}\n\n@end"},function(t,e){t.exports="@export qtek.sm.depth.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\n#ifdef SHADOW_TRANSPARENT\nattribute vec2 texcoord : TEXCOORD_0;\n#endif\n\n@import qtek.chunk.skinning_header\n\nvarying vec4 v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\n\nvoid main(){\n\n vec3 skinnedPosition = position;\n\n#ifdef SKINNING\n\n @import qtek.chunk.skin_matrix\n\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n gl_Position = v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\n v_Texcoord = texcoord;\n#endif\n}\n@end\n\n@export qtek.sm.depth.fragment\n\nvarying vec4 v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\n\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\n\n#ifdef SHADOW_TRANSPARENT\nuniform sampler2D transparentMap;\n#endif\n\n@import qtek.util.encode_float\n\nvoid main(){\n float depth = v_ViewPosition.z / v_ViewPosition.w;\n \n#ifdef USE_VSM\n depth = depth * 0.5 + 0.5;\n float moment1 = depth;\n float moment2 = depth * depth;\n\n float dx = dFdx(depth);\n float dy = dFdy(depth);\n moment2 += 0.25*(dx*dx+dy*dy);\n\n gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n float dx = dFdx(depth);\n float dy = dFdy(depth);\n depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n\n#ifdef SHADOW_TRANSPARENT\n if (texture2D(transparentMap, v_Texcoord).a <= 0.1) {\n gl_FragColor = encodeFloat(0.9999);\n return;\n }\n#endif\n\n gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n\n@export qtek.sm.debug_depth\n\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n\n@import qtek.util.decode_float\n\nvoid main() {\n vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n float depth = decodeFloat(tex);\n gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n\n@end\n\n\n@export qtek.sm.distance.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\n\n@import qtek.chunk.skinning_header\n\nvarying vec3 v_WorldPosition;\n\nvoid main (){\n\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n @import qtek.chunk.skin_matrix\n\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n\n@end\n\n@export qtek.sm.distance.fragment\n\nuniform vec3 lightPosition;\nuniform float range : 100;\n\nvarying vec3 v_WorldPosition;\n\n@import qtek.util.encode_float\n\nvoid main(){\n float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n dist = dist / range;\n gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n\n@export qtek.plugin.shadow_map_common\n\n@import qtek.util.decode_float\n\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n vec4 tex = texture2D(map, uv);\n return step(z, decodeFloat(tex) * 2.0 - 1.0);\n}\n\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\n\n float shadowContrib = tapShadowMap(map, uv, z);\n vec2 offset = vec2(1.0 / textureSize) * scale;\n#ifdef PCF_KERNEL_SIZE\n for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\n shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\n }}\n\n return shadowContrib / float(PCF_KERNEL_SIZE + 1);\n#else\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\n\n return shadowContrib / 9.0;\n#endif\n}\n\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\n return pcf(map, uv, z, textureSize, vec2(1.0));\n}\n\nfloat chebyshevUpperBound(vec2 moments, float z){\n float p = 0.0;\n z = z * 0.5 + 0.5;\n if (z <= moments.x) {\n p = 1.0;\n }\n float variance = moments.y - moments.x * moments.x;\n variance = max(variance, 0.0000001);\n float mD = moments.x - z;\n float pMax = variance / (variance + mD * mD);\n pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n return max(p, pMax);\n}\nfloat computeShadowContrib(\n sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\n) {\n\n vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\n posInLightSpace.xyz /= posInLightSpace.w;\n float z = posInLightSpace.z;\n if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n\n #ifdef USE_VSM\n vec2 moments = texture2D(map, uv * scale + offset).xy;\n return chebyshevUpperBound(moments, z);\n #else\n return pcf(map, uv * scale + offset, z, textureSize, scale);\n #endif\n }\n return 1.0;\n}\n\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\n return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\n}\n\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\n{\n float dist = length(direction);\n vec4 shadowTex = textureCube(map, direction);\n\n#ifdef USE_VSM\n vec2 moments = shadowTex.xy;\n float variance = moments.y - moments.x * moments.x;\n float mD = moments.x - dist;\n float p = variance / (variance + mD * mD);\n if(moments.x + 0.001 < dist){\n return clamp(p, 0.0, 1.0);\n }else{\n return 1.0;\n }\n#else\n return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\n#endif\n}\n\n@end\n\n\n\n@export qtek.plugin.compute_shadow_map\n\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\n\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT];\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[1];\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE];\nuniform float directionalLightShadowMapSizes[1];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\n#endif\n#endif\n\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT];\nuniform float pointLightShadowMapSizes[POINT_LIGHT_SHADOWMAP_COUNT];\n#endif\n\nuniform bool shadowEnabled : true;\n\n#ifdef PCF_KERNEL_SIZE\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\n#endif\n\n@import qtek.plugin.shadow_map_common\n\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\n float shadowContrib;\n for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n shadowContrib = computeShadowContrib(\n spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\n spotLightShadowMapSizes[_idx_]\n );\n shadowContribs[_idx_] = shadowContrib;\n }}\n for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n\n#endif\n\n\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n\n#ifdef SHADOW_CASCADE\n\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n / (gl_DepthRange.far - gl_DepthRange.near);\n\n float shadowContrib;\n shadowContribs[0] = 1.0;\n\n for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n if (\n depth >= shadowCascadeClipsNear[_idx_] &&\n depth <= shadowCascadeClipsFar[_idx_]\n ) {\n shadowContrib = computeShadowContrib(\n directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\n directionalLightShadowMapSizes[0],\n vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n );\n shadowContribs[0] = shadowContrib;\n }\n }}\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n\n#else\n\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n float shadowContrib;\n\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n shadowContrib = computeShadowContrib(\n directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\n directionalLightShadowMapSizes[_idx_]\n );\n shadowContribs[_idx_] = shadowContrib;\n }}\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n\n#endif\n\n\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\n vec3 lightPosition;\n vec3 direction;\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n lightPosition = pointLightPosition[_idx_];\n direction = position - lightPosition;\n shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\n }}\n for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n\n#endif\n\n#endif\n\n@end"},function(t,e){t.exports="@export qtek.skybox.vertex\n\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end\n\n@export qtek.skybox.fragment\n\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform float lod: 0.0;\n\nvarying vec3 v_WorldPosition;\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec3 eyePos = viewInverse[3].xyz;\n vec3 viewDirection = normalize(v_WorldPosition - eyePos);\n\n vec3 tex = decodeHDR(textureCubeLodEXT(environmentMap, viewDirection, lod)).rgb;\n\n#ifdef SRGB_DECODE\n tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n\n gl_FragColor = encodeHDR(vec4(tex, 1.0));\n}\n@end"},function(t,e){t.exports="\n@export qtek.util.rand\nhighp float rand(vec2 uv) {\n const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\n return fract(sin(sn) * c);\n}\n@end\n\n@export qtek.util.calculate_attenuation\n\nuniform float attenuationFactor : 5.0;\n\nfloat lightAttenuation(float dist, float range)\n{\n float attenuation = 1.0;\n attenuation = dist*dist/(range*range+1.0);\n float att_s = attenuationFactor;\n attenuation = 1.0/(attenuation*att_s+1.0);\n att_s = 1.0/(att_s+1.0);\n attenuation = attenuation - att_s;\n attenuation /= 1.0 - att_s;\n return clamp(attenuation, 0.0, 1.0);\n}\n\n@end\n\n@export qtek.util.edge_factor\n\nfloat edgeFactor(float width)\n{\n vec3 d = fwidth(v_Barycentric);\n vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n return min(min(a3.x, a3.y), a3.z);\n}\n\n@end\n\n@export qtek.util.encode_float\nvec4 encodeFloat(const in float depth)\n{\n \n \n const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n const vec4 bit_mask = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n vec4 res = fract(depth * bitShifts);\n res -= res.xxyz * bit_mask;\n\n return res;\n}\n@end\n\n@export qtek.util.decode_float\nfloat decodeFloat(const in vec4 color)\n{\n \n \n const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n return dot(color, bitShifts);\n}\n@end\n\n\n@export qtek.util.float\n@import qtek.util.encode_float\n@import qtek.util.decode_float\n@end\n\n\n\n@export qtek.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n return range * rgbm.rgb * rgbm.a;\n }\n@end\n\n@export qtek.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n if (dot(color, color) == 0.0) {\n return vec4(0.0);\n }\n vec4 rgbm;\n color /= range;\n rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\n rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n rgbm.rgb = color / rgbm.a;\n return rgbm;\n}\n@end\n\n@export qtek.util.rgbm\n@import qtek.util.rgbm_decode\n@import qtek.util.rgbm_encode\n\nvec4 decodeHDR(vec4 color)\n{\n#if defined(RGBM_DECODE) || defined(RGBM)\n return vec4(RGBMDecode(color, 51.5), 1.0);\n#else\n return color;\n#endif\n}\n\nvec4 encodeHDR(vec4 color)\n{\n#if defined(RGBM_ENCODE) || defined(RGBM)\n return RGBMEncode(color.xyz, 51.5);\n#else\n return color;\n#endif\n}\n\n@end\n\n\n@export qtek.util.srgb\n\nvec4 sRGBToLinear(in vec4 value) {\n return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\n}\n\nvec4 linearTosRGB(in vec4 value) {\n return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\n}\n@end\n\n\n@export qtek.chunk.skinning_header\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\n#ifdef USE_SKIN_MATRICES_TEXTURE\nuniform sampler2D skinMatricesTexture;\nuniform float skinMatricesTextureSize: unconfigurable;\nmat4 getSkinMatrix(float idx) {\n float j = idx * 4.0;\n float x = mod(j, skinMatricesTextureSize);\n float y = floor(j / skinMatricesTextureSize) + 0.5;\n vec2 scale = vec2(skinMatricesTextureSize);\n\n return mat4(\n texture2D(skinMatricesTexture, vec2(x + 0.5, y) / scale),\n texture2D(skinMatricesTexture, vec2(x + 1.5, y) / scale),\n texture2D(skinMatricesTexture, vec2(x + 2.5, y) / scale),\n texture2D(skinMatricesTexture, vec2(x + 3.5, y) / scale)\n );\n}\n#else\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\nmat4 getSkinMatrix(float idx) {\n return skinMatrix[int(idx)];\n}\n#endif\n\n#endif\n\n@end\n\n@export qtek.chunk.skin_matrix\n\nmat4 skinMatrixWS;\nif (weight.x > 1e-4)\n{\n skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\n}\nif (weight.y > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\n}\nif (weight.z > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\n}\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\nif (weightW > 1e-3)\n{\n skinMatrixWS += getSkinMatrix(joint.w) * weightW;\n}\n@end\n\n\n\n@export qtek.util.parallax_correct\n\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\n vec3 first = (boxMax - pos) / dir;\n vec3 second = (boxMin - pos) / dir;\n\n vec3 further = max(first, second);\n float dist = min(further.x, min(further.y, further.z));\n\n vec3 fixedPos = pos + dir * dist;\n vec3 boxCenter = (boxMax + boxMin) * 0.5;\n\n return normalize(fixedPos - boxCenter);\n}\n\n@end\n\n\n\n@export qtek.util.clamp_sample\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\n{\n#ifdef STEREO\n float eye = step(0.5, coord.x) * 0.5;\n vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\n#else\n vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\n#endif\n return texture2D(texture, coordClamped);\n}\n@end"},function(t,e){t.exports="@export qtek.wireframe.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n\n@import qtek.chunk.skinning_header\n\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n\n @import qtek.chunk.skin_matrix\n\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0 );\n\n v_Barycentric = barycentric;\n}\n\n@end\n\n\n@export qtek.wireframe.fragment\n\nuniform vec3 color : [0.0, 0.0, 0.0];\n\nuniform float alpha : 1.0;\nuniform float lineWidth : 1.0;\n\nvarying vec3 v_Barycentric;\n\n\n@import qtek.util.edge_factor\n\nvoid main()\n{\n\n gl_FragColor.rgb = color;\n gl_FragColor.a = (1.0-edgeFactor(lineWidth)) * alpha;\n}\n\n@end"},function(t,e,n){"use strict";var r=n(12),i=n(14),a=n(8),o=n(29),s=n(3),u=n(0),l=u.mat4,c=u.vec3,h={merge:function(t,e){if(t.length){var n=t[0],a=n.geometry,o=n.material,u=new r;u.boundingBox=new s;for(var h=a.getEnabledAttributes(),f=0;f<h.length;f++){var d=h[f],_=a.attributes[d];u.attributes[d]||(u.attributes[d]=_.clone(!1))}for(var m=l.create(),p=0,v=0,g=0;g<t.length;g++){var y=t[g].geometry;y.boundingBox&&(y.boundingBox.applyTransform(e?t[g].worldTransform:t[g].localTransform),u.boundingBox.union(y.boundingBox)),p+=y.vertexCount,v+=y.triangleCount}for(var x=0;x<h.length;x++){var d=h[x];u.attributes[d].init(p)}u.indices=p>=65535?new Uint32Array(3*v):new Uint16Array(3*v);for(var T=0,E=0,b=a.isUseIndices(),A=0;A<t.length;A++){var S=t[A],y=S.geometry,p=y.vertexCount,N=e?S.worldTransform._array:S.localTransform._array;l.invert(m,N),l.transpose(m,m);for(var C=0;C<h.length;C++){var d=h[C],R=y.attributes[d],M=u.attributes[d];if(R.value.length){for(var w=R.value.length,I=R.size,D=T*I,L=w/I,f=0;f<w;f++)M.value[D+f]=R.value[f];"position"===d?c.forEach(M.value,I,D,L,c.transformMat4,N):"normal"!==d&&"tangent"!==d||c.forEach(M.value,I,D,L,c.transformMat4,m)}}if(b){for(var w=y.indices.length,f=0;f<w;f++)u.indices[f+E]=y.indices[f]+T;E+=w}T+=p}return new i({material:o,geometry:u})}},splitByJoints:function(t,e,n,s,u){var l=t.geometry,c=t.skeleton,h=t.material,f=h.shader,d=t.joints;if(l&&c&&d.length){if(d.length<e)return t;for(var _={},m=l.indices,p=l.triangleCount,v=p,g=[],y=l.attributes.joint.value,x=0;x<p;x++)g[x]=!1;for(var T=[],E=[],b=function(t){return d[t]};v>0;){for(var A=[],S=[],N=[],C=0,x=0;x<d.length;x++)S[x]=-1;for(var R=0;R<p;R++)if(!g[R]){for(var M=!0,w=0,x=0;x<3;x++)for(var I=m[3*R+x],D=0;D<4;D++){var L=y[4*I+D];L>=0&&-1===S[L]&&(C<e?(S[L]=C,N[C++]=L,T[w++]=L):M=!1)}if(M)A.push(m.subarray(3*R,3*(R+1))),g[R]=!0,v--;else for(var x=0;x<w;x++)S[T[x]]=-1,N.pop(),C--}E.push({triangles:A,joints:N.map(b),jointReverseMap:S})}var O=new a({name:t.name}),P=l.getEnabledAttributes();P.splice(P.indexOf("joint"),1);for(var U=[],F=0;F<E.length;F++){var k=E[F],B=k.jointReverseMap,C=k.joints.length,H=h.clone();if(h instanceof o)H.jointCount=C;else{var W;if(s&&u){var G={};for(var q in f.vertexDefines)G[q]=f.vertexDefines[q];G.JOINT_COUNT=C,W=s.get(u,{textures:f.getEnabledTextures(),vertexDefines:G,fragmentDefines:f.fragmentDefines})}else(W=_[C])||(W=f.clone(),W.define("vertex","JOINT_COUNT",C),_[C]=W);H.attachShader(W,!0)}H.name=[h.name,F].join("-");for(var V=new r,z=new i({name:[t.name,x].join("-"),material:H,geometry:V,skeleton:c,joints:k.joints.slice()}),j=0,X=l.vertexCount,x=0;x<X;x++)U[x]=-1;for(var R=0;R<k.triangles.length;R++)for(var Y=k.triangles[R],x=0;x<3;x++){var I=Y[x];-1===U[I]&&(U[I]=j,j++)}for(var K=0;K<P.length;K++){var Z=P[K],Q=V.attributes[Z];Q.init(j)}V.attributes.joint.value=new Float32Array(4*j),V.indices=j>65535?new Uint32Array(3*k.triangles.length):new Uint16Array(3*k.triangles.length);var J=0;j=0;for(var x=0;x<X;x++)U[x]=-1;for(var R=0;R<k.triangles.length;R++)for(var $=k.triangles[R],x=0;x<3;x++){var I=$[x];if(-1===U[I]){U[I]=j;for(var K=0;K<P.length;K++)for(var Z=P[K],tt=l.attributes[Z],Q=V.attributes[Z],et=tt.size,D=0;D<et;D++)Q.value[j*et+D]=tt.value[I*et+D];for(var D=0;D<4;D++){var L=l.attributes.joint.value[4*I+D],nt=4*j+D;V.attributes.joint.value[nt]=L>=0?B[L]:-1}j++}V.indices[J++]=U[I]}V.updateBoundingBox(),O.add(z)}for(var rt=t.children(),x=0;x<rt.length;x++)O.add(rt[x]);if(O.position.copy(t.position),O.rotation.copy(t.rotation),O.scale.copy(t.scale),n&&t.getParent()){var it=t.getParent();it.remove(t),it.add(O)}return O}}};t.exports=h}])});